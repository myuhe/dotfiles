Info file: emacs-ja.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `emacs-ja.texi'
using `texinfmt.el' version 2.38 of 3 July 1998.


Emacs 20.6版対応に改訂した`GNU Emacs Manual' 13版です。

INFO-DIR-SECTION Editors
START-INFO-DIR-ENTRY
* Emacs: (emacs-ja).	The extensible self-documenting text editor.
END-INFO-DIR-ENTRY


Published by the Free Software Foundation 59 Temple Place, Suite 330
Boston, MA 02111-1307 USA

Copyright (C) 1985, 1986, 1987, 1993, 1994, 1995, 1996, 1997, 1998,
1999 Free Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that
the sections entitled "The GNU Manifesto", "Distribution" and "GNU
General Public License" are included exactly as in the original, and
provided that the entire resulting derived work is distributed under
the terms of a permission notice identical to this one.

Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the sections entitled "The GNU Manifesto",
"Distribution" and "GNU General Public License" may be included in a
translation approved by the Free Software Foundation instead of in the
original English.





File: emacs-ja.info, Node: Top, Next: Distrib, Prev: (dir), Up: (dir)

The Emacs Editor
****************

Emacsは、拡張可能で、カスタマイズ可能な、セルフドキュメント方式のリア
ルタイム画面エディタです。このinfoファイルでは、Emacsでの編集方法や
Emacsのカスタマイズ方法の一部について説明します。GNU Emacs 20.6版に対
応します。Emacsの拡張に関しては、*Note Emacs Lisp: (elisp), を参照して
ください。


* Menu:

* Distrib::	        How to get the latest Emacs distribution.
* Copying::	        The GNU General Public License gives you permission
			  to redistribute GNU Emacs on certain terms;
			  it also explains that there is no warranty.
* Intro::	        An introduction to Emacs concepts.
* Glossary::	        The glossary.
* Antinews::	        Information about Emacs version 19.
* MS-DOS::              Using Emacs on MS-DOS (otherwise known as "MS-DOG").
* Manifesto::	        What's GNU?  Gnu's Not Unix!
* Acknowledgments::     Major contributors to GNU Emacs.

索引
* Key Index::	        An item for each standard Emacs key sequence.
* Command Index::       An item for each command name.
* Variable Index::      An item for each documented variable.
* Concept Index::       An item for each concept.

重要な全般的な概念
* Screen::	        How to interpret what you see on the screen.
* User Input::	        Kinds of input events (characters, buttons,
                          function keys).
* Keys::	        Key sequences: what you type to request one
                          editing action.
* Commands::	        Named functions run by key sequences to do editing.
* Text Characters::     Character set for text (the contents of buffers 
			  and strings).
* Entering Emacs::      Starting Emacs from the shell.
* Exiting::	        Stopping or killing Emacs.
* Command Arguments::   Hairy startup options.

基本的な編集コマンド
* Basic::	        The most basic editing commands.
* Minibuffer::	        Entering arguments that are prompted for.
* M-x::		        Invoking commands by their names.
* Help::	        Commands for asking Emacs about its commands.

重要なテキスト変更コマンド
* Mark::	        The mark: how to delimit a "region" of text.
* Killing::	        Killing text.
* Yanking::	        Recovering killed text.  Moving text.
* Accumulating Text::   Other ways of copying text.
* Rectangles::	        Operating on the text inside a rectangle on the screen.
* Registers::	        Saving a text string or a location in the buffer.
* Display::	        Controlling what text is displayed.
* Search::	        Finding or replacing occurrences of a string.
* Fixit::	        Commands especially useful for fixing typos.

Emacsの主要な構造
* Files::	        All about handling files.
* Buffers::	        Multiple buffers; editing several files at once.
* Windows::	        Viewing two pieces of text at once.
* Frames::	        Running the same Emacs session in multiple X windows.
* International::       Using non-ASCII character sets (the MULE features).

中級向けの機能
* Major Modes::	        Text mode vs. Lisp mode vs. C mode ...
* Indentation::	        Editing the white space at the beginnings of lines.
* Text::	        Commands and modes for editing English.
* Programs::	        Commands and modes for editing programs.
* Building::	        Compiling, running and debugging programs.
* Abbrevs::	        How to define text abbreviations to reduce
			  the number of characters you must type.
* Picture::	        Editing pictures made up of characters
			  using the quarter-plane screen model.
* Sending Mail::        Sending mail in Emacs.
* Rmail::	        Reading mail in Emacs.
* Dired::	        You can "edit" a directory to manage files in it.
* Calendar/Diary::      The calendar and diary facilities.
* Gnus::	        How to read netnews with Emacs.
* Shell::	        Executing shell commands from Emacs.
* Emacs Server::        Using Emacs as an editing server for `mail', etc.
* Hardcopy::	        Printing buffers or regions.
* Postscript::	        Printing buffers or regions as Postscript.
* Postscript Variables::
                        Customizing the Postscript printing commands.
* Sorting::	        Sorting lines, paragraphs or pages within Emacs.
* Narrowing::	        Restricting display and editing to a portion
		          of the buffer.
* Two-Column::	        Splitting apart columns to edit them
		          in side-by-side windows.
* Editing Binary Files::
                        Using Hexl mode to edit binary files.
* Saving Emacs Sessions::
                        Saving Emacs state from one session to the next.
* Recursive Edit::      A command can allow you to do editing
			  "within the command".  This is called a
			  `recursive editing level'.
* Emulation::	        Emulating some other editors with Emacs.
* Dissociated Press::   Dissociating text for fun.
* Amusements::	        Various games and hacks.
* Customization::       Modifying the behavior of Emacs.

トラブルからの復旧
* Quitting::	        Quitting and aborting.
* Lossage::	        What to do if Emacs is hung or malfunctioning.
* Bugs::	        How and when to report a bug.
* Contributing::        How to contribute improvements to Emacs.
* Service::	        How to get help for your own Emacs needs.

以下は、上にあげたメニューの下位メニューです。
1ステップで移動できるように示しておきます。

−−− 詳細ノード一覧 −−−

スクリーンの構成

* Point::	        The place in the text where editing commands operate.
* Echo Area::           Short messages appear at the bottom of the screen.
* Mode Line::	        Interpreting the mode line.
* Menu Bar::            How to use the menu bar.

基本編集コマンド

* Inserting Text::      Inserting text by simply typing it.
* Moving Point::        How to move the cursor to the place where you want to
			  change something.
* Erasing::	        Deleting and killing text.
* Undo::	        Undoing recent changes in the text.
* Files: Basic Files.   Visiting, creating, and saving files.
* Help: Basic Help.     Asking what a character does.
* Blank Lines::	        Commands to make or delete blank lines.
* Continuation Lines::  Lines too wide for the screen.
* Position Info::       What page, line, row, or column is point on?
* Arguments::	        Numeric arguments for repeating a command.

ミニバッファ

* Minibuffer File::     Entering file names with the minibuffer.
* Minibuffer Edit::     How to edit in the minibuffer.
* Completion::		An abbreviation facility for minibuffer input.
* Minibuffer History::	Reusing recent minibuffer arguments.
* Repetition::		Re-executing commands that used the minibuffer.

ヘルプ

* Help Summary::	Brief list of all Help commands.
* Key Help::		Asking what a key does in Emacs.
* Name Help::		Asking about a command, variable or function name.
* Apropos::		Asking what pertains to a given topic.
* Library Keywords::	Finding Lisp libraries by keywords (topics).
* Language Help::       Help relating to international language support.
* Misc Help::		Other help commands.

マークとリージョン

* Setting Mark::	Commands to set the mark.
* Transient Mark::	How to make Emacs highlight the region--
			  when there is one.
* Using Region::	Summary of ways to operate on contents of the region.
* Marking Objects::	Commands to put region around textual units.
* Mark Ring::		Previous mark positions saved so you can go back there.
* Global Mark Ring::	Previous mark positions in various buffers.

削除とキル

* Deletion::		Commands for deleting small amounts of text and
			  blank areas.
* Killing by Lines::	How to kill entire lines of text at one time.
* Other Kill Commands:: Commands to kill large regions of text and
			  syntactic units such as words and sentences. 

ヤンク

* Kill Ring::		Where killed text is stored.  Basic yanking.
* Appending Kills::	Several kills in a row all yank together.
* Earlier Kills::	Yanking something killed some time ago.

レジスタ

* RegPos::      	Saving positions in registers.
* RegText::     	Saving text in registers.
* RegRect::     	Saving rectangles in registers.
* RegConfig::           Saving window configurations in registers.
* RegFiles::    	File names in registers.
* Bookmarks::           Bookmarks are like registers, but persistent.

表示方法の制御

* Scrolling::	           Moving text up and down in a window.
* Horizontal Scrolling::   Moving text left and right in a window.
* Follow Mode::            Follow mode lets two windows scroll as one.
* Selective Display::      Hiding lines with lots of indentation.
* Optional Mode Line::     Optional mode line display features.
* Text Display::           How text is normally displayed.
* Display Vars::           Information on variables for customizing display.

探索と置換

* Incremental Search::	   Search happens as you type the string.
* Nonincremental Search::  Specify entire string and then search.
* Word Search::		   Search for sequence of words.
* Regexp Search::	   Search for match for a regexp.
* Regexps::		   Syntax of regular expressions.
* Search Case::		   To ignore case while searching, or not.
* Replace::		   Search, and replace some or all matches.
* Other Repeating Search:: Operating on all matches for some regexp.

置換コマンド

* Unconditional Replace::  Replacing all matches for a string.
* Regexp Replace::	   Replacing all matches for a regexp.
* Replacement and Case::   How replacements preserve case of letters.
* Query Replace::	   How to use querying.

綴り誤り訂正用のコマンド

* Kill Errors::         Commands to kill a batch of recently entered text.
* Transpose::	        Exchanging two characters, words, lines, lists...
* Fixing Case::         Correcting case of last word entered.
* Spelling::	        Apply spelling checker to a word or a whole buffer.

ファイルの扱い方

* File Names::          How to type and edit file-name arguments.
* Visiting::            Visiting a file prepares Emacs to edit the file.
* Saving::              Saving makes your changes permanent.
* Reverting::           Reverting cancels all the changes not saved.
* Auto Save::           Auto Save periodically protects against loss of data.
* File Aliases::        Handling multiple names for one file.
* Version Control::     Version control systems (RCS, CVS and SCCS).
* Directories::         Creating, deleting, and listing file directories.
* Comparing Files::     Finding where two files differ.
* Misc File Ops::       Other things you can do on files.
* Compressed Files::    Accessing compressed files.
* Remote Files::        Accessing files on other sites.
* Quoted File Names::   Quoting special characters in file names.

ファイルの保存

* Backup::              How Emacs saves the old version of your file.
* Interlocking::        How Emacs protects against simultaneous editing
                          of one file by two users.

版管理

* Introduction to VC::  How version control works in general.
* VC Mode Line::     How the mode line shows version control status.
* Basic VC Editing::    How to edit a file under version control.
* Old Versions::        Examining and comparing old versions.
* Secondary VC Commands::    The commands used a little less frequently.
* Branches::            Multiple lines of development.
* Snapshots::           Sets of file versions treated as a unit.
* Miscellaneous VC::    Various other commands and features of VC.
* Customizing VC::      Variables that change VC's behavior.

複数のバッファの使い方

* Select Buffer::       Creating a new buffer or reselecting an old one.
* List Buffers::        Getting a list of buffers that exist.
* Misc Buffer::	        Renaming; changing read-onlyness; copying text.
* Kill Buffer::	        Killing buffers you no longer need.
* Several Buffers::     How to go through the list of all buffers
			  and operate variously on several of them.
* Indirect Buffers::    An indirect buffer shares the text of another buffer. 

複数のウィンドウ

* Basic Window::        Introduction to Emacs windows.
* Split Window::        New windows are made by splitting existing windows.
* Other Window::        Moving to another window or doing something to it.
* Pop Up Window::       Finding a file or buffer in another window.
* Force Same Window::   Forcing certain buffers to appear in the selected
                          window rather than in another window.
* Change Window::       Deleting windows and changing their sizes.

フレームとXウィンドウシステム

* Mouse Commands::      Moving, cutting, and pasting, with the mouse.
* Secondary Selection:: Cutting without altering point and mark.
* Mouse References::    Using the mouse to select an item from a list.
* Menu Mouse Clicks::   Mouse clicks that bring up menus.
* Mode Line Mouse::     Mouse clicks on the mode line.
* Creating Frames::     Creating additional Emacs frames with various contents.
* Multiple Displays::   How one Emacs job can talk to several displays.
* Special Buffer Frames::  You can make certain buffers have their own frames.
* Frame Parameters::    Changing the colors and other modes of frames.
* Scroll Bars::	        How to enable and disable scroll bars; how to use them.
* Menu Bars::	        Enabling and disabling the menu bar.
* Faces::	        How to change the display style using faces.
* Font Lock::           Minor mode for syntactic highlighting using faces.
* Support Modes::       Font Lock support modes make Font Lock faster.
* Misc X::	        Iconifying and deleting frames.  Region highlighting.
* Non-Window Terminals::  Multiple frames on terminals that show only one.

フォントロックモード

* Fast Lock Mode::      Saving font information in files.
* Lazy Lock Mode::      Fontifying only text that is actually displayed.
* Fast or Lazy::        Which support mode is best for you?

国際化文字集合

* International Intro::     Basic concepts of multibyte characters.
* Enabling Multibyte::      Controlling whether to use multibyte characters.
* Language Environments::   Setting things up for the language you use.
* Input Methods::           Entering text characters not on your keyboard.
* Select Input Method::     Specifying your choice of input methods.
* Coding Systems::          Character set conversion when you read and
                              write files, and so on.
* Recognize Coding::        How Emacs figures out which conversion to use.
* Specify Coding::          Various ways to choose which conversion to use.
* Fontsets::                Fontsets are collections of fonts
                              that cover the whole spectrum of characters.
* Defining Fontsets::       Defining a new fontset.
* Single-Byte European Support::
                            You can pick one European character set
                            to use without multibyte characters.

メジャーモード

* Choosing Modes::      How major modes are specified or chosen.

字下げ

* Indentation Commands::  Various commands and techniques for indentation.
* Tab Stops::		  You can set arbitrary "tab stops" and then
			    indent to the next tab stop when you want to.
* Just Spaces::		  You can request indentation using just spaces.

自然言語向けコマンド

* Words::	        Moving over and killing words.
* Sentences::	        Moving over and killing sentences.
* Paragraphs::	        Moving over paragraphs.
* Pages::	        Moving over pages.
* Filling::	        Filling or justifying text.
* Case::	        Changing the case of text.
* Text Mode::	        The major modes for editing text files.
* Outline Mode::        Editing outlines.
* TeX Mode::	        Editing input to the formatter TeX.
* Nroff Mode::	        Editing input to the formatter nroff.
* Formatted Text::      Editing formatted text directly in WYSIWYG fashion.

テキストを詰め込む

* Auto Fill::	        Auto Fill mode breaks long lines automatically.
* Fill Commands::       Commands to refill paragraphs and center lines.
* Fill Prefix::	        Filling paragraphs that are indented
                          or in a comment, etc.
* Adaptive Fill::       How Emacs can determine the fill prefix automatically.

プログラムの編集

* Program Modes::       Major modes for editing programs.
* Lists::	        Expressions with balanced parentheses.
* List Commands::       The commands for working with list and sexps.
* Defuns::	        Each program is made up of separate functions.
			  There are editing commands to operate on them.
* Program Indent::      Adjusting indentation to show the nesting.
* Matching::	        Insertion of a close-delimiter flashes matching open.
* Comments::	        Inserting, killing, and aligning comments.
* Balanced Editing::    Inserting two matching parentheses at once, etc.
* Symbol Completion::   Completion on symbol names of your program or language.
* Documentation::       Getting documentation of functions you plan to call.
* Change Log::	        Maintaining a change history for your program.
* Tags::	        Go directly to any function in your program in one
			  command.  Tags remembers which file it is in.
* Emerge::	        A convenient way of merging two versions of a program.
* C Modes::             Special commands of C, C++, Objective-C and Java modes.
* Fortran::	        Fortran mode and its special features.
* Asm Mode::	        Asm mode and its special features.

プログラムの字下げ

* Basic Indent::	Indenting a single line.
* Multi-line Indent::	Commands to reindent many lines at once.
* Lisp Indent::		Specifying how each Lisp function should be indented.
* C Indent::		Choosing an indentation style for C code.

タグテーブル

* Tag Syntax::		Tag syntax for various types of code and text files.  
* Create Tags Table::	Creating a tags table with `etags'.
* Select Tags Table::	How to visit a tags table.
* Find Tag::		Commands to find the definition of a specific tag. 
* Tags Search::		Using a tags table for searching and replacing.
* List Tags::		Listing and finding tags defined in a file.

emergeによるファイルの併合

* Overview of Emerge::	How to start Emerge.  Basic concepts.
* Submodes of Emerge::	Fast mode vs. Edit mode.
			  Skip Prefers mode and Auto Advance mode.
* State of Difference::	You do the merge by specifying state A or B
			  for each difference.
* Merge Commands::	Commands for selecting a difference,
			  changing states of differences, etc.
* Exiting Emerge::	What to do when you've finished the merge.
* Combining in Emerge::	    How to keep both alternatives for a difference.
* Fine Points of Emerge::   Misc.

プログラムのコンパイルとテスト

* Compilation::		Compiling programs in languages other
			  than Lisp (C, Pascal, etc.).
* Compilation Mode::    The mode for visiting compiler errors.
* Compilation Shell::   Customizing your shell properly
                          for use in the compilation buffer.
* Debuggers::		Running symbolic debuggers for non-Lisp programs. 
* Executing Lisp::	Various modes for editing Lisp programs, 
			  with different facilities for running
			  the Lisp programs. 
* Lisp Libraries::      Creating Lisp programs to run in Emacs.
* Lisp Interaction::    Executing Lisp in an Emacs buffer.
* Lisp Eval::		Executing a single Lisp expression in Emacs.
* External Lisp::	Communicating through Emacs with a separate Lisp. 

Emacsでデバッガを起動する

* Starting GUD::	How to start a debugger subprocess.
* Debugger Operation::	Connection between the debugger and source buffers.
* Commands of GUD::	Key bindings for common commands.
* GUD Customization::	Defining your own commands for GUD.

略語

* Abbrev Concepts::     Fundamentals of defined abbrevs.
* Defining Abbrevs::    Defining an abbrev, so it will expand when typed.
* Expanding Abbrevs::   Controlling expansion: prefixes, canceling expansion.
* Editing Abbrevs::     Viewing or editing the entire list of defined abbrevs.
* Saving Abbrevs::      Saving the entire list of abbrevs for another session.
* Dynamic Abbrevs::     Abbreviations for words already in the buffer.

絵の編集

* Basic Picture::	Basic concepts and simple commands of Picture Mode.
* Insert in Picture::	Controlling direction of cursor motion
			  after "self-inserting" characters.
* Tabs in Picture::	Various features for tab stops and indentation.
* Rectangles in Picture:: Clearing and superimposing rectangles.

メイルの送信

* Mail Format:: 	Format of the mail being composed.
* Mail Headers::        Details of permitted mail header fields.
* Mail Aliases::        Abbreviating and grouping mail addresses.
* Mail Mode::   	Special commands for editing mail being composed.
* Distracting NSA::     How to distract the NSA's attention.
* Mail Methods::        Using alternative mail-composition methods.

rmailでメイルを読む

* Rmail Basics::        Basic concepts of Rmail, and simple use.
* Rmail Scrolling::     Scrolling through a message.
* Rmail Motion::        Moving to another message.
* Rmail Deletion::      Deleting and expunging messages.
* Rmail Inbox::         How mail gets into the Rmail file.
* Rmail Files::         Using multiple Rmail files.
* Rmail Output::        Copying message out to files.
* Rmail Labels::        Classifying messages by labeling them.
* Rmail Attributes::    Certain standard labels, called attributes.
* Rmail Reply::         Sending replies to messages you are viewing.
* Rmail Summary::       Summaries show brief info on many messages.
* Rmail Sorting::       Sorting messages in Rmail.
* Rmail Display::       How Rmail displays a message; customization.
* Rmail Editing::       Editing message text and headers in Rmail.
* Rmail Digest::        Extracting the messages from a digest message.
* Out of Rmail::	Converting an Rmail file to mailbox format.
* Rmail Rot13::         Reading messages encoded in the rot13 code.
* Movemail::            More details of fetching new mail.

ディレクトリエディタdired

* Dired Enter:: 	     How to invoke Dired.
* Dired Commands::           Commands in the Dired buffer.
* Dired Deletion::           Deleting files with Dired.
* Flagging Many Files::      Flagging files based on their names.
* Dired Visiting::           Other file operations through Dired.
* Marks vs Flags::	     Flagging for deletion vs marking.
* Operating on Files::	     How to copy, rename, print, compress, etc.
			       either one file or several files.
* Shell Commands in Dired::  Running a shell command on the marked files.
* Transforming File Names::  Using patterns to rename multiple files.
* Comparison in Dired::	     Running `diff' by way of Dired.
* Subdirectories in Dired::  Adding subdirectories to the Dired buffer.
* Subdirectory Motion::	     Moving across subdirectories, and up and down.
* Hiding Subdirectories::    Making subdirectories visible or invisible.
* Dired Updating::           Discarding lines for files of no interest.
* Dired and Find::	     Using `find' to choose the files for Dired.

暦と日誌

* Calendar Motion::     Moving through the calendar; selecting a date.
* Scroll Calendar::     Bringing earlier or later months onto the screen.
* Counting Days::       How many days are there between two dates?
* General Calendar::    Exiting or recomputing the calendar.
* LaTeX Calendar::        Print a calendar using LaTeX.
* Holidays::            Displaying dates of holidays.
* Sunrise/Sunset::      Displaying local times of sunrise and sunset.
* Lunar Phases::        Displaying phases of the moon.
* Other Calendars::     Converting dates to other calendar systems.
* Diary::               Displaying events from your diary.
* Appointments::	Reminders when it's time to do something.
* Daylight Savings::    How to specify when daylight savings time is active.

カレンダー内の移動

* Calendar Unit Motion::      Moving by days, weeks, months, and years.
* Move to Beginning or End::  Moving to start/end of weeks, months, and years.
* Specified Dates::	      Moving to the current date or another
				specific date.

さまざまな暦のあいだの変換

* Calendar Systems::	   The calendars Emacs understands
			     (aside from Gregorian).
* To Other Calendar::	   Converting the selected date to various calendars.
* From Other Calendar::	   Moving to a date specified in another calendar.
* Mayan Calendar::	   Moving to a date specified in a Mayan calendar.

日誌

* Diary Commands::	   Viewing diary entries and associated calendar dates.
* Format of Diary File::   Entering events in your diary.
* Date Formats::	   Various ways you can specify dates.
* Adding to Diary::	   Commands to create diary entries.
* Special Diary Entries::  Anniversaries, blocks of dates, cyclic entries, etc.

GNUS

* Buffers of Gnus::	The group, summary, and article buffers.
* Gnus Startup::	What you should know about starting Gnus.
* Summary of Gnus::	A short description of the basic Gnus commands.

Emacsからシェルコマンドを起動する

* Single Shell::	How to run one shell command and return.
* Interactive Shell::	Permanent shell taking input via Emacs.
* Shell Mode::		Special Emacs commands used with permanent shell.
* Shell History::       Repeating previous commands in a shell buffer.
* Shell Options::       Options for customizing Shell mode.
* Remote Host::		Connecting to another computer.

カスタマイズ

* Minor Modes::		Each minor mode is one feature you can turn on
			  independently of any others.
* Variables::		Many Emacs commands examine Emacs variables
			  to decide what to do; by setting variables,
			  you can control their functioning.
* Keyboard Macros::	A keyboard macro records a sequence of
			  keystrokes to be replayed with a single command. 
* Key Bindings::	The keymaps say what command each key runs.
			  By changing them, you can "redefine keys".
* Keyboard Translations::
                        If your keyboard passes an undesired code
			   for a key, you can tell Emacs to
			   substitute another code. 
* Syntax::		The syntax table controls how words and
			   expressions are parsed.
* Init File::		How to write common customizations in the
			  `.emacs' file. 

変数

* Examining::	        Examining or setting one variable's value.
* Easy Customization::
                        Convenient and easy customization of variables.
* Hooks::	        Hook variables let you specify programs for parts
		          of Emacs to run on particular occasions.
* Locals::	        Per-buffer values of variables.
* File Variables::      How files can specify variable values.

キーボードマクロ

* Basic Kbd Macro::     Defining and running keyboard macros.
* Save Kbd Macro::      Giving keyboard macros names; saving them in files.
* Kbd Macro Query::     Making keyboard macros do different things each time.

キーバインドのカスタマイズ

* Keymaps::             Generalities.  The global keymap.
* Prefix Keymaps::      Keymaps for prefix keys.
* Local Keymaps::       Major and minor modes have their own keymaps.
* Minibuffer Maps::     The minibuffer uses its own local keymaps.
* Rebinding::           How to redefine one key's meaning conveniently.
* Init Rebinding::      Rebinding keys with your init file, `.emacs'.
* Function Keys::       Rebinding terminal function keys.
* Named ASCII Chars::   Distinguishing TAB from `C-i', and so on.
* Mouse Buttons::       Rebinding mouse buttons in Emacs.
* Disabling::           Disabling a command means confirmation is required
                          before it can be executed.  This is done to protect
                          beginners from surprises.

初期化ファイル`~/.emacs'

* Init Syntax::	        Syntax of constants in Emacs Lisp.
* Init Examples::       How to do some things with an init file.
* Terminal Init::       Each terminal type can have an init file.
* Find Init::	        How Emacs finds the init file.

Emacsのトラブルに対する対処

* DEL Gets Help::       What to do if DEL doesn't delete.
* Stuck Recursive::     `[...]' in mode line around the parentheses.
* Screen Garbled::      Garbage on the screen.
* Text Garbled::        Garbage in the text.
* Unasked-for Search::  Spontaneous entry to incremental search.
* Memory Full::         How to cope when you run out of memory.
* Emergency Escape::    Emergency escape---
                          What to do if Emacs stops responding.
* Total Frustration::   When you are at your wits' end.

バグの報告

* Criteria:  Bug Criteria.	 Have you really found a bug?
* Understanding Bug Reporting::	 How to report a bug effectively.
* Checklist::			 Steps to follow for a good bug report.
* Sending Patches::		 How to send a patch for GNU Emacs.

コマンド行オプションと引数

* Action Arguments::	Arguments to visit files, load libraries,
			  and call functions.
* Initial Options::     Arguments that take effect while starting Emacs.
* Command Example::     Examples of using command line arguments.
* Resume Arguments::	Specifying arguments when you resume a running Emacs.
* Environment::         Environment variables that Emacs uses.

* Display X::           Changing the default display and using remote login.
* Font X::	        Choosing a font for text, under X.
* Colors X::	        Choosing colors, under X.
* Window Size X::       Start-up window size, under X.
* Borders X::	        Internal and external borders, under X.
* Title X::             Specifying the initial frame's title.
* Icons X::             Choosing what sort of icon to use, under X.
* Resources X::         Advanced use of classes and resources, under X.
* Lucid Resources::     X resources for Lucid menus.
* Motif Resources::     X resources for Motif menus.

環境変数

* General Variables::	Environment variables that all versions of Emacs use.
* Misc Variables::	Certain system specific variables.

MS-DOSとWindows 95/98/NT

* MS-DOS Input::        Keyboard and mouse usage on MS-DOS.
* MS-DOS Display::      Fonts, frames and display size on MS-DOS.
* MS-DOS File Names::   File-name conventions on MS-DOS.
* Text and Binary::     Text files on MS-DOS use CRLF to separate lines.
* MS-DOS Printing::     How to specify the printer on MS-DOS.
* MS-DOS Processes::    Running subprocesses on MS-DOS.
* Windows Processes::   Running subprocesses on Windows.
* Windows System Menu:: Controlling what the ALT key does.




File: emacs-ja.info, Node: Distrib, Next: Intro, Prev: Top, Up: Top

配布
****

GNU Emacsは"フリーソフトウェア"です。誰でも自由に利用でき、条件付きで
自由に再配布できることを意味します。GNU Emacsはパブリックドメイン
（public domain）ではありません。著作権が設定してあり、その配布には制
限が課せられています。しかし、これらの制限は、善良な協調的な市民が行う
であろうことをすべて許すように意図したものです。許されないのは、配布先
に対して任意のバージョンのGNU Emacsの再配布を禁止する行為です。正確な
条件は、GNU Emacsと一緒に配布されていて以下の節にも掲載したGNU一般公有
使用許諾書 (1) (*Note Distrib-Footnotes::)にあります。

Gnu Emacsを入手する1つの方法は、持っている人から貰うことです。我々から
許可を得る必要はないですし、誰かに連絡する必要もありません。単にコピー
すればよいのです。Internetを利用できる場合には、匿名（anonymous）FTPで
GNU Emacsの最新配布版を入手できます。詳しくは、Emacsの配布の中のファイ
ル`etc/FTP'を見てください。

コンピュータを買うとGNU Emacsが付いてくるかもしれません。コンピュータ
製造業者も、他の人に適用されているのと同じ条項で、自由にコピーを配布で
きます。これらの条項によれば、製造業者は業者独自の変更も含めて完全なソー
スを提供するように求められており、しかも、GNU一般公有使用許諾書の条項
に基づくそのGNU Emacsの再配布を購入者に許可するように求められています。
いいかえれば、製造業者がプログラムを自由にできるだけでなく、購入者も買っ
たプログラムを自由にできる必要があるのです。

Free Software FoundationにGNU EmacsのCD-ROMを注文してもかまいません。
これは便利で確実な入手方法ですし、我々の仕事の資金援助にもなります。
（Foundationの資金のほとんどは、この方法に頼っている。）Emacsの配布の
中のファイル`etc/ORDERS'や、Webサイト
`http://www.gnu.org/order/order.html'に注文票があります。さらなる情報
を得るには、下記へお願いします。

     Free Software Foundation
     59 Temple Place, Suite 330
     Boston, MA  02111-1307 USA
     USA

配布代金から得た収入は、我々の目的、すなわち、新たなフリーソフトウェア
の開発とGNU Emacsを含めた既存プログラムの改良のために使われます。

GNU Emacsが有用だとわかったならば、我々の仕事を支援するためにFree
Software Foundationにぜひ*寄付を送って*ください。合衆国では、Free
Software Foundationへの寄付は税控除の対象になります。GNU Emacsを職場で
利用しているならば、寄付するように会社に提案してください。会社の方針が
慈善活動への寄付に冷淡であるならば、そのかわりとして、Free Software
Foundationに適宜CD-ROMを注文したり、定期購読するように提案してください。




File: emacs-ja.info  Node: Distrib-Footnotes, Up: Distrib

(1) 【訳注】日本語訳はあくまで『参考』である。正式な許諾書は英文のGNU
General Public Licenseであることに注意してほしい。


File: emacs-ja.info, Node: Copying, Next: Intro, Prev: Distrib, Up: Top

GNU一般公有使用許諾書
*********************
                       1991年6月 バージョン2.0

     Copyright (C) 1989, 1991 Free Software Foundation, Inc.  675 Mass
     Ave, Cambridge, MA 02139, USA (1) (*Note Copying-Footnotes::)
     【注意】 現在、このバージョン2の発行者(FSF)住所は、正式に新しい住所の
     59 Temple Place - Suite 330, Boston, MA 02111-1307, USA に変わっている。

     何人も、以下の内容を変更しないでそのまま複写する場合に限り、
     本使用許諾書を複製したり頒布することができます。


はじめに
========

 ほとんどのソフトウェアの使用許諾は、ソフトウェアを共有し、変更するユー
ザの自由を奪うことを意図しています。それに対して、我々のGNU一般公有使
用許諾は、フリー・ソフトウェアを共有したり変更する自由をユーザに保証す
るためのもの、即ちフリー・ソフトウェアがそのユーザ全てにとってフリーで
あることを保証するためのものです。本使用許諾は、Free Software
Foundationのほとんど全てのソフトウェアに適用されるだけでなく、プログラ
ムの作成者が本使用許諾に依るとした場合のそのプログラムにも適用すること
ができます。（その他の Free Software Foundation のソフトウェアのいくつ
かは、本許諾書ではなく、GNUライブラリ一般公有使用許諾で保護されます。）
あなたは自分のプログラムにもこれを適用できます。

 我々がフリー・ソフトウェアについて言う場合は自由のことに言及している
のであって、価格のことではありません。我々の一般公有使用許諾の各条項は、
次の事柄を確実に実現することを目的として立案されています。
   * フリー・ソフトウェアの複製物を自由に頒布できること（そして、望む
     ならあなたのこのサービスに対して対価を請求できること）。
   * ソース・コードを実際に受け取るか、あるいは、希望しさえすればそれ
     を入手することが可能であること。
   * 入手したソフトウェアを変更したり、新しいフリー・プログラムの一部
     として使用できること。
   * 以上の各内容を行なうことができるということをユーザ自身が知ってい
     ること。

 このようなユーザの権利を守るために、我々は、何人もこれらの権利を否定
したり、あるいは放棄するようにユーザに求めることはできないという制限条
項を設ける必要があります。これらの制限条項は、ユーザが、フリー・ソフト
ウェアの複製物を頒布したり変更しようとする場合には、そのユーザ自身が守
るべき義務ともなります。

 例えば、あなたがフリー・ソフトウェアの複製物を頒布する場合、有償か無
償かにかかわらず、あなたは自分の持っている権利を全て相手に与えなければ
なりません。あなたは、相手もまたソース・コードを受け取ったり入手できる
ということを認めなければなりません。さらにあなたは、彼らが自分たちの権
利を知るように、これらの条項を知らしめなければなりません。

　我々は次の２つの方法でユーザの権利を守ります。（１）ソフトウェアに著
作権を主張し、（２）本使用許諾の条項の下でソフトウェアを複製・頒布・変
更する権利をユーザに与えます。

 また、各作成者や我々自身を守るために、本フリー・ソフトウェアが無保証
であることを全ての人々が了解している必要があります。さらに、他の誰かに
よって変更されたソフトウェアが頒布された場合、受領者はそのソフトウェア
がオリジナル・バージョンではないということを知らされる必要があります。
それは、他人の関与によって原開発者に対する評価が影響されないようにする
ためです。

 最後に、どのフリー・プログラムもソフトウェア特許に絶えず脅かされてい
ます。我々は、フリー・プログラムの再頒布者が個人的に特許権を取得し、事
実上そのプログラムを自分の財産にしてしまうという危険を避けたいと願って
います。これを防ぐために我々は、いずれの特許も、誰でも自由に使用できる
ように使用許諾されるべきか、あるいは何人に対しても全く使用させないかの、
いずれかにすべきであることを明らかにしてきました。

 複写・頒布・変更に対する正確な条項と条件を次に示します。

    GNU一般公有使用許諾の下での複製、頒布、変更に関する条項と条件

  1. 本使用許諾は、本一般公有使用許諾の各条項に従って頒布されるという
     著作権者からの告知文が表示されているプログラムやその他の作成物に
     適用されます。以下において「プログラム」とは、そのようなプログラ
     ムや作成物を指すものとし、また、「プログラム生成物」とは、上述し
     た「プログラム」自身、または、著作権法下における全ての派生物；す
     なわち、その「プログラム」の全部又は一部を、そのまま又は変更して、
     且つ／又は他の言語に変換して、内部に組み込んだ作成物を意味します。
     （以下、言語変換は「変更」という用語の中に無条件に含まれるものと
     します。）本使用許諾によって許諾を受ける者を「あなた」と呼びます。
     　

     複製、頒布、変更以外の行為は本使用許諾の対象としません。それらは
     本使用許諾の範囲外です。「プログラム」を実行させる行為に関して制
     約はありません。「プログラム」の出力は、（「プログラム」を実行さ
     せて作成させたかどうかとは無関係に）その内容が「プログラム生成物」
     である場合に限り本使用許諾の対象となります。これが当てはまるかど
     うかは、「プログラム」が何をするものかに依ります。

  2. あなたは、どのような媒体上へ複製しようとする場合であっても、入手
     した「プログラム」のソース・コードをそのままの内容で複写した上で
     適正な著作権表示と保証の放棄を明確、且つ適正に付記する場合に限り、
     複製又は頒布することができます。その場合、本使用許諾及び無保証に
     関する記載部分は、全て元のままの形で表示してください。また、「プ
     ログラム」の頒布先に対しては、「プログラム」と共に本使用許諾書の
     写しを渡してください。

     複製物の引き渡しに要する実費は請求することができます。また、あな
     た独自の保証を行なう場合はそれを有償とすることができます。

  3. 次の各条件を全て満たしている限り、あなたは、「プログラム」又はそ
     の一部分を変更して「プログラム生成物」とすることができ、さらに、
     変更版や右作成物を上記第２項に従って複製又は頒布することもできま
     す。

       a. ファイルを変更した旨とその変更日とを、変更したファイル上に明
          確に表示すること。

       b. 変更したか否かを問わず、凡そ「プログラム」又はその一部分を内
          部に組み込んでいるか又はそれから派生した生成物を頒布する場合
          には、その全体を本使用許諾の条項に従って第三者へ無償で使用許
          諾すること。

       c. 変更したプログラムが実行時に通常の対話的な方法でコマンドを読
          むようになっているとすれば、最も普通の方法で対話的にそのプロ
          グラムを実行する時に、次の内容を示す文言がプリンタへ印字され
          るか、或いは画面に表示されること。
             * 適切な著作権表示。
             * 無保証であること（あなたが独自に保証する場合は、その旨）。
             * 頒布を受ける者も、本使用許諾と同一の条項に従って「プロ
               グラム」を再頒布できること。
             * 頒布を受ける者が本使用許諾書の写しを参照する方法。（例
               外として、「プログラム」自体は対話的であっても起動時の
               文言を通常は印字しないのならば、あなたの「プログラム生
               成物」はこのような文言を印字する必要はありません。）

     これらの要件は変更された作成物にも全て適用されます。その変更版の
     或る部分が「プログラム」の派生物ではなく、しかもそれ自体独立で異
     なる作成物だと合理的に考えられる場合、あなたがそれらを別の作成物
     として頒布した時は、本使用許諾とその条項はそれらの部分には適用さ
     れません。しかし、それらを「プログラム生成物」の一部として頒布す
     る場合は、全体が本使用許諾の条項に従って頒布されなければならず、
     使用許諾を受ける他の全ての者に対する許諾もプログラム全体にわたっ
     て与えられなければならず、結果として、誰が書いたかにかかわらず、
     全ての部分に本使用許諾が適用されなければなりません。

     このように、本条項の意図するところは、完全にあなたによって書かれ
     た作成物について、権利を要求したり、あなたと権利関係を争うことで
     はありません。むしろその目的は、作成物が「プログラム生成物」であ
     る場合にその派生物や集合物の頒布を規制することにあります。

     さらに、「プログラム」（又は「プログラム生成物」）と「プログラム
     生成物」とはならない他のプログラムとを、単に保管や頒布のために同
     一の媒体上にまとめて記録したとしても、本使用許諾は他のプログラム
     には適用されません。

  4. あなたは、以下のうちいずれか１つを満たす限り、上記第２項及び第３
     項に従って「プログラム」（又は、上記第３項で言及している「プログ
     ラム生成物」）をオブジェクト・コード又は実行可能な形式で複製及び
     頒布することができます。

       a. 対応する機械読み取り可能なソース・コード一式を一緒に引き渡す
          こと。その場合、そのソース・コードの引き渡しは上記第２項及び
          第３項に従って、通常ソフトウェアの交換に用いられる媒体で行な
          われること。

       b. 少なくとも３年間の有効期間を定め、且つその期間内であれば対応
          する機械読み取り可能なソース・コード一式の複製を、ソース頒布
          に関わる実費以上の対価を要求せずに提供する旨、及びその場合に
          は上記第２項及び第３項に従って、通常ソフトウェアの交換に用い
          られる媒体で提供される旨を記載した書面を、第三者に一緒に引き
          渡すこと。

       c. 対応するソース・コード頒布の申し出に際して、あなたが得た情報
          を一緒に引き渡すこと。（この選択肢は、営利を目的としない頒布
          であって、且つあなたが上記の（ｂ）項に基づいて、オブジェクト・
          コード或いは実行可能形式のプログラムしか入手していない場合に
          限り適用される選択項目です。）

     なお、ソース・コードとは、変更作業に適した記述形式を指します。ま
     た、実行可能形式のファイルに対応するソース・コード一式とは、それ
     に含まれる全モジュールに対応する全てのソース・コード、及びあらゆ
     る関連のインタフェース定義ファイル、及び実行を可能にするコンパイ
     ルとインストールの制御に関する記述を指します。特別な例外として、
     実行可能なファイルが動作するオペレーティング・システムの主要な構
     成要素（コンパイラ、カーネルなど）と共に（ソース・コード又はバイ
     ナリのどちらかで）頒布されているものについては、その構成要素自体
     が実行形式に付随していない場合に限り、頒布されるソース・コードに
     含める必要はありません。

     実行可能形式またはオブジェクト・コードの頒布が、指示された場所か
     らの複製のためのアクセス権の賦与である場合、同じ場所からのソース・
     コードの複製のための同等なアクセス権を賦与すれば、たとえ第三者に
     オブジェクト・コードと共にソースの複製を強いなくとも、ソース・コー
     ドを頒布したものとみなします。

  5. 本使用許諾が明示的に許諾している場合を除き、あなたは、「プログラ
     ム」を複製、変更、サブライセンス、頒布することができません。本使
     用許諾に従わずに「プログラム」を複製、変更、サブライセンス、頒布
     しようとする行為は、それ自体が無効であり、且つ、本使用許諾があな
     たに許諾している「プログラム」の権利を自動的に消滅させます。その
     場合、本使用許諾に従ってあなたから複製物やその権利を得ている第三
     者は、本使用許諾に完全に従っている場合に限り、引続き有効な使用権
     限を持つものとします。

  6. あなたはまだ同意の印として署名していないので、本使用許諾を受け入
     れる必要はありません。しかし、あなたに「プログラム」又はその派生
     物を変更又は再頒布する許可を与えるものは本使用許諾以外にはありま
     せん。これらの行為は、あなたがもし本使用許諾を受け入れないのであ
     れば、法律によって禁じられます。従って、あなたが「プログラム」
     （又は「プログラム生成物」）の変更又は頒布を行えば、それ自体であ
     なたは本使用許諾を受け入れ、且つ、「プログラム」又はその「プログ
     ラム生成物」の複製、頒布、変更に関するこれらの条項と条件の全てを
     受け入れたことを示します。

  7. あなたが「プログラム」（又はその「プログラム生成物」）を再頒布す
     ると自動的に、その受領者は、元の使用許諾者から、本使用許諾の条項
     に従って「プログラム」を複製、頒布、変更することを内容とする使用
     許諾を受けたものとします。あなたは、受領者に許諾された権利の行使
     について、さらに制約を加えることはできません。あなたには、第三者
     に本使用許諾の受け入れを強いる責任はありません。

  8. 裁判所の判決、又は特許侵害の申し立て、又は（特許問題に限らない）
     何らかの理由の結果として、あなたに課せられた条件が本使用許諾と相
     入れないものであったとしても（裁判所の命令、契約、その他によるも
     のであれ）、本使用許諾の条件が免除されるものではありません。本使
     用許諾による責務と、その他の何らかの関連責務を同時に満たす態様で
     頒布することができないならば、あなたは「プログラム」を全く頒布し
     てはいけません。例えば、特許権の内容が、あなたから直接又は間接に
     複製を受け取った全ての人に使用料のないプログラムの再頒布を許さな
     いものであれば、あなたがかかる特許上の要請と本使用許諾の両方を満
     足させる方法は、「プログラム」の頒布を完全に断念することだけです。

     本条項の或る部分が何らかの特別な状況下で無効または適用不可能になっ
     た場合、本条項のその他の残りの部分が適用されるように意図されてお
     り、また、本条項は全体としてその他の状況に当てはまるように意図さ
     れています。

     本条項の目的は、特許やその他の財産権を侵害したり、そのような権利
     に基づく主張の妥当性を争うようにあなたに勧めることではありません。
     本条項の唯一の目的は、フリー・ソフトウェアの頒布システムの完全性
     を守ることで、それは公有使用許諾の実践によって履行されます。多く
     の人々が、このシステムの一貫した適用を信頼して、このシステムを通
     じて頒布されている幅広い範囲のソフトウェアに惜しみない貢献をして
     くれました。作成者や寄贈者が他の何らかのシステムを通じてソフトウェ
     アを頒布したいと決めることは彼らの自由意志であり、使用許諾を受け
     る者はその選択を強いることはできません。

     本条項は、本使用許諾の他の条項の意味内容が何であるかを完全に明ら
     かにすることを意図しています。

  9. 「プログラム」の頒布・使用が、ある国において特許又は著作権で保護
     されたインタフェースのどちらかで制限される場合、「プログラム」を
     本使用許諾下においた原著作権保持者は、その国を除外する旨の明示的
     な頒布地域制限を加え、それ以外の（除外されない）国に限定して頒布
     が許されるようにすることができます。そのような場合、その制限を本
     使用許諾の本文にあたかも書かれているかのように本使用許諾の中に組
     み入れられるものとします。

 10. Free Software Foundation は随時、本一般公有使用許諾の改訂版、又は
     新版を公表することがあります。そのような新しいバージョンは、現行
     のバージョンと基本的に変わるところはありませんが、新しい問題や懸
     案事項に対応するために細部では異なるかもしれません。

     各バージョンは、バージョン番号によって区別します。「プログラム」
     中に本使用許諾のバージョン番号の指定がある場合は、その指定された
     バージョンか、又はその後にFree Software Foundationから公表されて
     いるいずれかのバージョンから１つを選択して、その条項と条件に従っ
     てください。「プログラム」中に本使用許諾のバージョン番号の指定が
     ない場合は、Free Software Foundation が公表したどのバージョンでも
     選択することができます。

 11. 「プログラム」の一部を頒布条件の異なる他のフリー・プログラムに組
     み込みたい場合は、その開発者に書面で許可を求めてください。 Free
     Software Foundation が著作権を持っているソフトウェアについては、
     Free Software Foundation へ書面を提出してください。このような場合
     に対応するために我々は例外的処理をすることもありますが、その判断
     基準となるのは、次の２つの目標の実現に合致するか否かという点です。
     即ち、１つは我々のフリー・ソフトウェアの全ての派生物をフリーな状
     態に保つことであり、もう１つはソフトウェアの共有と再利用とを広く
     促進させることです。

                                  無保証

 12. 「プログラム」は無償で使用許諾されますので、適用法令の範囲内で、
     「プログラム」の保証は一切ありません。著作権者やその他の第三者は
     全く無保証で「そのまま」の状態で、且つ、明示か暗黙であるかを問わ
     ず一切の保証をつけないで提供するものとします。ここでいう保証とは、
     市場性や特定目的適合性についての暗黙の保証も含まれますが、それに
     限定されるものではありません。「プログラム」の品質や性能に関する
     全てのリスクはあなたが負うものとします。「プログラム」に欠陥があ
     るとわかった場合、それに伴う一切の派生費用や修理・訂正に要する費
     用は全てあなたの負担とします。

 13. 適用法令の定め、又は書面による合意がある場合を除き、著作権者や上
     記許諾を受けて「プログラム」の変更・再頒布を為し得る第三者は、
     「プログラム」を使用したこと、または使用できないことに起因する一
     切の損害について何らの責任も負いません。著作権者や前記の第三者が、
     そのような損害の発生する可能性について知らされていた場合でも同様
     です。なお、ここでいう損害には通常損害、特別損害、偶発損害、間接
     損害が含まれます（データの消失、又はその正確さの喪失、あなたや第
     三者が被った損失、他のプログラムとのインタフェースの不適合化、等
     も含まれますが、これに限定されるものではありません）。

                                 以上


注意
====
 英文文書（GNU General Public License）を正式文書とする。この和文文書
は弁護士の意見を採り入れて、できるだけ正確に英文文書を翻訳したものであ
るが、法律的に有効な契約書ではない。


和文文書自体の再配布に関して
============================
 いかなる媒体でも次の条件がすべて満たされている場合に限り、本和文文書
をそのまま複写し配布することを許可する。また、あなたは第三者に対して本
許可告知と同一の許可を与える場合に限り、再配布することが許可されていま
す。
   * 受領、配布されたコピーに著作権表示および本許諾告知が前もって載せ
     られていること。　
   * コピーの受領者がさらに再配布する場合、その配布者が本告知と同じ許
     可を与えていること。
   * 和文文書の本文を改変しないこと。


あなたの新しいプログラムにこれらの条項を適用する方法
====================================================

 あなたが新しくプログラムを作成し、それを公用に供したい場合は、プログ
ラムをフリー・ソフトウェアにして、全ての人々が以上の各条項に従ってこれ
を再頒布や変更をすることができるようにするのが最良の方法です。

 そうするためには、プログラムに以下の表示をしてください。その場合、無
保証であるということを最も効果的に伝えるために、ソース・ファイルの冒頭
にその全文を表示すれば最も安全ですが、その他の方法で表示する場合でも、
「著作権表示」と全文を読み出す為のアドレスへのポインタだけはファイル上
に表示しておいてください。

     プログラム名とどんな動作をするものかについての簡単な説明の行
     Ｃｏｐｙｒｉｇｈｔ（Ｃ）　１９○○年、著作権者名

     本プログラムはフリー・ソフトウェアです。
     あなたは、Free Software Foundationが公表したGNU 一般公有使用許諾の
     「バージョン２」或いはそれ以降の各バージョンの中からいずれかを選択し、
     そのバージョンが定める条項に従って本プログラムを
     再頒布または変更することができます。

     本プログラムは有用とは思いますが、頒布にあたっては、
     市場性及び特定目的適合性についての暗黙の保証を含めて、
     いかなる保証も行ないません。
     詳細についてはGNU 一般公有使用許諾書をお読みください。

     あなたは、本プログラムと一緒にGNU一般公有使用許諾の写しを受け取っ
     ているはずです。そうでない場合は、　Free Software Foundation,
     Inc., 675 Mass Ave, Cambridge, MA 02139, USA (2) (*Note
     Copying-Footnotes::)
     【注意】 現在、このバージョン2の発行者(FSF)住所は、正式に新しい住所の
      59 Temple Place - Suite 330, Boston, MA 02111-1307, USA に変わっている。
     へ手紙を書いてください。

また、ユーザが電子メイルや書信であなたと連絡をとる方法についての情報も
書き添えてください。

プログラムが対話的に動作する場合は、対話モードで起動した時に次のような
短い告知文が表示されるようにしてください。

     Ｇｎｏｍｏｖｉｓｉｏｎ　バージョン６９、Ｃｏｐｙｒｉｇｈｔ（Ｃ）１９○○年 著作権者名
     Gnomovision は完全に無保証です。詳細は show w とタイプしてください。
     これはフリー・ソフトウェアなので、特定の条件の下でこれを再頒布する
     ことができます。詳細は show c とタイプしてください。

上記の`show w'や`show c'は各々、本一般公有使用許諾の関連する部分を表示
するコマンドを指します。もちろん、あなたが使うこれらのコマンドは`show
w'や`show c'といった呼び名でなくても構いません。さらに、それらのコマン
ドはあなたのプログラムに合わせる為に、マウスでクリックしたりメニュー形
式にすることもできます。

また、必要と認めた場合には、あなたの雇い主（あなたがプログラマとして働
いている場合）や在籍する学校から、そのプログラムに対する「著作権放棄」
を認めた署名入りの書面を入手してください。ここにその文例を載せます。名
前は変えてください。

     Yoyodyne, Inc. は、James Hacker が開発したプログラム`Gnomovision' 
     （コンパイラにつなげるプログラム）についての著作権法上の全ての権利を放棄する。

     Ｔｙ　Ｃｏｏｎ　の署名，　１　Ａｐｒｉｌ　１９８９
     Ｔｙ　Ｃｏｏｎ，　副社長

本一般公有使用許諾は、あなたのプログラムを財産権の対象となっている他の
プログラムに組み込むことは認めていません。あなたのプログラムがサブルー
チン・ライブラリであって、あなたがそのライブラリを財産権の対象となって
いる他のアプリケーションとリンクさせることによって、さらに有用なものに
しようとする場合には、本使用許諾書の代わりに、GNUライブラリ一般公有使
用許諾書に従ってください。


File: emacs-ja.info  Node: Copying-Footnotes, Up: Copying

(1) 【注意】現在、このバージョン2の発行者(FSF)住所は、正式に新し
い住所の 
 　59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA 
 に変わっている。

(2) 【注意】現在、このバージョン2の発行者(FSF)住所は、正式に新し
い住所の59 Temple Place, Suite 330, Boston, MA 02111-1307, USA に
変わっている。



File: emacs-ja.info, Node: Intro, Next: Key Index, Prev: Distrib, Up: Top

はじめに
********

あなたは、先進的で、セルフドキュメント方式で、カスタマイズ可能で、拡張
可能な、GNU版の権化であるリアルタイム画面エディタEmacsについて読んでい
るところです。（「GNU」の「G」は発音します。）

Emacsは"画面"エディタであるというのは、編集中のテキストを画面上で見る
ことができ、コマンドを入力すると自動的に画面が更新されるということです。
*Note Display: Screen。

"リアルタイム"エディタと呼ぶのは、頻繁に画面更新が行われ、通常、1文字
か2文字打つと更新されるからです。編集にともなって覚えておくべきことを
最小限に抑えられます。*Note Real-time: Basic。

Emacsは先進的であるというのは、単純な挿入と削除だけでなく、プロセスの
制御、プログラムの字下げの自動化、複数のファイルを同時に眺める、整形済
みテキストを編集する、文字、単語、行、文、段落、ページを扱うのと同様に、
異なるプログラミム言語の式やコメントを扱うといった機能も提供するからで
す。

"セルフドキュメント方式"とは、特別な文字`Control-h'を打てば、何ができ
るかいつでも知ることができるということです。それによって、任意のコマン
ドが何をするものなのか調べたり、ある話題に関連するすべてのコマンドを調
べることができます。*Note Help::。

"カスタマイズ可能"とは、Emacsコマンドの定義を若干変更できるということ
です。たとえば、`<**'で始まり`**>'で終わるようなコメントのプログラム言
語を使っている場合には、Emacsのコメント操作コマンドにこれらの文字列を
使うように指示できます（*Note Comments::）。別の種類のカスタマイズとし
ては、コマンドセットの再編成があげられます。たとえば、キーボード上で菱
形を形作る位置にあるキーを（上下左右の）4つの基本的なカーソル移動コマ
ンドとして使いたければ、そのようにキーを再定義できます。*Note
Customization::。

"拡張可能"とは、単純なカスタマイズではなく、Emacs自身のLisp処理系で動
作するLisp言語でプログラムを書ける、つまり、まったく新しいコマンドを書
けるということです。Emacsは『オンラインで拡張可能』なシステムです。つ
まり、Emacsは互いに呼び合う数多くの関数に分割でき、編集している最中で
さえ、それらの関数のどれでも再定義できます。Emacs全体を1つ1つコピーし
たりせずに、Emacsの任意の部分だけを置き換えることが可能です。Emacsのほ
とんどの編集コマンドはすでにLispで書いてあります。少数の例外もLispで書
くことも可能ですが、効率のためにCで書いてあります。拡張機能を書けるの
はプログラマだけですが、書き上げてしまえば誰でもそれを利用できます。
Emacs Lispのプログラミングを学ぶには、Free Software Foundationが出版し
たRobert J. Chassellの`Programming in Emacs Lisp, An Introduction' (1)
(*Note Intro-Footnotes::) を勧めます。

Xウィンドウシステムで動作するEmacsでは、独自のメニューとマウスボタンに
よる便利な操作を提供します。しかし、たとえ文字端末であっても、Emacsは
ウィンドウシステムの恩恵を与えてくれます。たとえば、複数のファイルを同
時に眺めたり編集したり、ファイル間でテキストを移動したり、シェルコマン
ドを実行している最中でもファイルを編集できます。



File: emacs-ja.info  Node: Intro-Footnotes, Up: Intro

(1) 【訳注】日本語訳：『Emacs Lispプログラミング入門』、アスキー出版局、
ISBN 4-7561-1805-4


File: emacs-ja.info, Node: Screen, Next: User Input, Prev: Acknowledgments, Up: Top

画面構成
********

文字端末の場合、Emacsは画面全体をその表示領域として使います。Xウィンド
ウシステム上では、Emacsは専用のXのウィンドウを作ります。以降、本書では、
Emacsが使う文字画面全体やXのウィンドウ全体を指して、"フレーム"（frame）
という用語を用います。Emacsが編集状況を表示するときのフレームの使い方
は、どちらのフレームでも同じです。通常、1個のフレームだけで始まります
が、必要ならば新たにフレームを作れます。*Note Frames::。

Emacsを起動すると、最初と最後の行を除いたフレーム全体は、編集している
テキストにあてられます。この領域を"ウィンドウ"（window）と呼びます。フ
レームの最初の行は"メニューバー"（menu bar）です。最後の行は、特別な"
エコー領域"（echo area）や"ミニバッファウィンドウ"（minibuffer window）
です。ミニバッファウィンドウでは、プロンプトが表示され、応答を入力でき
ます。これらの特別な行の詳細については、以下で説明します。

大きなテキストウィンドウは、左右や上下に複数のテキストウィンドウに細分
割できます。各ウィンドウは、それぞれ別のファイルに使えます（*Note
Windows::）。本書では、『ウィンドウ』という単語は、Emacsのフレームを細
分割したものをつねに指すこととします。

カーソルが表示されているウィンドウは、"選択されたウィンドウ" 
（selected window）であり、その中で編集が行われます。ほとんどのEmacsコ
マンドは、選択されたウィンドウ内のテキストに暗黙に作用します（ただし、
マウスコマンドでは、マウスをクリックしたウィンドウが選択されているかど
うかに関わらず、クリックしたウィンドウに作用する）。選択されていない他
のウィンドウには、それが選択されるまで、単に参照のためだけにテキストが
表示されます。また、Xウィンドウシステム上で複数のフレームを使う場合、
特定のフレームに入力フォーカスを与えると、そのフレーム内のウィンドウを
選択します。

各ウィンドウの最後の行は"モード行"（mode line）です。
このモード行は、そのウィンドウで何が行われているかを表示します。
端末が反転表示を扱えれば、モード行は反転表示され、
起動時の表示内容は`--:--  *scratch*'で始まります。
モード行は、ウィンドウ内でその上にどのバッファを表示しているのか、
どのメジャーモードやマイナモードを使っているのか、
バッファには未保存の変更があるかどうかなどの情報を示します。

* Menu:

* Point::	        The place in the text where editing commands operate.
* Echo Area::           Short messages appear at the bottom of the screen.
* Mode Line::	        Interpreting the mode line.
* Menu Bar::            How to use the menu bar.



File: emacs-ja.info, Node: Point, Next: Echo Area, Up: Screen

ポイント
========

Emacsでは、端末のカーソルが編集コマンドの作用する位置を示します。この
位置のことを"ポイント"（point）と呼びます。多くのEmacsコマンドはポイン
トをテキスト中で移動し、テキスト中のさまざまな箇所で編集できるようにし
ます。マウスのボタン1をクリックしても、ポイントを置けます。

カーソルはある文字に*重なって*表示されますが、ポイントは2つの文字の*あ
いだ*にあると考えなければいけません。つまり、ポイントは、カーソルが重
なっている文字の*まえ*にあります。たとえば、`frob'というテキストで、
`b'にカーソルがある場合、ポイントは`o'と`b'のあいだにあります。その位
置に`!'という文字を挿入すると、`fro!b'という結果になり、ポイントは`!'
と`b'のあいだにあります。つまり、カーソルは`b'に重なったままで、実行前
と同じです。

『ポイント』を意味して『カーソル』といったり、ポイントを移動するコマン
ドのことを『カーソル移動』コマンドということもあります。

端末にはカーソルは1つしかなく、出力中は出力されている場所にカーソルが
表示される必要があります。これはポイントが移動したということではありま
せん。端末がアイドルでないと、Emacsにはポイント位置を示す方法がないだ
けです。

Emacsでいくつかのファイルを編集して、各ファイルをそれ専用のバッファに
入れているとき、各バッファには独自のポイント位置があります。バッファが
表示されていなくても、あとで表示されるときに備えてポイント位置を記録し
ています。

1つのフレームに複数のウィンドウがある場合、各ウィンドウには独自のポイ
ント位置があります。カーソルは選択されたウィンドウのポイント位置を示し
ます。これにより、どのウィンドウが選択されているかもわかります。複数の
ウィンドウに同じバッファが表示されている場合には、そのバッファのポイン
ト位置は各ウィンドウごとに独立にあります。

複数のフレームがある場合、各フレームでは1つのカーソルを表示できます。
選択されているフレームの中のカーソルは塗り潰されます。他のフレームのカー
ソルは中抜きの箱で、フレームに入力フォーカスが与えられると選択されるウィ
ンドウに表示されます。

『ポイント』という用語は、文字`.'に由来します。この文字は、現在『ポイ
ント』と呼んでいる値を参照するための（オリジナルのEmacsを記述していた
言語）TECOのコマンドです。



File: emacs-ja.info, Node: Echo Area, Next: Mode Line, Prev: Point, Up: Screen

エコー領域
==========

フレームの1番下の行（モード行の下）は、"エコー領域"（echo area）です。
ここは、いろいろな目的向けの少量のテキスト表示に使われます。

"エコー"とは、あなたが打った文字を表示することを意味します。Emacsの外
部、オペレーティングシステムでは、ユーザーからのすべての入力を普通はエ
コーします。Emacsは、エコーをそれとは違ったように扱います。

Emacsでは、1文字コマンドをエコーすることはありません。また、複数文字の
コマンドでも、打つ途中に間を置かなければエコーしません。コマンドの途中
で1秒以上間を置くとすぐに、それまでに入力したコマンドの文字をすべてエ
コーします。これは、コマンドの残りの部分を"促す"ためです。いったんエコー
が始まると、コマンドの残りは、打つと同時にただちにエコーされます。これ
は、打鍵に自信のあるユーザーには速い応答を提供し、一方で、自信のないユー
ザーには最大限のフィードバックを与えるための機能です。変数を設定すれば、
このふるまいを変更できます（*Note Display Vars::）。

コマンドを実行できなければ、エコー領域に"エラーメッセージ"を表示します。
エラーメッセージに伴って、ビープ音が鳴ったり、画面が点滅したりします。
また、エラーが起きると、先打ちした入力は破棄されます。

エコー領域に有益なメッセージを表示するコマンドもあります。これらのメッ
セージはエラーメッセージによく似ていますが、ビープ音を伴わず、入力も破
棄しません。編集中のテキストを見てもコマンドが何をしたか自明でない場合
に、メッセージがそれを教えてくれることもあります。特定の情報を与えるメッ
セージを表示するだけのコマンドもあります。たとえば、コマンド`C-x ='は、
テキスト中でのポイントの文字位置と、ウィンドウでの現在の桁位置を示すメッ
セージを表示します。処理に時間のかかるコマンドでは、実行中には`...'で
終わるメッセージをエコー領域に表示し、完了時には`done'を最後に付け加え
ることもよくあります。

エコー領域に表示される有益なメッセージは、`*Messages*'と呼ばれるエディ
タバッファに保存されます。（まだバッファを説明していないが、詳細は
*Note Buffers::を参照。）画面上に短時間しか表示されないメッセージを見
逃してしまった場合には、`*Messages*'バッファに切り替えて、もう一度その
メッセージを見ることができます。（連続した同じメッセージは、しばしば、
1つにまとめられてこのバッファに納められる。）

`*Messages*'のサイズは、ある行数に制限されています。変数
`message-log-max'は、その行数を指定します。いったんバッファがこの行数
を超えると、最後に1行を付け加えるごとに先頭の1行を削除します。
`message-log-max'のような変数の設定方法については、*Note Variables::。

エコー領域は"ミニバッファ"（minibuffer）の表示にも使われます。これは、
編集しようとするファイル名のような、コマンドへの引数を読むのに使われる
ウィンドウです。ミニバッファが使われているときには、エコー領域は通常コ
ロンで終わるプロンプトで始まります。また、エコー領域が選択されているウィ
ンドウなので、カーソルもその行に表示されます。`C-g'を打つと、いつでも
ミニバッファから抜けられます。*Note Minibuffer::。



