Info file: gnus-ja.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `gnus-ja.texi'
using `texinfmt.el' version 2.42 of  7 Jul 2006.

Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
2004, 2005, 2006, 2007 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.2 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover
     texts being "A GNU Manual", and with the Back-Cover Texts as in
     (a) below.  A copy of the license is included in the section
     entitled "GNU Free Documentation License" in the Emacs manual.

     この文書を、フリーソフトウェア財団発行の GNU フリー文書利用許諾契
     約書第 1.2 版またはそれ以降の版が定める条件の下で複製、配布、ある
     いは変更することを許可します。変更不可部分は指定しません。“A GNU
     Manual”は表表紙テキスト、以下の (a) は裏表紙テキストです。この利
     用許諾契約書の複写は“Emacs manual”の「GNU フリー文書利用許諾契約
     書」という章に含まれています。

     (a) The FSF's Back-Cover Text is: "You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by
     the Free Software Foundation raise funds for GNU development."

     (a) FSF の裏表紙テキスト:「あなたにはこの GNU Manual を GNU ソフト
     ウェアのように複製したり変更する自由があります。複製はフリーソフト
     ウェア財団によって出版されました。(フリーソフトウェア財団は) GNU
     の開発のために必要な資金を集めています。」

     This document is part of a collection distributed under the GNU
     Free Documentation License.  If you want to distribute this
     document separately from the collection, you can do so by adding
     a copy of the license to the document, as described in section 6
     of the license.

     この文書は「GNU フリー文書利用許諾契約書」に基づいて配布された収集
     著作物の一部です。もしあなたがこの文書を収集著作物から分離して配布
     したいときは、契約書の第 6 章に記述されているように、文書に契約書
     の複写を付加することによって、行なうことができます。



INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Gnus-ja: (gnus-ja).           The newsreader Gnus (Japanese).
END-INFO-DIR-ENTRY





File: gnus-ja.info, Node: Red Gnus, Next: Quassia Gnus, Prev: September Gnus, Up: New Features

Red Gnus
........

Gnus 5.4/5.5 の新しい機能:

   * `nntp.el' は非同期に動作するやり方で、完全に改訂されました。

   * 記事の先行取得を行なう機能が Gnus に編入されました (*Note
     Asynchronous Fetching::)。

   * スコア付けは `and', `or', `not' のような論理演算子と、親記事にさか
     のぼってリダイレクトすることで実行できるようになりました (*Note
     Advanced Scoring::)。

   * 記事の洗濯状態を記事のモード行に表示できるようになりました (*Note
     Misc Article::)。

   * `gnus.el' が多くの小さいファイルに分割されました。

   * Message-ID に基づいて、記事の重複を抑制することができるようになり
     ました (*Note Duplicate Suppression::)。

          (setq gnus-suppress-duplicates t)

   * どのスコアと適応ファイルが、ホームスコアと適応ファイルであるかを指
     定する (*Note Home Score File::) 新しい変数が加えられました。

   * `nndoc' がより簡単に拡張できるように改訂されました (*Note
     Document Server Internals::)。

   * グループは親のトピックからグループパラメーターを継承できるようにな
     りました (*Note Topic Parameters::)。

   * 記事を編集するための機能が継ぎはぎされて、実際に使用可能になりまし
     た。

   * 署名がもっと利口なやり方で認識されるようになりました (*Note
     Article Signature::)。

   * 概略ピックモードがもっと (ニュースリーダー) `nn' らしくなりました。
     行番号が表示され、記事を選ぶために `.' 命令を使うことができるよう
     になりました (`Pick and Read')。

   * あるサーバーから別のサーバーへ `.newsrc.eld' を移動する命令が加え
     られました (*Note Changing Servers::)。

   * 今では、バッファーの行を作成するときに、抑制される「興味の無い」部
     分を指定する方法があります (*Note Advanced Formatting::)。

   * グループバッファーの複数の命令について、それらで行なったことを
     `C-M-_' で元に戻すことができるようになりました (*Note Undo::)。

   * 新しいスコア型 `w' を使うことによって、単語でスコア付けをすること
     が可能になりました (*Note Score File Format::)。

   * 表題の一語一語を基にして、適応スコアをすることができるようになりま
     した (*Note Adaptive Scoring::)。

          (setq gnus-use-adaptive-scoring '(word))

   * スコアを減衰させることができるようになりました (*Note Score
     Decays::)。

          (setq gnus-decay-scores t)

   * 正規表現を使って、日付のヘッダーでスコア付けを実行できるようになり
     ました。日付は最初にコンパクトな ISO 8601 様式で正規化されます
     (*Note Score File Format::)。

   * 記事に関するすべてのデータを、基本のサーバーから取り除く命令が加え
     られました (*Note Changing Servers::)。

   * 文書を寄せ集めたものを読むための新しい命令 (`nndoc' グループのてっ
     ぺんで `nnvirtual' を使います) が加えられました---`C-M-d' (*Note
     Really Various Summary Commands::)。

   * プロセス印の設定を push と pop でスタックに出し入れできるようにな
     りました (*Note Setting Process Marks::)。

   * NNTP サーバーが投稿を許可していない場合でも、新しい mail-to-news
     バックエンドが、投稿することを可能にしました (*Note Mail-To-News
     Gateways::)。

   * ウェブ検索エンジン ("DejaNews", "Alta Vista", "InReference") から
     の検索結果を読むための、新しいバックエンドが加えられました (*Note
     Web Searches::)。

   * 標準の並べ替え関数を使って、トピックの中にあるグループを並び代える
     ことができるようになりました。また、それぞれのトピックを独立して並
     べ替えることができるようになりました (*Note Topic Sorting::)。

   * グループ群の一部を、独立して並べ替えることができるようになりました
     (`Sorting')。

   * キャッシュされた記事を、グループに引き込むことができるようになりま
     した (*Note Summary Generation Commands::)。

   * スコアファイルがもっと信頼できる順番で適用されるようになりました
     (*Note Score Variables::)。

   * メールメッセージが分割されてどこに行くかの報告を、作成することがで
     きるようになりました (*Note Splitting Mail::)。

   * 入って来たメールを保存する前にがらくたを取り除くフックと関数が、もっ
     と追加されました (*Note Washing Mail::)。

   * 強調表示することを指定されたテキストが、適切に表示されるようになり
     ました。



File: gnus-ja.info, Node: Quassia Gnus, Next: Pterodactyl Gnus, Prev: Red Gnus, Up: New Features

Quassia Gnus
............

Gnus 5.6 の新しい機能:

   * Gnus をオフラインニュースリーダーとして使う新機能が加えられました。
     過剰なほどの新しい命令とモードが追加されました。全貌については
     *Note Gnus Unplugged:: を見て下さい。

   * `nndraft' バックエンドが戻ってきました。でも、依然とは違う動作をし
     ます。すべてのメッセージバッファーは、今では自動的に作成される
     `nndraft' グループの記事でもあります。

   * `gnus-alter-header-function' を、ヘッダーの値を変えるために使うこ
     とができるようになりました。

   * `gnus-summary-goto-article' が Message-ID を受け付けるようになりま
     した。

   * メッセージの本文において、指定したリージョン以外のテキストを消去す
     るための新しいメッセージ命令があります: `C-c C-v'。

   * `C-u C-c C-c' によって `nnvirtual' グループを構成しているグループ
     に投稿できるようになりました。

   * `nntp-rlogin-program'---カスタマイズを簡単にするための新しい変数で
     す。

   * `gnus-article-edit-mode' における `C-u C-c C-c' 命令は、記事バッ
     ファーの再ハイライトを抑制するようになりました。

   * `gnus-boring-article-headers' に、`long-to' という新しい要素があり
     ます。

   * `M-i' シンボル接頭引数命令があります。詳細は *Note Symbolic
     Prefixes:: を見て下さい。

   * 概略バッファーにおける `L' と `I' は、`all.SCORE' ファイルにスコア
     規則を加えるためのシンボル接頭引数 `a' を受け付けるようになりまし
     た。

   * 変数 `gnus-simplify-subject-functions' によって、表題の単純化を強
     力に制御できるようになりました。

   * `A T'---現在のスレッドを取得するための新しい命令です。

   * `/ T'---現在のスレッドを制限に含めるための新しい命令です。

   * `M-RET' は、引用文の途中に割って入るための新しいメッセージ命令です。

   * `\\1' のような表現が `nnmail-split-methods' で有効になりました。

   * 関数 `custom-face-lookup' が取り除かれました。あなたの初期化ファイ
     ルでこの関数を使っていたのなら、代わりに `face-spec-set' を使うよ
     うに書き直さなければなりません。

   * 投稿のキャンセルに、現在の選択方法を使うようになりました。シンボル
     接頭引数 `a' で、普通の投稿方法を強制することができます。

   * マ■■■ソ■■ sm*rtq**t*s を適切なテキストに翻案する新しい命令が
     あります---`W d'。

   * `nntp' のデバッグを楽にするために、`nntp-record-commands' を
     `nil' ではない値に設定することができます。

   * `nntp' は `~/.authinfo' を使うようになりました。これは `.netrc' の
     ようなファイルで、どこの NNTP サーバーにはどのように AUTHINFO を送
     るかを制御するためのものです。

   * 概略バッファーのグループパラメーターを編集するための命令が加えられ
     ました。

   * メールがどこに分割されたかの履歴を利用できるようになりました。

   * 記事の日付を表示するための新しい命令が加えられまし
     た---`article-date-iso8601'。

   * `gnus-score-thread-simplify' を設定することによって、スレッドを作
     成するときの表題を単純化できるようになりました。

   * メッセージで引用をするための新しい関数が加えられました---
     `message-cite-original-without-signature'。

   * `article-strip-all-blank-lines'---新しい記事命令です。

   * 記事の終わりまでを切り取る (kill する) 新しいメッセージ命令が加え
     られました。

   * 変数 `gnus-adaptive-word-minimum' を使うことによって、最小限度の適
     応スコアを指定することができます。

   * `gnus-start-date-timer' 命令によって「記事が投稿されたときからの経
     過時間」ヘッダーが継続的に更新されるようになりました。

   * ウェブで提供されているメーリングリストのアーカイブを、
     `nnlistserv' バックエンドによって読むことができるようになりました。

   * 古い dejanews アーカイブを `nnweb' で読むことができるようになりま
     した。



File: gnus-ja.info, Node: Pterodactyl Gnus, Next: Oort Gnus, Prev: Quassia Gnus, Up: New Features

Pterodactyl Gnus
................

Gnus 5.8 の新しい機能:

   * メールを取り込む機能が変わりました。たくさんの詳細についてはマニュ
     アルを見て下さい。特に procmail で取り込むためのすべての変数が無く
     なっています。

     以下のような procmail の使い方は

          (setq nnmail-use-procmail t)
          (setq nnmail-spool-file 'procmail)
          (setq nnmail-procmail-directory "~/mail/incoming/")
          (setq nnmail-procmail-suffix "\\.in")

     現在では次のように変わっています。

          (setq mail-sources
                '((directory :path "~/mail/incoming/"
                             :suffix ".in")))

     *Note Mail Source Specifiers::.

   * Gnus は MIME に対応したリーダーになりました。これは Gnus の多くの
     部分に影響していて、たくさんの新しいコマンドが追加されています。詳
     細はマニュアルを参照して下さい。

   * しかも Gnus は各国語対応になりました。ここでは要約できないくらいに
     Gnus の多くの部分に影響していて、新しいたくさんの変数が追加されて
     います。

   * `gnus-auto-select-first' が、ポイントを置く場所を決定するための関
     数であってもよくなりました。

   * 概略バッファーと NOV ファイルに含める追加のヘッダーを、利用者が決
     めることができるようになりました。

   * `gnus-article-display-hook' が削除されました。代わりに
     `gnus-treat-' で始まるたくさんの変数が追加されました。

   * Gnus posting styles が再び作り直されました。現在は微妙に違うやり方
     で動作します。

   * 新しいウェブに基づいたバックエンドが追加されました。`nnslashdot',
     `nnwarchive' および `nnultimate' です。nnweb は常に変化する構成を
     とり続けるために、再び作り直されました。

   * Gnus は `nnimap' によって IMAP のメールを読むことができます。



File: gnus-ja.info, Node: Oort Gnus, Next: No Gnus, Prev: Pterodactyl Gnus, Up: New Features

Oort Gnus
.........

Gnus 5.10 の新しい機能:

   * インストールに関する変更

        * Oort を使ったことがある場合の、以前の (安定な) 版からのグレー
          ドアップ。

          Oort (このリリースに先立つ安定ではない Gnus の枝) を使ってみ
          たものの、安定版に戻してしまったならば、この版にグレードアッ
          プするときに注意して下さい。特に、おそらくすべての `.marks'
          (nnml) と `.mrk' (nnfolder) ファイルを消去する必要があるでしょ
          う。その目的は、この版 (の Gnus) がフラグを格納する
          `.marks'/`.mrk' ファイルではなくて `.newsrc.eld' からフラグが
          読まれるようにするためです (訳注: 言い換えると、古い様式の
          `.marks'/`.mrk' ファイルを新しい Gnus が読んではいけないとい
          うことです。それらは新たに作成されます)。後述の項目で、印
          (marks) に関するより多くの情報を読んで下さい。グレードを下げ
          ても一般には助けにならないことに注意して下さい。

        * Lisp ファイルがディフォルトで `.../site-lisp/gnus/' にインス
          トールされるようになりました。以前は `.../site-lisp/' がディ
          フォルトでした。加えて、新しいインストーラーは他にインストー
          ルされている、新しい Gnus より優先される Gnus を検出して警告
          を発します。それらを手動で取り除いても良いし、`make
          remove-installed-shadows' を使って削除することもできます。

        * MS ウィンドウズで Gnus をコンパイルしてインストールするための、
          新しい `make.bat'。

          MS ウィンドウズで Gnus をインストールするには `make.bat' を使っ
          て下さい。このバッチ・プログラムの第一引数はディレクトリーで
          す。そこで `xemacs.exe' と `emacs.exe' が順に捜し出されます。
          コンパイルしてから Gnus をインストールしたいときは、
          `make.bat' の第二引数に `/copy' を与えて下さい。

          `make.bat' はゼロから書き直されました。XEmacs と GNU Emacs を
          自動認識し、`gnus-load.el' を生成し、コンパイル中と info ファ
          イルの生成中にエラーが起きたら構築処理の最後に報告します。
          `makeinfo' が利用可能であればそれを使い、さもなければ
          `infohack.el' に頼ります。今や `make.bat' は Gnus を動作させ
          るために必要なすべてのファイルをインストールするはずで、大体
          において Unix システムにおける `configure; make; make
          install' サイクルの完全な置き換えになりました。

          新しい `make.bat' によって `make-x.bat' と `xemacs.mak' が不
          要になったので、それらは削除されました。

        * `~/News/overview/' は不要。

          以下の変更の結果、もはや `~/News/overview/' ディレクトリーは
          要りません。すべての階層を安全に削除することができます。

        * `(require 'gnus-load)'

          単独で配布されている Gnus を使う場合には、
          `load-path' に Gnus の lisp ディレクトリーを追加してから、
          `~/.emacs' に `(require 'gnus-load)' を加えるのが良いです。

          `gnus-load.el' ファイルは、そのうちのいくつかは Emacsen の配
          布に入っていないかもしれない自動読み込み (autoload) コマンド、
          関数および変数を含んでいます。

   * Gnus に内蔵された新しいパッケージとライブラリー

        * 改定された Gnus FAQ がマニュアルに含まれています。
          *Note Frequently Asked Questions::.

        * TLS ラッパーが Gnus に同梱されました。

          TLS/SSL が、`tls.el' と GNUTLS を介して IMAP と NNTP でサポー
          トされるようになりました。(サードパーティーの) `ssl.el' と
          OpenSSL による古い TLS/SSL は、まだ働きます。

        * 改良された spam 対抗機能。

          Gnus は非常に変化に富んだプログラムと濾過の規則を使って、メー
          ルやニュースの奔流から spam を抜き取ってしまうことができるよ
          うになりました。対応している方式は、RBL blocklists、
          bogofilter それにホワイト/ブラックリストです。また
          SpamAssassin や Hashcash のような外部パッケージを容易に使うた
          めの hook も新しくなりました。*Note Thwarting Email Spam:: お
          よび *Note Spam Package::.

        * Gnus は Sieve を使ったサーバー側でのメールの濾過をサポートし
          ます。

          Sieve の規則はグループパラメーターとして加えることができ、グ
          ループバッファーで `D g' を使うと完全な Sieve スクリプトが生
          成されます。そうしたら、生成された Sieve バッファーで `C-c
          C-l' を使って、サーバーにアップロードして下さい。*Note Sieve
          Commands::、それに新しい Sieve のマニュアル (*Note Top:
          (sieve-ja)Top.) を参照して下さい。

   * グループモードの変更

        * `gnus-group-read-ephemeral-group' を `G M' キーで対話的に呼ぶ
          ことができます。

        * 憲章とコントロールメッセージの取得。

          二つの新しいコマンドで、ニュースグループの憲章を取り込む (`H
          c') ことと、コントロールメッセージを取得する (`H C') ことがで
          きます。

        * 新しい変数 `gnus-parameters' を、グループパラメーターを設定す
          るために使うことができます。

          これは初期には、パラメーターを `~/.newsrc.eld' に格納する `G
          p' (または `G c') でしか行なうことができませんでしたが、この
          変数によってカスタマイズの威力を堪能することができます。また、
          その変数は `~/.newsrc.eld' ではなくて `~/.gnus.el' で設定する
          ので、バックアップが簡単になります。その変数は、グループ名に
          合致する正規表現を、以下のような流儀でグループパラメーターに
          割り当てます:

               (setq gnus-parameters
                     '(("mail\\..*"
                        (gnus-show-threads nil)
                        (gnus-use-scoring nil))
                       ("^nnimap:\\(foo.bar\\)$"
                        (to-group . "\\1"))))

        * nnimap のグループにおける未読の数が正確になりました。

          グループバッファーで表示される nnimap グループの未読記事の数
          の見積りが正確になったはずです。これは
          `gnus-setup-news-hook' (起動時に呼ばれる) と
          `gnus-after-getting-new-news-hook' (新しいメールを取得した直
          後に呼ばれる) から
          `nnimap-fixup-unread-after-getting-new-news' を呼ぶことによっ
          て成し遂げられます。これらの変数をディフォルトではない値に変
          えている場合は、重ねて
          `nnimap-fixup-unread-after-getting-new-news' を追加する必要が
          あるかもしれません。見積りに満足していて、新しいメールを取得
          するときにいくらかの (わずかな) 時間を節約したいのであれば、
          その関数を外して下さい。

        * グループ名は、ディフォルトで UTF-8 であるものとして取り扱われ
          ます。

          これは USEFOR が移行しようとしていると想定されるものです。カ
          スタマイズするには `gnus-group-name-charset-group-alist' およ
          び `gnus-group-name-charset-method-alist' を参照して下さい。

        * `gnus-group-charset-alist' と `gnus-group-ignored-charsets-alist'

          これらの変数に設定された正規表現は、完全な (full) グループ名
          と比較されます。Gnus 5.8 では実際の (real) グループ名が比較の
          対象でした。したがって、これらの変数をカスタマイズしている利
          用者は、正規表現を変更しなければなりません。例です:

               ("^han\\>" euc-kr) -> ("\\(^\\|:\\)han\\>" euc-kr)

   * 概略モードと記事モードの変更

        * 領域が活性化されている場合に、`F' キー
          (`gnus-article-followup-with-original') および `R' キー
          (`gnus-article-reply-with-original') は、その領域にあるテキス
          トだけを yank します。

        * ドラフト・グループで `e' キーが `gnus-draft-edit-message' コ
          マンドに割り当てられました。`gnus-summary-edit-article' コマ
          ンドには、代わりに `B w' キーを使って下さい。

        * 記事のボタン。

          URL、メールアドレス、Message-ID、Info へのリンク、man ページと Emacs ま
          たは Gnus に関連した参考文献のための、より多くのボタンが追加されました。
          *Note Article Buttons::. すべての記事のボタンの見栄えを制御するため
          に `gnus-button-*-level' 変数を使うことができます。
          *Note Article Button Levels::.

        * 単一の yenc でエンコードされた添付パートをデコードすることが
          できます。

        * Picons

          Picon のコードが、GNU Emacs で動作させるために再実装されまし
          た。以前のいくつかのオプションが、削除または改名されています。

          Picon は、利用者、ドメイン、それにニュースグループを表現する
          ための「個人的なアイコン (personal icons)」で、記事バッファー
          に表示することができます。*Note Picons::.

        * 新しいオプション `gnus-treat-body-boundary' を非-`nil' にする
          と、ヘッダーのおしまいに境界線が描かれます。

        * 署名された記事のヘッダー (X-PGP-Sig) を、`W p' で認証すること
          ができます。

        * 概略バッファーは fringe の中の矢印で現在の記事を示します。こ
          れを無効にするには `(setq gnus-summary-display-arrow nil)' を
          使って下さい。

        * ニュースにメールで返信しようとしたら警告します。

          間違ってニュースにメールで返信しようとしてしまうことが、しょっ
          ちゅうありませんか?  そんなあなたに新オプション
          `gnus-confirm-mail-reply-to-news'。

        * 新しいオプション `gnus-summary-display-while-building' を
          非-`nil' にすると、概略バッファーが作られていく様子が表示され
          ます。

        * 新しい `recent' 印 `.' で、新規に届いたメッセージを (未読だけ
          れども古い記事とは区別して) 表示します。

        * Gnus は RFC 2369 のメーリングリストのヘッダーをサポートします。
          また、メーリングリストのグループ用に数々のコマンドを用意しま
          した。*Note Mailing List::.

        * 日付ヘッダーを、英語で発音できる形式で表示することができます。
          *Note Article Date::.

        * `mm-uu-diff-groups-regexp' に合致するグループでは、差分
          (diffs) が自動的にハイライトされます。

        * マイクロソフト引用様式のより良い取り扱い。

          いくつかのマイクロソフトのメイラーが、メッセージの残りの部分
          が引用であることを示すために使う台無しにされたヘッダーブロッ
          クを、たとえそれが引用符で囲まれていなくても、Gnus はとにかく
          認識しようとします。変数
          `gnus-cite-unsightly-citation-regexp' は、それらの引用の先頭
          に合致します。

          新しい `W Y f' コマンド
          (`gnus-article-outlook-deuglify-article') で、醜く壊れた
          Outlook (Express) の記事を整形し直すことができます。

        * `gnus-article-skip-boring'

          `gnus-article-skip-boring' を `t' に設定すると、Gnus はうんざ
          りする文しか含んでいないページを見せるために、下方にスクロー
          ルしません。`gnus-article-boring-faces' を使って、何を読み飛
          ばしてしまっても良いかをカスタマイズすることができます。

          てっぺんに少しだけある新規な内容に、長くて刈り込まれていない
          引用が続いているたくさんの記事を読む場合に、これは特に役に立
          ちます。

        * スマイリー (`:-)', `;-)' など) が Emacs でもアイコン化される
          ようになりました。

          これを働かないようにするには、`(setq
          gnus-treat-display-smileys nil)' を `~/.gnus.el' に置いて下さ
          い。

        * Face ヘッダーを扱えるようになりました。*Note Face::.

        * 概略バッファーで、新しいコマンド `/ N' は新着メッセージを挿入し、
          `/ o' は古いメッセージを挿入します。

        * `W m' を押すと、Gnus はモールスでエンコードされたメッセージを
          デコードします。

        * `gnus-summary-line-format'

          ディフォルト値が `%U%R%z%I%(%[%4L: %-23,23f%]%) %s\n' に変わ
          りました。さらに、受信者の名前か NNTP グループに投稿したグルー
          プ名で利用者名を置き換えるために、`gnus-extra-headers'、
          `nnmail-extra-headers' および `gnus-ignored-from-addresses'
          のデフォルト値が変わりました。

        * 添付ファイルの消去。

          `gnus-mime-save-part-and-strip' コマンド (MIME ボタン上で
          `C-o' に割り当てられている) は、パートをセーブしてから外部の
          それと置き換えます。`gnus-mime-delete-part' (MIME ボタン上で
          `d' に割り当てられている) は、パートを削除します。これは編集
          をサポートしているバックエンドでだけ動作します。

        * `gnus-default-charset'

          デフォルト値は `iso-8859-1' に代わって
          `current-language-environment' 変数によって決定される値になり
          ます。また、`gnus-group-charset-alist' にあった `.*' の項目は
          削除されました。

        * 印刷の性能が向上しました。

          Gnus はそれ自身が、概略と記事バッファーにおける `O P' で
          Muttprint をサポートします。さらに MIME ボタン上で `p' を使う
          ことによって、個々の MIME パートのそれぞれを印刷することがで
          きます。

        * 拡張された書法仕様 (format specs)。

          書法仕様 `%&user-date;' が `gnus-summary-line-format-alist'
          に追加されました。それに、利用者定義による拡張されたフォーマッ
          トの仕様もサポートされています。拡張された書法仕様は
          `%u&foo;' のようなもので、関数
          `gnus-user-format-function-FOO' を起動します。`&' がエスケー
          プ文字に使われているので、古い利用者定義書法である `%u&' は今
          ではサポートされていません。

        * `/ *' (`gnus-summary-limit-include-cached') が書き直されました。

          これは `Y c' (`gnus-summary-insert-cached-articles') の別名で
          した (訳注: 以前は)。新しい関数は他の記事を濾過して除去します。

        * いくつかの制限命令は `C-u' 接頭引数で合致の否定を扱うことがで
          きます。

          `C-u' を subject、author または extra ヘッダー、すなわち `/
          s'、`/ a' および `/ x'
          (`gnus-summary-limit-to-{subject,author,extra}') で使うと、結
          果としてその表現に合致しないすべての記事が表示されます。

        * Gnus は外部パート (message/external) をインライン表示します。

   * Message モードの変更と関連する Gnus の機能

        * 遅延記事。

          Message バッファーにおける `C-c C-j' で、メッセージの送信を遅
          らせることができます。メッセージは指定された時刻に配送されま
          す。これはあなた自信のための忘備録として役に立つでしょう。
          *Note Delayed Articles::.

        * `auto-compression-mode' が有効になっていると、添付ファイルを
          見るときに自動で圧縮が解かれます。

        * 新しいオプション `gnus-gcc-mark-as-read' は、Gcc の記事に自動
          的に既読の印を付けます。

        * 添付ファイルの切り離し (externalizing)。

          `gnus-gcc-externalize-attachments' または
          `message-fcc-externalize-attachments' が非-`nil' になっている
          と、ローカルファイルを外部パートとして添付します。

        * Sendmail を使うときのエンベロープ送信者 (envelope sender) の
          アドレスが、カスタマイズできるようになりました。*Note メール
          変数: (message-ja)Mail Variables.

        * Gnus は今では Sender: ヘッダーを自動では生成しません。

          それは初期においては、利用者が設定した email アドレスが Gnus
          が想定した利用者のディフォルトのアドレスと違っていた場合に生
          成されました。今日ではその想定アルゴリズムが正しいことはまれ
          で、Sender: ヘッダーの唯一の (議論の的になる) 用途は、ニュー
          スを cancel/supersede する資格があるかどうかを検査すること
          (これは代わりに、他の章で述べられる Cancel Locks によって解決
          されました) なので、そのヘッダーの生成はディフォルトで抑制さ
          れています。変数 `message-required-headers'、
          `message-required-news-headers' および
          `message-required-mail-headers' を参照して下さい。

        * サードパーティーによる `message-utils.el' の機能が
          `message.el' に加えられました。

          Message は表題の行から `(was: <old subject>)' を削除するかど
          うかを尋ねるようになりました
          (`message-subject-trailing-was-query' 参照)。`C-c M-m' と
          `C-c M-f' は挿入されたテキストを示す印を挿入します。`C-c C-f
          a' は X-No-Archive: ヘッダーを付け加えます。`C-c C-f x' は、
          適切なヘッダーと、クロスポストとフォロー先についての注意書き
          を本文に挿入します (`message-cross-post-*' 変数群を見て下さ
          い)。

        * 今や `message-generate-headers-first' が `nil' だったら、メッ
          セージの作成を始めるときに References と X-Draft-From ヘッダー
          は生成されません。

        * X-Faces ヘッダーの挿入が簡単になりました。*Note X-Face::.

        * グループカーボンコピー (GCC) を引用符で囲む。

          空白や他の変な文字を含むグループを扱えるようにするために、グ
          ループは Gcc: header に置かれる前に引用符で囲まれます。これは、
          空白を含むグループが使えるようにするために、もはや
          `gnus-message-archive-group' のような変数に引用文字を含めるべ
          きではないことを意味します。さらに、文字列 `nnml:foo,
          nnml:bar' (二つのグループに Gcc を格納することを示す) を使っ
          ているならば、`("nnml:foo" "nnml:bar")' というリストを返すよ
          うに変更しなければなりません。さもないと、Gcc: 行は間違った囲
          まれ方をされてしまうでしょう。初期のころに文字列 `nnml:foo,
          nnml:bar' を返すようにしたことが間違いだったことに着目して下
          さい。それは直接挿入されたので、まったく問題を生じませんでし
          た。

        * `message-insinuate-rmail'

          `(message-insinuate-rmail)' と `(setq mail-user-agent
          'gnus-user-agent)' を `~/.emacs' に加えることによって、
          `message-mode' でメッセージの作成、返信および転送を行なうよう
          に Rmail を説得することができます。そこでは MML の威力を堪能
          することができます。

        * `message-minibuffer-local-map'

          この下の行は、メッセージを再送するときに BBDB を使えるように
          します:
               (define-key message-minibuffer-local-map [(tab)]
                 'bbdb-complete-name)

        * `gnus-posting-styles'

          このような合致の様式が加わりました。

               ((header "to" "larsi.*org")
                (Organization "Somewhere, Inc."))

          下記のような古い様式は時代遅れになりましたが、まだ受け入れら
          れます。

               (header "to" "larsi.*org"
                       (Organization "Somewhere, Inc."))

        * `message-ignored-news-headers' と `message-ignored-mail-headers'

          `X-Draft-From' と `X-Gnus-Agent-Meta-Information' が、これら
          二つの変数に加えられています。それらをカスタマイズする場合に、
          もしかするとそれら二つのヘッダーも加える必要があります。

        * Gnus は“format=flowed”(RFC 2646) パラメーターをサポートしま
          す。メッセージを作成するときに、それは `use-hard-newlines' で
          活性化されます。format=flowed のデコードは以前からできました
          が、初期の版では説明の文書がありませんでした。

        * `mm-fill-flowed' オプションで“format=flowed”メッセージを流
          動テキストとして処理することをやめさせることができます。また、
          PGP 署名が埋め込まれたメッセージを送信するとき、流動テキスト
          の処理は行なわれません。*Note 流動テキスト:
          (emacs-mime-ja)Flowed text.  (Gnus 5.10.7 の新機能)

        * Gnus は RFC 2298 の開封確認要求の生成をサポートします。

          これはメッセージモードの `C-c M-n' キーで呼び出されます。

        * Message は Importance: ヘッダー (RFC 2156) をサポートするよう
          になりました。

          メッセージバッファーで `C-c C-f C-i' か `C-c C-u' を使うと、
          可能な値が循環します。

        * Gnus はニュースの Cancel Locks をサポートします。

          投稿するニュース記事に `Cancel-Lock' ヘッダーが挿入されること
          です。これは、記事をあなたが書いたのかどうかを確かめるために
          使います (キャンセルと置き換えのとき)。最初に記事を投稿すると
          きに、Gnus はランダムなパスワード文字列を生成し、カスタムの機
          構を使って `~/.emacs' にセーブします。その変数は
          `canlock-password' と呼ばれますが、機密を気にするデータではあ
          りません。ウェブ上で canlock を公開しても、以前から彼女にでき
          なかった何かを、誰かができるようにするものではありません。
          `message-insert-canlock' をカスタマイズすることによって、振る
          舞いを変更するができます。

        * Gnus は PGP (RFC 1991/2440)、PGP/MIME (RFC 2015/3156) および
          S/MIME (RFC 2630-2633) をサポートします。

          これには S/MIME と OpenPGP が実装されている必要があります。で
          も追加の Lisp ライブラリーは要りません。メッセージの作成時に、
          いくつかのメニューと `C-c RET' キーの割り当てが Attachments
          メニューに追加されます。これはまた、
          `gnus-article-hide-pgp-hook' を時代遅れにしました。

        * MML (Mime 作成) コマンドの接頭キーが、`M-m' から `C-c C-m' に
          変わりました。

          この変更によって、標準キー割り当ての `back-to-indentation' と
          の衝突が回避されました。このコマンドもまた、メッセージモード
          では役に立つのです。

        * `message-forward-show-mml' のディフォルトが `best' というシン
          ボルに変わりました。

          値 `best' の振る舞いは、それがふさわしい場合は MML を表示する
          (すなわち MIME に変換する) ことです。変換がディジタル署名を無
          効にしてしまうので、署名された、または暗号化されたメッセージ
          を転送するときは MML は使われません。

        * `auto-compression-mode' が有効になっていると、添付ファイルを
          見るときに自動で圧縮が解かれます。

        * 非-ASCII ドメイン名のサポート。

          Message は From:, To: および Cc: にある非-ASCII ドメイン名を
          サポートし、メッセージの送信をしようとしたときにエンコードす
          るかどうかを尋ねます。`message-use-idna' 変数でこれを制御しま
          す。Gnus もまた、メッセージを見るときに From:, To: および
          Cc: にある非-ASCII ドメイン名をデコードします。これを制御する
          のは `gnus-use-idna' 変数です。

        * Message バッファーに添付ファイルをドラッグ＆ドロップすること
          ができます。

          `mml-dnd-protocol-alist' と `mml-dnd-attach-options' を参照し
          て下さい。*Note MIME: (message)MIME.

   * バックエンドの変更

        * Gnus は RSS のニュース配送を、ニュースグループとして表示します。
          *Note RSS::.

        * nndoc バックエンドは、mailman のまとめ送りと exim が弾いたメッ
          セージをサポートするようになりました。

        * Gnus は Maildir グループをサポートします。

          Gnus は新バックエンドである `nnmaildir.el' を含んでいます。
          *Note Maildir::.

        * nnml と nnfolder バックエンドは、グループ毎に印 (marks) を格
          納するようになりました。

          これは nnml/nnfolder サーバー/グループ を `~/.newsrc.eld' と
          切り離して、しかし印は守りつつ、バックアップすることを可能に
          します。さらに、例えば研究室や職場などの組織内で、
          (`~/.newsrc.eld' ファイルを共有すること無しに) 利用者間で記事
          と印を共有することをも可能にします。これは、`~/.newsrc.eld'
          に格納される印を、グループ毎の `.marks' ファイル (nnml 用) と
          `GROUPNAME.mrk' ファイル (GROUPNAME の名前を持つ nnfolder 用)
          に格納することによって動作します。nnml/nnfolder を他のマシン
          に引っ越しても、Gnus は `~/.newsrc.eld' にある情報の代わりに、
          自動的に `.marks' か `.mrk' ファイルを使います。新しいサーバー
          変数である `nnml-marks-is-evil' と `nnfolder-marks-is-evil'
          が、この機能を抑制するために使うことができます。

   * 外見に関すること

        * グループと概略バッファーのメニューバー項目の名前“Misc”は
          “Gnus”に改名されました。

        * Message mode で“MML”と名付けられたメニュー項目は
          “Attachments”に改名されました。このメニューは、署名と暗号化
          (*Note セキュリティー: (message-ja)Security.) のような、セキュ
          リティーに関連したものも含んでいることに着目して下さい。

        * ツールバーがグループ、概略および Message モードで GNOME のア
          イコンを使うように更新されました。ツールバーはカスタマイズ可
          能です。これは Gnus 5.10.9 の新機能です。(Emacs だけです。
          XEmacs は未対応。)

        * The tool bar icons are now (de)activated correctly グループバッ
          ファーで変数 `gnus-group-update-tool-bar' を参照して下さい。
          そのディフォルト値は Emacs のバージョンに依存しています。これ
          は Gnus 5.10.9 の新機能です。

   * その他の変更

        * `gnus-agent'

          Gnus エージェントは大規模な更新を経て、今やディフォルトで有効
          になります。そして `gnus-select-method' と
          `gnus-secondary-select-method' で指定されるすべての nntp と
          nnimap のサーバーが、ディフォルトでエージェント化されます。初
          期においては `gnus-select-method' のサーバーだけがディフォル
          トでエージェント化され、エージェントはディフォルトでは有効に
          されませんでした。エージェントが有効にされると、今では可能な
          らばバックエンドに代わってエージェントのキャッシュからヘッダー
          が取り寄せられます。初期には、これはオフライン (unplugged) の
          状態でのみ行なわれていました。サーバーバッファーで `J a' と
          `J r' を使うことによって、サーバーの登録と削除を行なうことが
          できます。グループバッファーから `J u' か `J s' を使って命令
          しない限り、Gnus は記事をエージェントのキャッシュにダウンロー
          ドしません。`(setq gnus-agent nil)' を設定することによって、
          エージェントが有効にされていなかった昔の振る舞いに戻すことが
          できます。もはや `~/.gnus.el' に `(gnus-agentize)' を置いてお
          く必要が無いことに注意して下さい。

        * Gnus は plugged のときに、エージェントに NOV と記事を読み込み
          ます。

          Plugged のときに記事を読む場合に、その記事がすでにエージェン
          トにあるならば、もう一度ダウンロードすることはありません。
          `(setq gnus-agent-cache nil)' は旧式の動作に戻します。

        * Dired の統合。

          `gnus-dired-minor-mode' (*Note Other modes:: 参照) は dired
          のバッファーで、添付ファイルを送信する、mailcap の適切な項目
          を使ってファイルを開く、それに mailcap の項目を使ってファイル
          を印刷するためのキーを割り当てます。

        * ポイントの位置決めのための書法仕様 (format spec) である `%C' は、
          `%*' に変更されました。

        * `gnus-slave-unplugged'

          オフラインの Gnus をスレーブモードで起動する新しいコマンドで
          す。



File: gnus-ja.info, Node: No Gnus, Prev: Oort Gnus, Up: New Features

No Gnus
.......

No Gnus の新しい機能:

   * インストールに関する変更

        * No Gnus を使ったことがあるが、以前の (安定した) 版に戻してし
          まった人たちへの注意。

          No Gnus (このリリースにつながる不安定な Gnus の枝) を試してみ
          たものの、安定版に戻してしまっている場合、このバージョンへアッ
          プグレードするときには注意して下さい。特に、`~/News/marks' ディ
          レクトリーの内容を (もしかしたら注意深く選んで) 削除する必要
          があるでしょう。(訳注: 削除しないと、新しい No Gnus を初めて
          使ったときに、安定版を使っていなかった時期に更新されなかった
          marks ファイルが読み込まれて、`~/.newsrc.eld' ファイルの内容
          を上書きしてしまいます。) 削除することによって、このリリース
          で nntp のフラグを保存している marks ファイルからではなく
          `~/.newsrc.eld' からフラグを読むようになります (訳注: そして
          新しい marks ファイルが作られます)。nntp marks については、次
          の項目でさらに詳しい情報を得ることができます。一般にダウング
          レードすることは安全ではありません。

        * Lisp ファイルがディフォルトで `.../site-lisp/gnus/' にインス
          トールされるようになりました。以前は `.../site-lisp/' がディ
          フォルトでした。加えて、新しいインストーラーは他にインストー
          ルされている、新しい Gnus より優先される Gnus を検出して警告
          を発します。それらを手動で取り除いても良いし、`make
          remove-installed-shadows' を使って削除することもできます。

   * Gnus に含まれる新しいパッケージとライブラリー

        * Gnus は Emacs Lisp SASL ライブラリーを含むようになりました。

          これによって、Emacs の中から SASL の機構を利用するために、すっ
          きりした API を使うことができます。利用者の目に見える利点は、
          以前は無かった DIGEST-MD5 と NTLM がサポートされるようになっ
          たことです。*Note Emacs SASL: (sasl-ja)Top.

        * ManageSieve の接続に、ディフォルトで SASL ライブラリーを使う
          ようになりました。

          これによる主な変更点は、サーバーがサポートしている場合に
          DIGEST-MD5 と NTLM をサポートするようになったことです。

        * Gnus は password.el にパスワードをキャッシュする機構を含めました。

          パスワードキャッシュはディフォルトで有効です
          (`password-cache' を参照)。タイムアウトは 16秒と短いです
          (`password-cache-expiry' を参照)。PGG を PGP のバックエンドと
          して使う場合に、PGP のパスフレーズはこの機構で管理されます。
          ManageSieve 接続のパスワードは、利用者にそうするかどうかを尋
          ねてから、この機構が管理します。

   * 概略モードと記事モードの変更

        * 粘着記事バッファーを使えるようになりました。これは、別の記事
          を選択したときに再利用されない記事バッファーです。*Note
          Sticky Articles::.

        * 国際化ホスト名 (IDNA) を、`W i'
          (`gnus-summary-idna-message') を使うことによって、記事の本文
          中でデコードできるようになりました。この機能を使うには GNU
          Libidn (`http://www.gnu.org/software/libidn/') をインストール
          しておく必要があります。

        * 非-ASCII グループ名の取り扱いが非常に改善されました。完全にサ
          ポートしているバックエンドは現在 `nntp', `nnml', および
          `nnrss' です。エージェント、キャッシュ、それに印 (marks) もそ
          れらのバックエンドで機能します。*Note Non-ASCII Group
          Names::.

        * Gnus は dns-mode を使って text/dns として送信された DNS マス
          ターファイルを表示します。

        * Gnus は概略バッファーで新しい制限コマンド `/ r'
          (`gnus-summary-limit-to-replied') と `/ R'
          (`gnus-summary-limit-to-recipient') をサポートします。
          *Note Limiting::.

        * `Y t' (`gnus-summary-insert-ticked-articles') を使って、
          サーバーからすべての可視記事を取り寄せることができるようになりました。
          *Note Summary Generation Commands::.

        * Gnus は概略バッファーで新しい並べ替えコマンド `C-c C-s C-t'
          (`gnus-summary-sort-by-recipient') をサポートします。
          *Note Summary Sorting::.

        * S/MIME が LDAP の利用者証明書の検索に使えるようになりました。
          `smime-ldap-host-list' でサーバーを設定する必要があります。

        * OpenPGP ヘッダーにある URL をクリックすると、ヘッダーがダウン
          ロードされてあなたの PGP の鍵束に取り込まれます。

        * Picon はテキストの対象物の右側に表示できるようになりました。
          `gnus-picon-style' を見て下さい。*Note Picons::.

        * ANSI SGR 制御シーケンスを `W A' で変換することができます。

          中国語のニュース階層のグループにおいて、記事をハイライト表示
          するために ANSI シーケンスが使われます
          (`gnus-article-treat-ansi-sequences')。

        * Gnus は記事に“MIME-Version”ヘッダーがなくても記事を MIME デ
          コードします。このために `gnus-article-loose-mime' のディフォ
          ルト値が変更されました。

        * `gnus-decay-scores' をスコアファイルに合致する正規表現にでき
          ます。例えば `\\.ADAPT\\'' に設定すると、適応スコアファイルだ
          けが減衰されるようになります。*Note Score Decays::.

        * `gnus-ignored-from-addresses' を使う場合に、概略行におい
          て `To' と `Newsgroup' ヘッダーに相当する場所の最初に表示する
          文字列を、`gnus-summary-to-prefix' およ
          び `gnus-summary-newsgroup-prefix' でカスタマイズすることができます。
          *Note To From Newsgroups::.

        * MIME パートを外部にある本体で置き換えることができます。
          `gnus-mime-replace-part' と `gnus-article-replace-part' を見
          て下さい。*Note MIME Commands::, *Note Using MIME::.

        * `mm-fill-flowed' オプションで format=flowed なメッセージの取
          り扱いを無効にすることができます。また、PGP の署名が埋め込ま
          れたメッセージを送信するときに、flowed text は無効にされます。
          *Note 流動テキスト: (emacs-mime-ja)Flowed text.  (Gnus
          5.10.7 の新機能)

   * Message モードの変更

        * Gnus は“hashcash”client puzzle anti-spam の機構をサポートします。
          `(setq message-generate-hashcash t)' で有効になります。
          *Note Hashcash::.

        * メッセージバッファに添付ファイルをドラッグ＆ドロップできます。
          `mml-dnd-protocol-alist' と `mml-dnd-attach-options' を見て下
          さい。*Note MIME: (message-ja)MIME.

        * `message-yank-empty-prefix' オプションで、引用文の空行にどん
          な引用符を付けるかを制御することができます。*Note 挿入するた
          めの変数: (message-ja)Insertion Variables.

        * Gnus はメッセージバッファーでヘッダーを隠すために、それら以外
          の部分だけが見えるようにバッファーを狭めます。`References' は
          ディフォルトで表示されません。すべてのヘッダーが見えるように
          するには `(setq message-hidden-headers nil)' として下さい。
          *Note メッセージヘッダー: (message-ja)Message Headers.

        * You can highlight different levels of citations like in the
          article buffer.  See `gnus-message-highlight-citation'.

        * 記事バッファーでできるのと同様に、引用された文のレベルの違いに応じ
          たハイライトを行うことができます。
          `gnus-message-highlight-citation' を参照して下さい。

        * Message モードでは `auto-fill-mode' がディフォルトで ON にな
          ります。`message-fill-column' を参照して下さい。*Note メッセー
          ジヘッダー: (message-ja)Message Headers.

        * 署名ファイルを `message-signature-directory' 変数で指定するディ
          レクトリーに置くことができます。

        * "○○さん writes:" のような行の形式を、オプション
          `message-citation-line-format' で指定することができます。これ
          を使うには `message-citation-line-function' 変数を
          `message-insert-formatted-citation-line' に設定する必要があり
          ます。

   * バックエンドの変更

        * nntp バックエンドは記事の印を `~/News/marks' に保管します

          そのディレクトリーは `nntp-marks-directory' という (カスタマ
          イズ可能な) 変数で変更することができます。また、nntp で印を使
          うことを `nntp-marks-is-evil' という変数 (バックエンド変数)
          で無効にすることができます。印を使うことの利点は、
          `~/News/marks' を別のホストにインストールされた Gnus にも
          (rsync, scp などを使って) コピーすることによって、どの記事を
          読んでどの記事に印を付けたかの情報を、そこでも維持できること
          です (訳注: 同じ nntp サーバーに接続する場合に限ります)。
          `~/News/marks' のデータは `~/.newsrc.eld' にある同じデータよ
          り優先されます。

        * RSS の購読情報を OPML のファイルから取り込み、または書き出す
          ことができるようになりました。*Note RSS::.

        * IMAP の identity (RFC 2971) をサポートします。

          ディフォルトでは Gnus はそれ自身に関する情報を送信しませんが、
          `nnimap-id' 変数を使ってそれをカスタマイズすることができます。

        * `nnrss' バックエンドは多言語テキストをサポートします。
          `nnrss' グループでは非-ASCII 文字列を使ったグループ名もサポー
          トされます。*Note RSS::.

        * POP3 によるメールの取得において、
          SSL/TLS と StartTLS をサポートするようになりました。

        * nnml バックエンドではメッセージを圧縮するために `gzip' 以外の
          プログラムも使うことができます。*Note Mail Spool::.

        * nnml バックエンドではグループを圧縮することができます。

          関数 `gnus-group-compact-group' (グループバッファーの `G z'
          キー) および `gnus-server-compact-server' (サーバーバッファー
          の `z' キー) で呼び出すこの機能は、グループのすべての記事の番
          号を 1 から順に振り直して、すきまを取り除きます。その結果とし
          て、正しい全記事数を得ることができます (再びメッセージが削除
          されるまでは)。

   * 外見

        * ツールバーが GNOME のアイコンを使うように更新されました。ツー
          ルバーをカスタマイズすることもできます。まだマニュアルで文書
          化されていませんが、`M-x customize-apropos RET -tool-bar$' で
          始めることができるはずです。(Emacs だけです。XEmacs は未対応。)

        * ツールバーのアイコンがグループバッファーで正しく活性化 (また
          は不活性化) されるようになりました。変数
          `gnus-group-update-tool-bar' を参照して下さい。そのディフォル
          ト値は Emacs の版に依存します。

        * Gnus のバッファーにおける XEmacs の toolbar の位置を変更でき
          るようになりました。`gnus-use-toolbar' と
          `message-use-toolbar' を見て下さい。

   * その他の変更

        * サーバーバッファーで外部グループのための select-method を変更
          すると、すぐにそのサーバーを使うグループの講読に反映されるよ
          うになりました。例えば `nntp-via-address' を
          `foo.example.com' から `bar.example.com' に変更すると、Gnus
          は次回から中間ホスト `bar.example.com' を経由してニュースサー
          バーに接続するようになります。

        * `W e' で `all.SCORE' ファイルをグループバッファーから編集する
          ことができます。




File: gnus-ja.info, Node: On Writing Manuals, Next: Terminology, Prev: The Manual, Up: Appendices

マニュアルを書く
================

おそらく、たいていのマニュアルは事後に書かれていると思います。つまり、
すでにあるプログラムを文書化しているということです。このマニュアルはそ
ういう方法で書かれていません。何かを実装するときは、何かをそのままマニュ
アルの一節に書きます。それから機能の説明が難しいことを発見して、それが
どのようにあるべきであるかを書き、次には実装を変更します。文書とコード
を書くことは協調して行なわれていきます。

もちろん、これはこのマニュアルには流れ構造がほとんど無いか、あっても少
しだということを意味します。Gnus の完全にすべてのことが説明されています
が、あなたが探している場所ではないということがよくあります。これはリファ
レンスマニュアルであって、Gnus を始めるための手引きではありません。

それはこのリファレンスマニュアルを元にして書かれた、まったく違った本に
なるでしょう。とても違ったものになるはずです。



File: gnus-ja.info, Node: Terminology, Next: Customization, Prev: On Writing Manuals, Up: Appendices

用語
====

"ニュース (news)"
     これは、あなたがそれを読むために使うことになっているもの、つまり、
     それというのがニュースです。ニュースは一般的には近くの NNTP サーバー
     から取得され、一般的にはすべての人が公に利用することができます。も
     しニュースを投稿すると、あなたがまさに書いたものを全世界の人たちが
     読むことになるでしょう。そして、みんながいたずらっぽくクスクス笑う
     でしょう。あなたの知らないところで。

"メール (mail)"
     あなたに個人的に配送されるすべてのものがメールです。いくつかのニュー
     ス/ メールリーダー (Gnus のような) はメールとニュースの区別を曖昧
     にしますが、違いがあります。メールは私的です。ニュースは公的です。
     メールを送信することは投稿ではなく、返信はフォローアップではありま
     せん。

"返信 (reply)"
     あなたが読んでいるものを書いた人にメールを送ることです。

"フォローアップ (follow up)"
     あなたが読んでいる記事に応答して、現在のニュースグループに記事を投
     稿することです。

"バックエンド (back end)"
     Gnus はメールとニュースがほとんど同じだとみなします。本当に。違い
     は実際の記事にどのようにアクセスするかだけです。メールメッセージは
     ローカルディスクのファイルから読めるのに対して、ニュース記事は一般
     に NNTP プロトコルで取得します。Gnus の内部構造は、それらのために
     「フロントエンド」と数々の「バックエンド」から成り立っています。内
     部的には、あなたがグループに入る (そう、RET をたたく) と、それによっ
     て Gnus のフロントエンドの機能を呼び出します。そうするとフロントエ
     ンドは、バックエンドに「foo グループの記事のリストをくれ」とか
     「4711 番の記事を見せてよ」と「話す」のです。

     そういうわけで、バックエンドは主にプロトコルか、ファイルの形式とディ
     レクトリーの配置のどちらかを定義します。前者は `nntp' バックエンド
     が NNTP でニュースにアクセスしたり、`nnimap' バックエンドが IMAP
     でメールにアクセスすることを指します。また、後者は `nnspool' バッ
     クエンドが共通の「スプールディレクトリー」形式にアクセスしたり、そ
     れととてもよく似たファイルの形式とディレクトリーの配置を介して
     `nnml' バックエンドがメールにアクセスすることを指します。

     Gnus は基礎的なメディアを扱いません。言わばこれは、すべてバックエ
     ンドによって行なわれるということです。バックエンドは記事にアクセス
     するための機能の集成です。

     しかし、「バックエンド」という用語は「サーバー」と言った方がふさわ
     しい場面でときどき使われます。そして同じことを指すことができる「選
     択方法」(select method) という用語があります。かように Gnus の用語
     はとても混乱しています。

"基本 (native)"
     Gnus はいつも一つの方法 (とバックエンド) を、ニュースを得るための
     「基本」もしくはディフォルトの手段として使います。

"外部 (foreign)"
     同時に任意の数の外部グループをアクセスできる状態にすることもできま
     す。これらはニュースを取得するための、基本ではなく、二次のでもない
     バックエンドを使うグループです。

"二次の (secondary)"
     二次のバックエンドは、基本と外部の間くらいに位置するバックエンドで
     すが、ほとんど基本と同じように動作するものです。

"記事 (article)"
     ニュースとして投稿されたメッセージです。

"メールメッセージ (mail message)"
     メールで送られたメッセージです。

"メッセージ"
     メールメッセージもしくはニュース記事です。

"ヘッド (head)"
     メッセージの最上部で、管理情報 (等) が入れられているところです。

"本文 (body)"
     記事の残りの部分です。ヘッドに無いものはすべて本文です。

"ヘッダー (header)"
     記事のヘッドの行です。

"ヘッダー群 (headers)"
     そのような行の集合もしくは、ヘッドの集合です。もしくは、NOV 行の集
     合です。

"NOV"
     NOV は News OverView の略です。それらはニュースサーバーのヘッダー
     の一つの形式で、記事の簡潔なヘッダーの情報を含むデータを提供するた
     めに、サーバーが自ら作ります。`nntp' バックエンドでは Gnus は
     NNTP サーバーが作るものを使いますが、いくつかのサーバー (特に
     `nnml') のためには Gnus 自身が作ります。

     グループに入ると、Gnus はグループのすべての未読記事のヘッダーをバッ
     クエンドに要求します。ほとんどのサーバーは News OverView 様式をサ
     ポートしています。それは標準の HEAD 様式よりコンパクトで、とても速
     く、読んで解析することができます。

     NOV データは一つ以上のテキスト行 (*Note Motion by Text Lines:
     (elisp)Text Lines.) から成り、それぞれの行は一つの記事のヘッダー情
     報を持っています。ヘッダー情報はタブで区切られた一連のヘッダーの内
     容で、記事番号、表題、著者、日付、Message-ID、References などを含
     んでいます。

     それらのデータは Gnus が概略行をすばやく生成することを可能にします。
     しかしサーバーが NOV をサポートしていなかったり、故意にまたはある
     理由でそれを使わないようにしてしまうと、Gnus はそれぞれの記事のヘッ
     ダーを一つずつ解析することによってヘッダー情報を生成しようとするで
     しょう。それには時間がかかります。したがって、サーバーが間違った
     NOV データを作ることがわかっている場合以外は、nn*-nov-is-evil
     (*Note Slow/Expensive Connection::) を `nil' ではない値にすること
     は、通常は良い考えではありません。

"レベル (level)"
     それぞれのグループは何らかの「レベル」(1-9) で購読されています。低
     いレベルのものは高いレベルのものより「より」購読されています。実際
     のところ、レベル 1-5 のグループは「購読」; 6-7 は「未購読」; 8 は
     「ゾンビ」; 9 は「切られた」(killed) と見なされます。グループの一
     覧を表示したり、新しい記事を走査する命令は、すべて数値接頭引数を
     「動作レベル」として使います。

"切られたグループ (killed groups)"
     切られたグループの情報は保存されたり更新されたりしないので、切られ
     たグループを扱うのは購読されているグループよりも簡単です。

"ゾンビグループ (zombie groups)"
     ほとんど切られたグループと同じで、それより少し死んでいるだけです。

"アクティブファイル (active file)"
     ニュースサーバーは、どの記事を持っているかとどのグループが存在する
     かを記録しておかなければなりません。アクティブファイルに格納される
     すべてのこの情報は、あなたが推測するように比較的大きいです。

"偽グループ (bogus groups)"
     `.newsrc' ファイルに存在するけれどもサーバーが知らないグループ (す
     なわち、それはアクティブファイルにありません) は *偽グループ* です。
     おそらくそのグループは (もはや) 存在していないのでしょう。

"活性化 (activating)"
     サーバーにグループの情報を尋ねて未読記事の数を演算する行為は「グルー
     プを活性化 (activate) する」と呼ばれています。活性化されていないグ
     ループは、グループバッファーに `*' とともに一覧表示されます。

"スプール (spool)"
     ニュースサーバーは何らかのやり方で記事をローカルに保存します。ある
     古い流儀の保存方法は、単に記事毎に一つのファイルを持つことです。そ
     れは伝統的なスプール (traditional spool) と呼ばれます。

"サーバー (server)"
     接続して、ニュース (もしくはメール) を取得することができるマシンで
     す。

"選択方法 (select method)"
     バックエンドと、サーバーおよび仮想サーバーの設定を指定する構造です。

"仮想サーバー (virtual server)"
     名前が付けられていて、その名前で指定することができる選択方法です。
     選択方法は (物理的な) サーバーに関するすべてを定義するので、ものご
     とを全体として捉えるのは仮想サーバーになります。

"洗濯 (washing)"
     バッファーを持ってきて、何らかの種類のフィルターにかけることです。
     結果は (たいてい) 元のものよりもよりきれいで喜ばしいものになるでしょ
     う。

"一時グループ (ephemeral groups)"
     たいていのグループはどの記事を読んだかのデータを保存します。「一時」
     グループはデータが溜められないグループです--グループを出ると、それ
     は天空のかなたに消え去ります。

"固定グループ (solid groups)"
     これは一時グループの反対です。グループバッファーに一覧表示されてい
     るすべてのグループは固定グループです。

"まばら記事 (sparse articles)"
     `gnus-build-sparse-threads' が有効にされているときに、それらは概略
     バッファーに表示される (存在しない) 記事のための場所取りです。

"スレッド化 (threading)"
     応答の記事を、それが応答した元記事の直後に置くことです--階層的な流
     儀で。

"根 (root)"
     スレッドの最初の記事が根です。それはスレッドのすべての記事の祖先で
     す。

"親 (parent)"
     応答が得られた記事です。

"子 (child)"
     それとは別の記事、すなわち親に応答する記事です。

"まとめ送り (digest)"
     複数のメッセージを一つのファイルに集めたものです。最も一般的なまと
     め送りの様式は、RFC1153 で規定されています。

"分割 (splitting)"
     ある規則によってメールを区分けする行為です。ときどき間違ってメール
     の濾過 (filtering) と呼ばれます。



File: gnus-ja.info, Node: Customization, Next: Troubleshooting, Prev: Terminology, Up: Appendices

カスタマイズ
============

すべての変数は、このマニュアルのどこか他のところで適切に説明されていま
す。この章は、非常に良くある状況でどのように Gnus をカスタマイズすれば
良いかを調べるための、総合的な案内になるように作られています。

* Menu:

* Slow/Expensive Connection::   ローカルの Emacs で、どこかからニュースを得る
* Slow Terminal Connection::    遠くにあるホストの Emacs を実行する
* Little Disk Space::           大きな設定ファイルを持つことは良くない
* Slow Machine::                速いマシンを買いたい気がする



File: gnus-ja.info, Node: Slow/Expensive Connection, Next: Slow Terminal Connection, Prev: Customization, Up: Customization

遅くて高価な接続
----------------

Emacs をローカルのマシンで実行していて、非常に細いひもの向こうのマシン
からニュースを取り寄せているとしたら、Gnus がサーバーから取って来なけれ
ばならないデータの総量を減らしたくなるでしょうね。

`gnus-read-active-file'
     これを `nil' にして下さい。これは Gnus がサーバーにアクティブファ
     イル全体を要求することを禁止します。このファイルはしばしば非常に大
     きいです。さらに、Gnus が不意にアクティブファイルをとにかく取り寄
     せようと決意しないように、`gnus-check-new-newsgroups' および
     `gnus-check-bogus-newsgroups' も `nil' に設定する必要があります。

`gnus-nov-is-evil'
     通常これは *常に* `nil' にしておかなければなりません (それがディフォ
     ルトです)。例えばもし `nntp' バックエンドで NOV (*Note
     Terminology::) を使わないようにしたい (*Note Crosspost
     Handling::) のであれば、これを設定する代わりに `nntp-nov-is-evil'
     を `nil' 以外の値にして下さい。しかし Gnus は NNTP サーバーが NOV
     をサポートするかどうかを自分で調べるので、通常 `nntp-nov-is-evil'
     を設定する必要はありません。とにかく Gnus が NOV を利用しないよう
     にすると、NNTP サーバーから記事のヘッダーを掴み取ってくる動作が、
     あまり速くなりません。

     他のバックエンドのための変数として `nndiary-nov-is-evil',
     `nndir-nov-is-evil', `nnfolder-nov-is-evil',
     `nnimap-nov-is-evil', `nnml-nov-is-evil', `nnspool-nov-is-evil' お
     よび `nnwarchive-nov-is-evil' があります。`gnus-nov-is-evil' に
     `nil' 以外の値を与えると、それらすべての変数を上書きしてしまうこと
     に注意して下さい。 (1) (*Note Slow/Expensive
     Connection-Footnotes::)


File: gnus-ja.info  Node: Slow/Expensive Connection-Footnotes, Up: Slow/Expensive Connection

(1) もっとも `nnkiboze', `nnslashdot',
`nnultimate' および `nnwfm' の各バックエンドには、それら
専用の nn*-nov-is-evil がありませんが。



File: gnus-ja.info, Node: Slow Terminal Connection, Next: Little Disk Space, Prev: Slow/Expensive Connection, Up: Customization

遅いターミナル接続
------------------

Emacs と Gnus を実行しているシステムに、家のコンピューターをダイアルアッ
プで接続しているとしましょう。モデムが遅い場合は、電線を伝って送られて
いるデータの総量を (可能な限り) 減らしたくなるでしょう。

`gnus-auto-center-summary'
     Gnus が概略バッファーをリセンターする (訳注: 現在の記事が真ん中に
     表示されるようにする) するために、これを `nil' に設定して下さい。
     これが `vertical' だったら、垂直方向のリセンターだけをします。
     `nil' でも `vertical' でも無ければ、水平方向と垂直方向の両方でリセ
     ンターを行ないます。

`gnus-visible-headers'
     記事に含まれるヘッダーを最小限に減らします。実際のところ、それらが
     無くてもすべて間に合わせることができます--たいていの役に立つデータ
     は、とにかく概略バッファーにありますから。この変数を `^NEVVVVER'
     や `From:' や、何でも必要になりそうなものに設定して下さい。

     利用できるすべての「隠す」機能を有効にするために、以下を使って下さ
     い:

          (setq gnus-treat-hide-headers 'head
                gnus-treat-hide-signature t
                gnus-treat-hide-citation t)

`gnus-use-full-window'
     これを `nil' に設定することによって、すべてのウィンドウを小さくす
     ることができます。これは総じてそんなに減らしませんが、この記事は何
     が何でも読みたくなかったんだと決心する前に、それを少ししか見ないで
     済みます。

`gnus-thread-hide-subtree'
     これを `nil' ではない値にしておくと、すべての概略バッファーのスレッ
     ド (の親以外) は、初めは隠されているようになります。

`gnus-updated-mode-lines'
     これを `nil' にすると、Gnus はバッファーのモード行に情報を表示しな
     いので、いくらか時間を節約できるでしょう。



File: gnus-ja.info, Node: Little Disk Space, Next: Slow Machine, Prev: Slow Terminal Connection, Up: Customization

少ないディスク容量
------------------

起動ファイルはやや大きくなり得るので、空き容量が少なくなってきていると
きは、そのサイズを少し小さくする必要があるでしょう。

`gnus-save-newsrc-file'
     これを `nil' にすると、Gnus は決して `.newsrc' を保存しませ
     ん---`.newsrc.eld' だけを保存します。これは Gnus 以外のニュースリー
     ダーが使えなくなることを意味します。この変数はディフォルトで `t'
     です。

`gnus-read-newsrc-file'
     これが `nil' であれば、Gnus は `.newsrc' を決して読みませ
     ん---`.newsrc.eld' だけを読みます。これは Gnus 以外のニュースリー
     ダーが使えなくなることを意味します。この変数はディフォルトでは
     `t' です。

`gnus-save-killed-list'
     これが `nil' であると、Gnus は死んだグループのリストを保存しません。
     この変数を `nil' に設定したときは、`gnus-check-new-newsgroups' を
     `ask-server' に、`gnus-check-bogus-newsgroups' を `nil' に設定する
     べきでしょう。この変数はディフォルトで `t' です。



File: gnus-ja.info, Node: Slow Machine, Prev: Little Disk Space, Up: Customization

遅いマシン
----------

遅いマシンを持っているか、または本当は単に忍耐力が無いだけでも、Gnus を
速く走らせるためにできることが少しあります。

起動を速くするために `gnus-check-new-newsgroups' およ
び `gnus-check-bogus-newsgroups' を `nil' に設定して下さい。概
略バッファーに入ることと抜けることを速くするため
に、`gnus-show-threads' と `gnus-use-cross-reference'、それ
に `gnus-nov-is-evil' を `nil' に設定して下さい。
*Note Slow/Expensive Connection:: も参照して下さい。



File: gnus-ja.info, Node: Troubleshooting, Next: Gnus Reference Guide, Prev: Customization, Up: Appendices

問題解決
========

Gnus は箱から出してすぐに *非常に* よく動作します--どんな問題が起きるこ
とも想像できません、本当に。

オッホン。

  1. コンピューターの電源が入っていることを確かめて下さい。

  2. 現在通用している版の Gnus を本当に読み込んでいることを確認して下さ
     い。今まで GNUS を実行してきたのであれば、Gnus が動作するように一
     度 Emacs を終了して再起動する必要があります。

  3. `M-x gnus-version' を試して下さい。もし `No Gnus v0.7' のようなも
     のが出てきたなら、正しいファイルが読み込まれています。そうならない
     のは古い `.el' ファイルが散らかっているせいでしょう。それらを消し
     て下さい。

  4. FAQ と入門書を読むために、ヘルプグループ (グループバッファーで `G
     h') を読んで下さい。

  5. Gnus は多くの再帰構造で動作しているので、何か極端な (そして非常に希
     な) 場合には、Gnus は再帰を「あまりに深く」降りすぎてしまい、Emacs があ
     なたにビープ音を鳴らすことがあります。もしこれが起こったなら、
     `max-lisp-eval-depth' を 500 かそこいらの値に設定して下さい。

もし他のすべてが失敗したなら、バグとして問題を報告して下さい。

もし Gnus のバグを見つけたなら、`M-x gnus-bug' 命令で報告することができ
ます。`M-x set-variable RET debug-on-error RET t RET' とタイプして、私
にバックトレースを送って下さい。私はバグを修正しようとしますが、あなた
がバグを再現させる方法を正確に書いてくれないと、それを修正することがで
きません。

バグ報告では、詳細すぎることは決してありません。バグ報告をするときは、
いつも `M-x gnus-bug' 命令を使って下さい。それを使うたびに 10KB のメー
ルができてしまっても、そしてあなたの環境のことを以前私に 500 回送ったこ
とがあったとしてもです。

私がどんなたぐいの記憶も持っていないことを、覚えておくことも重要です。
もしあなたがバグ報告を送ると、私は返答を送ります。その後で、あなたが
「いや、そうじゃない! このうすのろめっ!」とだけ送り返してきても、私はあ
なたが何について私を侮辱しているかがわかりません。常に、すべてを説明し
過ぎて下さい。それは私たちすべてにとって、もっとやり易くなります--もし
私が必要なすべての情報を得られなかったら、私はあなたにメールを送ってさ
らなる情報を求め、その結果すべてがより多くの時間を費やすことになります。

もしあなたの直面している問題が非常に視覚的で、それをうまく説明できない
場合は、Emacs のウィンドウをファイルにコピーして (例えば、`xwd' で)、そ
れをどこか手の届くどこかにおいて、その画像の URL をバグ報告に含めて下さ
い。

もしあなたがバグの修正や改善のためのパッチを寄稿して下さるのでしたら、
すみませんがそのパッチは `diff -u' で作って下さい。

問題を報告する前にもっとデバッグしたければ、あなた自身で問題を解決して
パッチを送るために edebug を使うことができるでしょう。Lisp コードのデバッ
グについては ELisp マニュアル (*Note Debugging Lisp Programs:
(elisp)Debugging.) に書かれています。edebug を始めるには、もし `c' を押
したときにある変な振舞いが発見されるならば、第一歩は `C-h k c' をタイプ
し、ドキュメンテーション・バッファー中でハイパーリンクをクリック
(Emacs のみ) して、その関数定義を参照することです。そしてその関数名の場
所で `M-x edebug-defun RET' をタイプして Gnus に戻り、そのコードを呼び
出すために `c' を押しで下さい。Lisp バッファーでは、`SPC' でシングルス
テップ動作、`M-:' で式を評価、`C-h v' で変数を検査、`q' で実行を中断、
あるいは `c' か `g' で実行を再開することができます。

ときどき、直接に elisp のエラーを起こさないものの、Gnus が非常に遅くな
るために明らかになる問題があります。そんな場合には `M-x
toggle-debug-on-quit' を使って、遅くなったときに `C-g' を押し、しかる後
にバックトレースを解析して下さい (その手続きを繰り返すことは、真の問題
領域を分離するのに役立ちます)。

より上等なやり方は elisp プロファイラー (訳注: プログラムの実行時の動き
を分析する道具) ELP を使うことです。プロファイラーについてはどこか他の
場所で完全に文書化されているはずですが、それを始めるために必要な手順を
少々書いておきましょう。第一に、プロファイルしてみたい Gnus の部分を計
測するための設定を、例えば `M-x elp-instrument-package RET gnus' や
`M-x elp-instrument-package RET message' で行なって下さい。そして、遅い
動作を行なわせてから `M-x elp-results' を押しましょう。すると、どの動作
が時間を食っているかを見て、それらをさらにまたデバッグすることができま
す。動作全体が、プロファイラーの出力の中で最も遅い関数で費やされた時間
よりはるかに長くかかるのは、たぶん Gnus の間違っている部分をプロファイ
ルしたせいでしょう。プロファイルの統計をリセットするには `M-x
elp-reset-all' を使って下さい。`M-x elp-restore-all' はプロファイルする
動作を取り除くことになっていますが、Gnus によって複雑にされかつ動的なコー
ド生成の影響を受けるため、それは必ずしも完全には動作しないかもしれませ
ん。

もし手助けが欲しいだけであれば、`gnu.emacs.gnus' で尋ねるのが良いでしょ
う。私はあまり役に立ちません。また、ding メーリングリス
ト---<ding@gnus.org> で尋ねることもできます。購読するには
<ding-request@gnus.org> にメールを送って下さい。



File: gnus-ja.info, Node: Gnus Reference Guide, Next: Emacs for Heathens, Prev: Troubleshooting, Up: Appendices

Gnus リファレンスガイド
=======================

誰かが Gnus でできる何か粋なものに知恵を働かせて、その粋なものを書いて
もくれることが私の願いです。それを促進するためには、Gnus の内部動作を説
明するのが良いだろうと思いました。それに、さほど内部ではない動作をいく
つかと、私が今やっていることも。

プログラムの内部の仕様が変更されることはない、などと思ってはいけません
が、Gnus とそのバックエンドの間のインターフェース (これは完全に記述され
ています) や、スコアファイルの形式 (同じく)、データ構造 (これは他のもの
ほどには変更されないでしょう)、それに一般的な操作のメソッドを、(細部に
わたって) 定義していきます。

* Menu:

* Gnus Utility Functions::      共通の関数と変数
* Back End Interface::          Gnus はどうやってサーバーと通信するのか
* Score File Syntax::           スコアファイル標準の BNF 定義
* Headers::                     Gnus はヘッダーを内部的にどのように格納するか
* Ranges::                      たくさんの数を格納する便利な形式
* Group Info::                  グループ情報の形式
* Extended Interactive::        シンボル接頭引数など
* Emacs/XEmacs Code::           Gnus はすべての最新の Emacsen で動作する
* Various File Formats::        Gnus が使用するファイルの形式



File: gnus-ja.info, Node: Gnus Utility Functions, Next: Back End Interface, Prev: Gnus Reference Guide, Up: Gnus Reference Guide

Gnus の有用な関数
-----------------

フックなどから実行される小さな関数を書くときは、Gnus の内部関数や変数に
アクセスすることが絶対に必要です。以下が最もよく使われるものの一覧です。

`gnus-newsgroup-name'
     この変数は現在のニュースグループの名前を持っています。

`gnus-find-method-for-group'
     GROUP の選択方法を返す関数です。

`gnus-group-real-name'
     正規の (接頭語付きの) Gnus グループ名を受け取って、接頭語が無い名
     前を返します。

`gnus-group-prefixed-name'
     接頭語が無いグループ名と選択方法を受け取って、正規の (接頭語付きの)
     Gnus グループ名を返します。

`gnus-get-info'
     GROUP のグループ情報のリストを返します。

`gnus-group-unread'
     GROUP の未読記事の数か、それが分からない場合は `t' を返します。

`gnus-active'
     GROUP に関するアクティブファイルの項目を返します。

`gnus-set-active'
     GROUP に関するアクティブファイルの項目を設定します。

`gnus-add-current-to-buffer-list'
     Gnus を終了するときに消去するバッファーのリストに、現在のバッファー
     を追加します。

`gnus-continuum-version'
     引数として Gnus のバージョン文字列を受け取って、浮動小数点の数値を
     返します。古いバージョンは必ず新しいバージョンよりも小さい数になり
     ます。

`gnus-group-read-only-p'
     GROUP が読み出し専用かどうかを示します。

`gnus-news-group-p'
     GROUP がニュースバックエンドかどうかを示します。

`gnus-ephemeral-group-p'
     GROUP が一時ニュースグループかどうかを示します。

`gnus-server-to-method'
     SERVER に対応している選択方法を返します。

`gnus-server-equal'
     二つの仮想サーバーが同一かどうかを示します。

`gnus-group-native-p'
     GROUP が基本グループかどうかを示します。

`gnus-group-secondary-p'
     GROUP が二次グループかどうかを示します。

`gnus-group-foreign-p'
     GROUP が外部グループかどうかを示します。

`gnus-group-find-parameter'
     GROUP のパラメーターのリストを返します。二つ目の引数を与えると、
     GROUP 用のそのパラメーターの値を返します。

`gnus-group-set-parameter'
     三つの引数 GROUP, PARAMETER, VALUE を与えて、パラメーターとして設
     定します。

`gnus-narrow-to-body'
     現在のバッファーを、記事の本文に狭めます。

`gnus-check-backend-function'
     二つの引数 FUNCTION と GROUP を取ります。GROUP のバックエンドが
     FUNCTION をサポートしているなら、`nil' ではない値を返します。

          (gnus-check-backend-function "request-scan" "nnml:misc")
          => t

`gnus-read-method'
     利用者に選択方法を入力してもらう関数です。



File: gnus-ja.info, Node: Back End Interface, Next: Score File Syntax, Prev: Gnus Utility Functions, Up: Gnus Reference Guide

バックエンドインターフェース
----------------------------

Gnus は NNTP やスプール、メール、仮想グループについては何も知りません。
ただ仮想サーバー "virtual servers" と対話する方法を知っているだけです。
仮想サーバーはバックエンド "back end" といくつかのバックエンド変数
back end variables" からなります。前者の例としては `nntp', `nnspool',
`nnmbox' などがあります。後者の例としては `nntp-port-number' や
`nnmbox-directory' があります。

Gnus がバックエンド--例えば `nntp'---に何かの情報を要求するとき、通常は
関数の引数として仮想サーバー名を含めます。(無い場合は、バックエンドは
「現在の」仮想サーバーを使うべきです。) 例えば `nntp-request-list' は、
その唯一の (省略可能な) 引数として仮想サーバーを使います。もしこの仮想
サーバーとの接続が開かれていないと、この関数の実行は失敗するはずです。

仮想サーバー名は、物理的なサーバー名とは何の関係も無いことに注意して下
さい。例を挙げましょう:

     (nntp "odd-one"
           (nntp-address "ifi.uio.no")
           (nntp-port-number 4324))

ここで物理サーバー名は `ifi.uio.no' であるのに対して、仮想サーバー名は
`odd-one' です。

バックエンドは複数の仮想サーバーを切り替えることができなければなりませ
ん。標準のバックエンドは、必要なときに仮想サーバーの環境を取り出し・押
し込みを行なう連想リストを保持することによって、これを実現しています。

インターフェース関数には二つのグループがあります。必ず存在しなければな
らない必須関数 "required functions" と、呼び出す前にそれが存在するかど
うかを常に Gnus が確認する任意関数 "optional functions" です。

これらすべての関数は、その戻り値のデータを `nntp-server-buffer'
(`*nntpd*') バッファーに返すことが求められます。これはちょっと不運な名
前付けですが、これで我慢しなければなりません。私が結果のデータ
resulting data" と言ったときは、そのバッファーの中のデータを指していま
す。戻り値 "return value" と言ったときは、関数呼び出しによって返される
関数の値のことを言っています。関数が失敗したときは、戻り値として `nil'
を返さなくてはいけません。

バックエンドにはサーバー型 "server-forming" のバックエンドと呼ばれるも
のがあり、またそう呼ばれないものもあります。後者は一般には、同時には一
つのグループだけしか操作しないバックエンドで、「サーバー」の概念があり
ません。このサーバーとは、グループを持ち、そのグループの情報を配送する
もので、それ以上のものではありません。

Gnus はグループ名と記事番号によって、それぞれのメッセージを特定します。
それら記事番号に関するちょっとした説明をすることは有益かもしれません。
まず第一に、その数値は正の整数です。第二に Gnus を混乱させることなく古
い記事番号を、後で「再使用」することは普通はできません。すなわち、もし
あるグループにかつて 42 番の記事があったとしたら、別の記事がその番号を
持つことができないか、または Gnus が激しく混乱してしまうということです。
(1) (*Note Back End Interface-Footnotes::) 第三に、記事番号はそのグルー
プでの到着順になっていなければならないことです。メッセージの日付も、必
ず到着順になっているわけではありませんが。

すでに前の節で、記事番号は一回使われただけで役目を終わらなければならな
い「厳しい」制限について説明しました。しかし、記事番号の並びに抜けがあ
ると Gnus はとても混乱してしまうので、連続した *通し* 番号を付けること
が有用なのかもしれません。ただし「再使用不可」の制限があるので、完全に
番号の抜けを回避できるとは限りません。また、可能な限り記事番号を 1 から
始めることは、番号を使い切ってしまうことを避けるために役立ちます。

慣例として、バックエンドは `nnなんたら' と名付けられますが、Gnus には
`nnheader.el'、`nnmail.el' および `nnoo.el' のように、いくつかのバック
エンドではない `nnかんたら' があることに注意して下さい。

ここでの例と定義では、想像上のバックエンド `nnchoke' を引き合いに出すこ
とにします。


* Menu:

* Required Back End Functions:: 実装しなければならない関数
* Optional Back End Functions:: 実装しなくてもよい関数
* Error Messaging::             メッセージを発したりエラーを報告する方法
* Writing New Back Ends::       古いバックエンドの拡張
* Hooking New Back Ends Into Gnus::  Gnus 側でしなければならないこと
* Mail-like Back Ends::         メール・バックエンドのための助言


