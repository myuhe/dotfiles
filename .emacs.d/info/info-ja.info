Info file: info-ja.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `info.texi'
using `texinfmt.el' version 2.38 of 3 July 1998.



INFO-DIR-SECTION Texinfo documentation system
START-INFO-DIR-ENTRY
* Info: (info).         How to use the documentation browsing system.
END-INFO-DIR-ENTRY






File: info-ja.info, Node: Top

Info: はじめに
**************

GNU プロジェクトではほとんどのオンラインマニュアルを "Info 形式" で配
布しています。そして、これは "Info リーダー" で読むことができます。多
分、今もこのマニュアルを Info リーダーを使って読んでいることでしょう。

あなたがInfoに馴染みがなくその使用方法を学びたい場合には，コマンド`h'
を入力してください．学習プログラムに導いてくれます．

   高度なInfoコマンドを学ぶためには，`n'を二回入力してください．これで，
`Getting Started'の章を飛び越えて`Info for Experts'に導いてくれます．

この和文文書は既に翻訳されていたinfo-ja.infoを元に最新版にアップデート
したものです．

* Menu:

* Getting Started::             Getting started using an Info reader.
* Expert Info::                 Info commands for experts.
* Creating an Info File::       How to make your own Info file.
* Index::                       An index of topics, commands, and variables.



File: info-ja.info, Node: Getting Started, Next: Expert Info, Prev: Top, Up: Top

はじめ方
********

このInfoマニュアルの最初の部分で，Infoの内部について述べています．この
マニュアルの2番目の部分で，様々なInfoの高度なコマンドについて述べ，
Texinfo ファイルから生成されるものとは異なるInfoの書き方を述べています．
3番目の部分は，TexinfoファイルからInfoファイルを生成する方法の概要を説
明しています．


* Menu:

* Help-Small-Screen::   Starting Info on a Small Screen
* Help::                How to use Info
* Help-P::              Returning to the Previous node
* Help-^L::             The Space, DEL, B and ^L commands.
* Help-Inv::            Invisible text in Emacs Info.
* Help-M::              Menus
* Help-Xref::           Following cross-references
* Help-Int::            Some intermediate Info commands
* Help-Q::              Quitting Info



File: info-ja.info, Node: Help-Small-Screen

小さなスクリーンでInfoを開始する
================================


端末の画面に比較的少数の行しか無いので，はじめに特別なアドバイスが必要
です．

テキスト`--All----'が画面の右下の角近くに見えている場合，見ているテキ
スト全体が画面にフィットしているということです．代わりに`--Top----'が
見えている場合，フィットしていない，より多くのテキストが下にあるという
ことです．テキストを先に進めて他の画面全体を見るため，スペースバー
<SPC>を押してください．前に戻るためには`Backspace'や`DEL'(システムによっ
ては，このキーは`Delete'と印字されているかもしれません)と表示されてい
るキーを押してください．

以下に40の無駄な行があるので，<SPC>と<DEL>を試すと何を言っているのかが
分かるでしょう．終りに次にすることを説明しています．

This is line 20
This is line 21
This is line 22
This is line 23
This is line 24
This is line 25
This is line 26
This is line 27
This is line 28
This is line 29
This is line 30
This is line 31
This is line 32
This is line 33
This is line 34
This is line 35
This is line 36
This is line 37
This is line 38
This is line 39
This is line 40
This is line 41
This is line 42
This is line 43
This is line 44
This is line 45
This is line 46
This is line 47
This is line 48
This is line 49
This is line 50
This is line 51
This is line 52
This is line 53
This is line 54
This is line 55
This is line 56
This is line 57
This is line 58
This is line 59

ここまでたどり着いたら`DEL'(または<BACKSPACE>)で最初に戻り，もう一度こ
こまできて，やっと`Space'と`Backspace'を理解するでしょう．さて，`n'を
入力し(1文字だけで，引用符やリターンキーを後で入力しないでください) コー
スの通常の開始点に行きます．



File: info-ja.info, Node: Help, Next: Help-P, Prev: Help-Small-Screen, Up: Getting Started

Infoの使い方
============

ドキュメントを読むために，プログラムInfoと会話をします．

Infoを使うには2つの方法があります。つまり、Emacsを使う方法とシェルでコ
マンド `info' を使って起動される単独のリーダーを使う方法です。

今，1つの情報の"ノード"が見ています．ノードには，あるレベルで特定のト
ピックを説明しているテキストが含まれています．このノードのトピックは
"Info の使い方(how to use Info)"です．モードラインでは，これが`info'の
ノード`Help' だと告げています．

ノードのトップ行は，その"ヘッダ"です．ノードのヘッダは(今，見てくださ
い)このノードの後にある`Next'ノードが`Help-P'と呼ばれるノードだと告げ
ています．高度なInfoコマンドで，知っている名前ならどこのノードにも行け
るようになります．スタンドアローンのInfoリーダプログラムでは，ヘッダ行
で，このノードの名前とinfoファイルも表示しています．Emacsでは，ヘッダ
行は特殊な書体で表示されていて，それは画面からスクロールされて消えるこ
とはありません．このノードと，Infoファイルの名前は，Emacsによってヘッ
ダ行から削除されています．

`Next'の隣に，ノードには`Previous'や`Up'または両方へのリンクがあるはず
です．御覧のようにこのノードには，これらすべてがあります．

さて，`Help-P'という名前の`Next'ノードに行く時間です．


>> そこに移動するため，`n'を入力します．一文字だけです．引用符や入力後の
   RET を入力しないでください．

マージンの `>>' は，実際にコマンドを試すときだということを意味します．

>> マウスがある場合で，次のノードへ行くために既に `n' の入力の練習をし
   ている場合，同じことを"マウスで行なう"ためにマウスの右ボタンで
   `Next'リンクをクリックしてください．



File: info-ja.info, Node: Help-P, Next: Help-^L, Prev: Help, Up: Getting Started

前のノードに戻る
================

このノードは`Help-P'と呼ばれています．ご存知のように，`Previous'ノード
は`Help'で，そこから`n'コマンドを使用してやって来ました．もう一度`n'コ
マンドを使用すると，次のノード`Help-^L'に行きます．

>> しかし，まだ`n'を入力しないでください．最初に`p'コマンドを試
   したり，`Prev'のリンク上でマウスをクリックしたりして
   `Previous' ノードへ行きましょう．そこに行ったら，また`n'して，
   ここに戻ることができます．

Emacsでこれを読んでいる場合，メニューバーの右端近くに`Info'の項目が見
えるでしょう．`Info'メニューバーの項目上でマウスをクリックすると，
`Next'と`Prev'を含めたコマンドのメニューが開きます(そして，まだ学習し
ていないものもそれ以外にあります)．

この全てが，恐らく余りに簡単過ぎて無礼だと思いますが，読み捨て*しない*
でください．事態はますます複雑になってきます．また，そのときが来たと告
げられるまで新しいコマンドを試さないでください．さもないと，後から出て
くる重要な警告をInfoが通り過ぎてしまいます．

>> さて，ノード`Help-^L'に行くため`n'したり`Next'リンクで
   マウスをクリックしたりして，より多くのことを学んでください．



File: info-ja.info, Node: Help-^L, Next: Help-Inv, Prev: Help-P, Up: Getting Started

スペース，DEL，B，そして^Lコマンド
==================================

このノードのモードラインは，現在ノード`Help-^L'にいることを，ヘッダラ
インは`p'で`Help-P'に戻れることを告げています．このノードのタイトルは
強調され、下線がついているかもしれません．それはノードが関連するものを
告げています．

これは大きなノードで，ディスプレイ画面に全てがフィットしません．画面の
右下付近に`--All----'ではなく`--Top-----'という文字列が見えるので，見
えていないものがもっとあることが分かります．

   SPC，BACKSPACE(またはDEL) (1) (*Note Help-^L-Footnotes::)，そして
`b'コマンドで，一度に全ての画面がフィットしなくても"動き回る"ことが可
能になります．SPCで前に進み，画面の下に続くものを見ることができます．
DELやBACKSPACEで後ろへ戻り，画面のトップを見ることができます(何回かス
ペースを入力しなければ，トップまで何もありません)．


>> さて，SPCを入力してみてください(その後でBACKSPACEを入力し
   ここに戻ってください)．

SPCを入力すると画面の下2行がページの最初に現れ，その後の行が続きます．
DELやBACKSPACEで，ページの最初の2行を下に*通常は*持っていきますが，そ
の上の行でフルスクリーンにする意味が無い場合は，全てを下に持っていくわ
けではありません．

これをEmacsで読んでいる場合，画面からスクロールされて消えることが無い
ヘッダ行が見えていることに注意してください．そのため，`Next'，`Prev'，
そして`Up'のリンクは常に見えていて，これらのリンクをマウスでクリックす
ることで，ノードのどこからでも，これらのリンク場所に行くことが可能なの
で便利です．

SPCとDELは，現在のノードで前後に移動するだけではありません．ノード間の
移動も行います。現在のノードの最初で SPC を入力すると次のノードへ、ノー
ドの最後でDEL (あるいはBACKSPACE) を入力すると前のノードへ移動します．
具体的には，Infoファイルのすべてのノードを，単一の論理的に連結している
ものとしてスクロールしていきます．これで，SPCを入力するだけでマニュア
ルの最初から最後まで完全に読むことができるでしょう．そして、DEL (ある
いはBACKSPACE) を入力することで、最後から最初に向かってマニュアルを完
全に読むことができるでしょう。

この順序では，ノードのサブノードは親ノードに続いて表示されます．ノード
にメニューがある場合，SPCでメニューでリストアップされているサブノード
に，一つずつ移動していきます．ノードの終りに到達すると，そのすべてのサ
ブノードを見たことになり，SPCで次のノードか次のノードの親に移動します．

この頃のキーボードには，`PageUp'と`PageDown'(`Prior'と`Next'かもしれま
せんが)というラベルの付いた二つのスクロールキーがあるものが多くなって
います．これらのキーがあるキーボードでは，SPCとBACKSPACEのように，これ
らを使用してテキストの前後に移動することが可能です．しかし，SPCと
BACKSPACEとは異なり，PAGEUPとPAGEDOWNのキーでは，現在のノードの最初と
最後を越えてスクロールすることはありません．

画面がおかしい場合，`C-l'(`Control-L'のことです--CTRL を押したまま`L'
や`l'を入力することです)を入力することで，Infoに再表示させることが可能
です．

>> `C-l'を，今入力してください．

今見ているノードの最初に戻るため，何回も<BACKSPACE>を押すことが可能で
す．最初に戻るため，単純に`b'を入力することも可能です．

>> 今やってみてください．(我々は，ここまで来るまでに最初の画面がいっぱい
   になるように十分に冗長なことを書いたのですが，画面が大きすぎて十分で
   ないかもしれません．必要なら，EmacsやInfoウィンドウを小さくしてくださ
   い．)そして，SPCで戻ってきてください．

画面が縦に非常に長い場合，このノード全体が一度にフィットするかもしれま
せん．その場合，`b'では何も起こりません．だけど、もう少し小さいウィン
ドウを使えば`b'による効果を確認できますよ。

さて，かなりの数のコマンドを学びました．どれかを使いたいのですが，それ
がどれかを忘れた場合，コマンドリストを簡潔に表示する`?'を入力してみて
ください(Emacsでは，それで`Info-summary'コマンドを実行します)．リスト
を見終えたら，SPCを何回か押して消し去ってください．

>> さあ?を試してください．終りまでリストの画面全体を連続して見るた
   め，SPCを押してください．そして消え去るまでSPCを複数回入
   力してください．

(スタンドアローンのIndoリーダを使用している場合，ここに戻るため`C-x 0'
を入力してください，すなわち--CTRLを押したまま`x'を入力し，CTRLと`x'を
離し，そして`0'を押してください--これはゼロで文字"o"ではありません．)

今から，警告無しで大きなノードに出会っても，教えられなくてもSPCと
BACKSPACEを使用して動き回る方法を知っていることとします．全ての端末が
同じ大きさの画面を持っているわけではないので，もう警告することはできま
せん．

>> さて，次のノードを見るため，`n'を入力したり，`Next'リンク
   でマウスをクリックしたりしてください．


File: info-ja.info  Node: Help-^L-Footnotes, Up: Help-^L

(1) このマニュアルで"バックスペースまたはDEL"と呼んでいるキーは，キー
ボードによって異なるラベルが付いています．ENTERやRETキーの
上の小さいもので，通常Emacs以外でカーソルの前の文字，すなわち直前に入
力した文字を削除するものからキーを探してください．それには，
`Backspace'または`<-'，また`DEL'のときには`Delete'
のラベルが付いています．



File: info-ja.info, Node: Help-Inv, Next: Help-M, Prev: Help-^L, Up: Getting Started

Emacs info で非表示なテキスト
=============================

メニューについて述べる前に、Emacsを使ってInfo を読んでいるユーザのみに
関連したことを述べておく必要があります。スタンドアローンのInfoリーダを
使って読んでいるユーザは `]' を入力してスキップできます。

Emacsではスタンドアローン版で表示されるある種のテキストは通常表示され
ません。技術的に言うと、それらのテキストは`invisibility(非表示)' の属
性を持つためです。非表示テキストは実際のテキストの一部になります。(デ
フォルトでは)これらのテキストはキルしてヤンクした時、印刷した時などに
表示されます。他のテキストと同じように保存することもできます。こうして、
そこにテキストがあることを知っておくと役立ちます。

コマンド `M-x visible-mode' を実行することで非表示のテキストを表示させ
ることができます。visible-modeはマイナーモードです。だから、2回使うと
ふたたびテキストは非表示となります。"メニュー"の下やこのノードの先頭行
でこのコマンドの効果を見てみなさい。

非表示テキストが*いつも*表示されているのがよければ、
`Info-hide-note-references' を `nil' に設定するといい。visivle modeを
有効にしておくことは代替にはなりません。Emacs Info は表示されているテ
キストを変更するような`display'属性(それほど多くはありませんが)も使っ
ているからです。visible modeは非表示のテキストのみに影響します。この
チュートリアルで、`Emacs' の動作を説明する時には、*デフォルト*のEmacs
における動作を説明します。

さて、`]'を入力して、コマンド `]' と `[' について学ぶことにしよう。

* Menu:

* ]:         Help-].               Node telling about ].
* stuff:     Help-].               Same node.
* Help-]::                         Yet again, same node.



File: info-ja.info, Node: Help-], Up: Help-Inv

コマンド `]' と `['
-------------------

今、`n'を入力すると、このノードには次のノードが無いというエラーが表示
されます。同様に`p' を入力すると、前のノードが無いというエラーメッセー
ジが表示されます(正確なメッセージはInfoリーダに依存します)。これは、
`n'や`p'が*同じレベルの*次や前のノードへ移動するコマンドだからです。今
のノードは前のノードにあったメニューに含まれています。そのため、今のノー
ドは下位のレベルと考えられるのです。このノードは前のノードメニューにあ
る(3回書かれているけれども)唯一のノードです。それゆえ、`n' や `p' で移
動できる次や前のノードを持たないのです。

`n' を整然と入力することでマニュアルを移動していると、多くのノードを読
み飛ばす危険性があります。一方、`SPC'を使う場合にはそのような危険性は
ありません。なぜなら、ノードの下部までスクロールして、さらに`SPC'を入
力すると、*レベルに関わらず*続くノードに移動するからです。最初に下部ま
でスクロールさせないで、すぐに次のノードに行きたい場合には、`]'を入力
します。

同様に、`BACKSPACE'はレベルに関わらず、現在のノードの先頭までスクロー
ルした後で、前にあるノードに移動できます。すぐに前のノードへ移動したい
時には `['を入力します。

例えば、`[ n ['という3段階の操作でここに戻ってくるでしょう。逆方向であ
れば、`] p ]'とできます。

では、`]'を入力して、次のノードでメニューについて学びましょう。



File: info-ja.info, Node: Help-M, Next: Help-Xref, Prev: Help-Inv, Up: Getting Started

メニューと`m'コマンド
=====================

ノード間の移動に使用する`n'(次)と`p'(前)、`SPC'、`BACKSPACE'、`]'、`['
コマンドだけでは，ノードは直線的な操作に制限されます．メニューで，構造
的に分岐することが可能になります．メニューは，移動可能な他のノードのリ
ストです．それは実際に，Info が解釈可能な，特殊な書式のノードのテキス
トの一部です．メニューのはじめは，常に`* Menu:'で始まる行で識別されま
す．その方法で始まっている行の場合だけ，ノードにメニューが含まれます．
使用可能なメニューだけが，常に移動可能なノードです．他のノードでメニュー
を使用するため，最初にノードに移動する必要があります．

メニューの最初から，`*'で始まるそれぞれの行はサブトピックを示します．
行は普通，サブトピックの名前を(`:'に続いて)含んでいて，ノード名はサブ
トピックについて説明し，追加としてサブトピックの説明があります．`*'で
始まらないメニューの行は特別な意味を持ちません -- それらは読み易いよう
になっているだけで，追加のサブトピックを宣言しているものではありません．
例は以下のようになります．

     * Foo:  Node about FOO.      This tells about FOO.

サブトピックの名前はFooで，ノードは`Node about FOO'を説明しています．
行の残りは読む人への情報です．[[しかし，この行は本当のメニューアイテム
ではなく，それは単に，上の行が`* Menu:'で始まっていないからです．本当
のメニューアイテムで `*' は行の最初にあります。これは " 通常は隠された
"テキストである`: Node about FOO.'が、この例ではVisivle modeがオフの時
でさえ、見えているからです。"]]

他のノードに行くためメニューを使用するとき(その方法はまもなく説明しま
す)，指定するはサブトピック名で，メニュー行の最初にあるものです．Info
はメニュー行を探すためにそれを使用し，それからノード名に復元し，そのノー
ドへ行きます．サブトピック名とノード名の両方がある理由は，ノード名はコ
ンピュータに対して意味が多すぎ，そのため汚く見えるかもしれないためです．
サブトピック名は，ユーザの指定で便利にするためだけに選択することが可能
です．ノード名はユーザが指定するのに便利で，サブトピックと同じ名前のと
きも良くあります．このため以下のような省略があります．

     * Foo::   This tells about FOO.

これはサブトピック名とノード名が同じで，`Foo'だということを意味します．
(`::' は通常Emacsでは非表示になります)

>> 今，このノードのメニューを見つけるためにSPCを使用し，bと
   SPCで前に戻ってください．御覧のように，メニューは実際にノードに
   現れます．ノードを見てもメニューが見つからない場合は，ノードにメニュー
   が無く，mコマンドは利用できません．

スクリーンにメニューが表示された状態でSPCを1回入力すると、他のノード
(メニューの最初のノード)へ移動します。その場合には、BACKSPACE で戻りま
す。

サブノードの1つに行くコマンドは`m'です。このコマンドは既に使用したコマ
ンドとは、さらに入力を求める点が大きく異なっています。

既に知っているコマンドではそのような追加入力は必要ありませんでした。キー
を入力すれば、Infoはすぐに処理を済ませ、他のコマンドが使用可能になりま
す。しかし、`m'コマンドは違い、"name of the subtopic(サブトピックの名
前)" が必要になります。一度、`m'を入力すると、サブトピックの名前を読み
取ろうとするのです。

スタンドアローンのInfoでは、今，画面の下近くのダッシュを多く含む行を探
してください(スタンドアローンのInfoリーダではこれがEmacsのモードライン
と同じものになります)．その下にもう一行ありますが，普通は空白です(この
領域はEmacsならエコー領域になります)．空の場合，Infoは`n'や`b'やSPC や
`m'といったコマンドに対する準備ができています．その行がコロンで終るテ
キストを含んでいる場合，Infoが現在のコマンドへの入力を読み込もうとして
いることを意味します．そのときは，Infoが入力を必要としていて，その入力
を使用しようとしているので，コマンドは動作しません．それに応答するもの
を入力して開始したコマンドを終了するか，コマンドをキャンセルするために
`Control-g'を入力する必要があります．このようなことをやり終えると，行
はまた空白になります．

メニューでサブノードに行くコマンドは`m'です．`m'を入力後，画面の下の行
は`Menu item: ' と表示します．行きたいサブトピック名を入力し，終りに
RETを入力する必要があります．Emacsでは，`m'はコマンド`Info-menu'を実行
します．

サブトピック名を省略することが可能です．省略がユニークでない場合，最初
に一致したサブトピックが選択されます．メニューには，それぞれのサブトピッ
ク名に対して，大文字で可能な限り短い省略を書いているものもあるので，必
要な入力数が分かります．サブトピックを入力するとき，大文字小文字は問題
ありません．アイテム名の終りや内部にスペースを入れるべきではありません
が，メニュー項目にスペースがある場合は例外です．

サブトピック名の入力を助けるため，"補完"機能も使用可能です．名前の一部
を入力後，TABキーを入力した場合，残りの名前が手品のように埋まります -- 
入力からユニークなものをできるだけ続けます．

カーソルをメニューのサブトピック行に移動した場合，引数を入力する必要は
ありません．RETを入力するだけで，それで行のサブトピックに行きます．サ
ブトピック行でマウスの中ボタンをクリックして移動することもできます。

練習用に与えられたメニューが以下にあります．このメニューは1つの場所，
Help-FOOに行く方法を3つ提供します．

* Menu:

* Foo:  Help-FOO.       A node you can visit for fun.
* Bar:  Help-FOO.       We have made two ways to get to the same place.
* Help-FOO::            And yet another!

(Emacsを使っているのであれば、visible modeをオンにしなさい)

>>  今，mを入力し，何が起こるか見てください．

今，`m'コマンドの"内部"にいます．コマンドは今使用できません．次にする
ことは，サブトピック名を入力することです．

`Control-g'を入力することで，`m'した意図を変更することができます．

>> 今それを試して，下の行がクリアされることを確認してください．

>> もう一度mを入力してください．

>> アイテム名`BAR'を入力してください．まだRETを入力しないでく
   ださい．

アイテム名を入力している間，間違えた場合に一文字キャンセルするため，
DEL(またはBACKSPACE)キーを使用することが可能です．

>> `R'をキャンセルするためにDELを押してください．置換するため
   もう一度`R'を入力することが可能です．しかし，`BA'は有効な省
   略なので，そうする必要はありません．

>> 今，行く準備ができました．RETを入力してください．

`Help-FOO'に行った後，ここに戻るはずです．

メニューのサブトピック行とそれらの間を移動するもう一つの方法はTAB を入
力することです．TABを入力するごとに，次のサブトッピック行に移動します．
前のサブトピック行に移動する方法は，`M-TAB'を入力する方法です -- すな
わち，METAキーを押すまたは押したままにし，それからTABを押します．(キー
ボードによっては，METAキーは`Alt'のラベルが付いているかもしれません．)

サブトピック行にカーソルを移動すると，RETを押すことでそのサブトッピッ
クのノードに行きます．

端末がマウスをサポートしている場合，サブトピックに行く方法はもう一つあ
ります．マウスポインタを，サブトピックの行の最初の`*'から短いサブトピッ
ク名の終りとなるコロン`:'の間に移動してください．サブトピックの名前が
変化するのが分かるでしょう(大抵は、背景色が変化する)。そしてプラット
フォームがサポートしていればマウスポインタも変化することでしょう。マウ
スをその場所のままにして，しばらくすると，"Mouse-2: go to that node"と
告げているツールチップがポップアップされるか、同じメッセージがスクリー
ンの最下行に表示されます。

`Mouse-2'は，左から数えてマウスの2番目のボタンです -- ボタンが2つのマ
ウスでは右端になり，ボタンが3つのマウスでは真中になります．そして，マ
ウスポインタがメニューのサブトピックにあるときに`Mouse-2'を押すと，ソ
ノサブトッピックに移動します．

  More generally, `Mouse-2' in an Info buffer finds the nearest link
to another node and goes there.  For example, near a cross reference
it acts like `f', in a menu it acts like `m', on the node's header
line it acts like `n', `p', or `u', etc.  At end of the node's text
`Mouse-2' moves to the next node, or up if there's no next node.  より
一般的には，Infoバッファで`Mouse-2'を押すと，他のノードの最も近いリン
クを見つけ，そこに移動します．例えば，相互参照の近くでは`f'のように動
作し，メニューでは`m'のように動作し，ノードのヘッダ行では，`n'，`p'，
または`u'のように動作します．ノードテキストの終りで`Mouse-2'を押すと，
次のノードに移動したり，次のノードが無い場合は上のノードに移動します．

>> より多くのコマンドを理解するためにnを入力してください．



File: info-ja.info, Node: Help-FOO, Up: Help-M

`u' コマンド
------------

   おめでとう!これがノード`Help-FOO'です．それには`Help-M'へのポインタ
`Up'があり，それは`m'コマンドでやってくる前のノードです．これは一般的
な習慣です -- メニューからたどり着いたノードには，メニューに戻るための
`Up'ノードがあります．メニューはツリー構造を降りていき，`Up'は上がって
いきます．一方，`Previous'は普通"前に戻るのではなく，同じレベルに留ま
る" ために使用されします．

"Up"に対するコマンド`u'を入力して，ノード`Help-M'に戻ること可能です
(`u'で実行されるEmacsコマンドは`Info-up'です)．それでノードの*前*に行
きます -- 読んでいたところに戻るため，何回かSPC を入力する必要がありま
す．(Emacsに組み込まれているようなInfoリーダによっては，`Help-M'で読ん
でいたのと同じ場所に行くものもあります．)

上に行くもう一つの方法は，ヘッダ行に表示されている`Up'ポインタを
`Mouse-2'でクリックする方法です(マウスがあれば提供されています)．

>> 今，`Help-M'に戻るため，`u'を入力してください．



File: info-ja.info, Node: Help-Xref, Next: Help-Int, Prev: Help-M, Up: Getting Started

相互参照をたどる
================

Infoドキュメントで，"相互参照"を見ることも多いでしょう．相互参照はこの
ように見えます．*Note Cross: Help-Cross。そのテキストは本物の利用可能
な相互参照で，`Cross'という名で，ノード名`Help-Cross'を指しています
(Emacsではノード名は隠されています。表示/非表示を切り替えるには`M-x
visible-mode'とします)．

相互参照をたどる方法は2つあります．カーソルをその上に移動し，メニュー
と同様にRETを押すことでできます．RETで，カーソルがある相互参照をたどり
ます．また，`f'を入力し，相互参照の名前(この場合は`Cross')を引数として
指定することもできます．EmacsのInfoでは，`f'で`Info-follow-reference'
を実行します．

`f'コマンドでは，相互参照を名前で選択するので，カーソルの位置は問題に
なりません．カーソルが相互参照上やその近くにある場合，`f'はデフォルト
としてそれを参照する名前として提案します．RETを入力することで，その参
照先をたどります．しかし，別の参照先の名を入力した場合，`f'はその名前
を持つ別の参照先をたどります．

>> `f'を入力し，`Cross'を続けて，RETを入力してください．

参照先の名前を入力するとき，入力したものを編集するためにDEL(または
BACKSPACE)を使用することが可能です．参照先をたどるときに気が変わってし
まった場合は，コマンドをキャンセルするために`Control-g'を使用すること
も可能です．`f'コマンドでは補完も利用可能です．現在のノードでTABを入力
すると，すべての相互参照を補完することが可能です．

現在のノードで全ての相互参照のリストを得るため，`f'の後で`?'を入力する
ことが可能です．`f'はリストを出力した後でも相互参照名の指定を待ってい
るので，実際には参照をたどるつもりが無い場合，`f'をキャンセルするため
`Control-g'を入力すべきです．

>> このノードの相互参照のリストを得るため`f?'を入力してください．そ
   して，`Control-g'を入力し，`f'を停止する方法を理解してくださ
   い．

メニュー間を移動するTABキーと`M-TAB'キーで，メニュー外部の相互参照へも
移動します．

時折、相互参照は別のファイル(言い換えると別の"マニュアル")や時にはリモー
トマシンにあるファイルにさえ(InfoはEmacsと一緒に配布されているし、スタ
ンドアローンのInfoではリモートリンクを使わないようにしているけれど)移
動できます。そういった相互参照は次のようになります。*Note Overview of
Texinfo: (texinfo)Top。(このリンクを辿ったら、`l'でここへ戻る)。この括
弧内にある`texinfo' (スタンドアローン版で表示される)はファイル名を指し
ています。現在のファイルと違う場合には、相互参照にファイル名やノード名
が表示されるのです。Emacsではファイル名は(他のテキストとともに)表示さ
れていません。(`M-x visible-mode'を使って表示/非表示にできます)

このノードの残りはEmacs版でのみ有効です。スタンドアローン版を使ってい
る場合には、すぐに`n'を入力できます。

ユーザーによっては、章を移動することよりもマニュアルを移動することの方
がかなり大きなことのように感じるかもしれません。こういったユーザーは、
実際に他のマニュアルに移動する前にそのことを知りたがります。そして、与
えられても気付かなければ、`t' (次のノードを参照のこと)のようなInfo コ
マンドはユーザを混乱させることになります。

マウスを相互参照の上に置き、その相互参照が別のマニュアルを指していれば、
別のボックス(ツールチップ)やエコー領域に情報が表われ、相互参照によって
移動するファイルを(括弧の中に)表示することでしょう。このことはメニュー
のサブトピック名でも同じです。マウスがあって、相互参照 `Overview' の上
にマウスを置いておくと、何が起こるか分かるでしょう。

マウスを相互参照上に移動させることなく利用できる情報をいつでも得たい場
合には、`Info-hide-note-references' を tから他の値に変更します(*Note
Emacs Info Variables::)。リモートマシンやアクセスの遅い場所への相互参
照がたくさんあって、ローカルとリモートファイルへのリンクが区別できない
ような場合に有効でしょう。

>> `n' を入力してさらに学びましょう



File: info-ja.info, Node: Help-Int, Next: Help-Q, Prev: Help-Xref, Up: Getting Started

中級Infoコマンド
================

導入の講座はほとんど終りです．中級のコマンドを学ぶために，もう少し続け
てください．

ほとんどのInfoファイルには索引があり，それは実際には，メニュー以外に何
もない大きなノードになっています．メニューには，索引でリストアップされ
ているトピックごとに一つのメニューになっています．ファイルのメインメ
ニューから，`m'コマンドで索引のノードを見つけることができます．トピッ
クを記述しているノードに移動するために，索引ノードでもう一度`m'を使用
することも可能です．

ショートカットInfoコマンド`i'もあり，それはすべてのことを行ないます．
それは与えられたトッピック(文字列)を索引で検索し，そのトッピックに対す
る索引にリストアップされているノードに移動します．完全な説明は，*Note
Info Search::

別のノードに移動していて，それまでの移動段階を再追跡したい場合，`l' コ
マンド(`l'は"last"に対応します)でそうすることができ，そのとき一度に一
つのノードを移動します．ノードからノードに移動する間，Infoは特別な履歴
リストに訪問したノードを記録します．`l'コマンドで，履歴リストのノード
にもう一度訪れることになります．`l'コマンドが成功するたび，履歴を一ス
テップ戻ります．

Emacsでは，`l'でコマンド`Info-last'を実行します．

>> `p p n' と入力し、それから3度 `l' を入力しなさい。そして、それぞれの `l'
   が行うことを理解するために停止しなさい。最後にはここに戻ってくるは
   ずです。

`l'と`p'の違いに注意してください．`l'は前回_あなたが_いた場所に移動し，
`p'は常にヘッダで`Previous'ノードとされるノード(このノードでは`Prev'は
`Help-Xref'に導くものです)に移動します．

`d'コマンド(Emacsでは`Info-directory')で，ディレクトリノードにすぐに移
動します．このノードは，Infoに入ったときに最初に見るもので，存在する全
てのノードに(直接，あるいは間接的に他のメニューを通じて)導くメニューが
あります．ディレクトリノードは，システムにインストールされている，また
はされているはずの，すべてのマニュアルとInfoドキュメントをリストアップ
しています．

>> `d'を試し，`l'でここに戻ってください(ええ，戻って*くださ
   い*)．

`t'コマンドでマニュアルの`Top'ノードに移動します．マニュアルのメインメ
ニューを見たい場合や，特定のトップレベルのメニュー項目を選択したい場合
に便利です．`t'で実行されるEmacsコマンドは`Info-top-node' です．

相互参照の上やその近くで`Mouse-2'をクリックしても，その参照先をたどっ
ていきます．マウスポインタを相互参照に移動し，それに応答してテキストに
下線が引かれたマウスポインタが変化する状態を見ることで，相互参照がマウ
スに反応することが分かるはずです．

>> 今`n'を入力し，この講座の最後のノードを見てください．

より高度なInfoの機能は，*Note Expert Info::。




File: info-ja.info, Node: Expert Info, Next: Advanced

熟練者のための Info
*******************

この章では，様々な高度なInfoコマンドを記述しています．(スタンドアロー
ンのInfoリーダを使用している場合，それ特有の追加コマンドがあり，それら
は*Note GNU Info: (info-stnd)Topのいくつかの章で説明されています．)

この章では，Texinfoファイルとは異なるInfoの書き方を記述しています．(し
かし，Infoファイルと印刷されたマニュアル、HTMLやDocBookのような書式な
どで生成することが可能なので，ほとんどの状況ではTexinfoファイルを書く
方がいいでしょう．)*Note Overview of Texinfo: (texinfo)Top

* Menu:

* Advanced::             Advanced Info commands: g, e, and 1 - 9.
* Info Search::          How to search Info documents for specific subjects.
* Add::                  Describes how to add new nodes to the hierarchy.
                           Also tells what nodes look like.
* Menus::                How to add to or create menus in Info nodes.
* Cross-refs::           How to add cross-references to Info nodes.
* Tags::                 How to make tags tables for Info files.
* Checking::             Checking an Info File
* Emacs Info Variables:: Variables modifying the behavior of Emacs Info.



File: info-ja.info, Node: Advanced, Next: Info Search, Up: Expert Info

高度なInfoコマンド
==================

より容易に動き回るれるようになる Info コマンドには以下のものがあります．


`g' で指名したノードに移動する
------------------------------

ノードの名前を知っている場合，`g'，名前，RETと入力することでそこに移動
することが可能です．このため，`gTopRET'でこのファイルの`Top'と呼ばれる
ノードへ移動します．(これは`t'と同じです．*Note Help-Int:: を参照して
ください．) `gExpertRET'でここへ戻ってきます．Emacsでは`g'でコマンド
`Info-goto-node'を実行します．

`m'とは異なり，`g'では省略を使用できません．しかし，補完は可能なので，
TABを入力して部分的なノード名を完全なものにすることが可能で す．

他のファイルのノードへ移動するため，ノード名の前に，カッコ内にファイル
名を含めることが可能です．このため，`g(dir)TopRET'でInfoディレクトリノー
ドへ移動し，それはファイル`dir'の`Top'ノードです．同様に，
`g(emacs)TopRET'でEmacsのマニュアルのトップノードに移動し ます．

ノード名`*'はファイル全体を指定します．そのため，`g*RET' と入力するこ
とで現在のファイルの全てを見たり，`g(FILENAME)RET' で他のファイルの全
てを見ることが可能です．


`1' -- `9' でメニューのサブトピックを選択する
---------------------------------------------

システムが要求するそれぞれの入力文字がいやな場合，コマンド`1'，`2'，
`3'，`4'，...，`9'の使用を好むでしょう．それらは，引数と供に使用されて
いる`m'コマンドの短いものです．`1'は現在のノードメニューの最初のものに
行きます．`2'は2番目の項目に行く等となっています．スタンドアローンの
Infoリーダでは`0'で最後のメニュー項目まで移動します．これで，存在する
たくさんの項目を数える必要が無くなります．Enacsでは数字のキーはコマン
ド`Info-nth-menu-item'を実行します．

画面が複数のフォントをサポートしていて，EmacsのInfoモードをInfoファイ
ルを読むために使用している場合，5番目のメニュー項目に対する`*'が目立つ
ように，色が付いていたり，下線が引かれていたりするような他の属性があり，
9番目の項目も同様になっています．これで，項目に対して使用されている番
号をひと目で見ることが容易になります．

端末によっては，色も下線もサポートしていません．実際に項目を数える必要
がある場合，その代わりに`m'を使用して名前を指定したり，メニュー間を素
早く移動するためにTABを使用した方が良いでしょう．


`e' でInfoドキュメントを編集可能にする
--------------------------------------

Infoコマンド`e'で，Infoモードから普通のEmacs編集モードに変更し，それで
現在のノードのテキストを編集することが可能になります．Infoに切替えるた
め，`C-c C-c'と入力してください．`e'コマンドは，変数`Info-enable-edit'
が`nil'でない場合のみ利用可能です．

`e'コマンドはEmacsでのみ動作し，そこではコマンド`Info-edit'を実行しま
す．スタンドアローンのInfoリーダではInfoファイルを変数可能にすることは
できないので，`e'を入力するとノードの終りに移動します．



File: info-ja.info, Node: Info Search, Next: Add, Prev: Advanced, Up: Expert Info

指定した主題が述べてあるInfoドキュメントを探す
==============================================

内部のノード間を移動するコマンドで，マニュアル全体や大きな部分を読むこ
とが可能になります．しかし，マニュアルの情報をできるだけ早く見つける必
要があり，それを探すノードは何かを知らない場合はどうでしょう？これは，
マニュアルを"リファレンス"として利用していたり，プログラムの使用を開始
する前にマニュアル全体を読むのが非現実的な場合に生じます．

Infoには，素早く探すための強力な検索機能があります．マニュアルの索引や
そのテキストを検索することが可能です．

マニュアルで記述されているものに関連しているほとんどの主題は索引にされ
ているので，最初に索引を検索すべきでしょう．`i'コマンドで，主題を入力
するように促され，索引で主題を検索します．入力した主題の索引項目が見つ
かる場合，索引項目が指し示しているノードに移動します．探している問題が
そこに記述されているかどうかを調べるためノードを見るべきでしょう．そう
でなければ，主題に一致している追加の索引項目に移動するため，`,'を一回
以上入力してください．

`i'コマンドでは，*文字列の一部*として入力した文字列が含まれるすべての
索引項目が見つかります．一致するたびに，Infoは見つかった索引項目の全体
をエコーエリアに表示します．索引項目全体のテキストで探しているものに関
連しているかどうかを決定するのに十分な情報が得られることも多いので，そ
のノードを表示してみる前に，Emacsがエコーエリアに表示したものを読むこ
とを我々は推奨します．

`i'は文字列の一部から検索するので，索引でどのように綴られているかが不
確かな場合でも主題を検索することが可能です．例えば，入力の一部を補完
(complete)する(例えば，TABを入力するとき)コマンドに適切なものを探した
いと仮定します．"complete"，"completion"，そして"completing"について記
述している索引を得たい場合，`icompletRET'と入力することが可能でしょう．

プログラムを説明しているInfoドキュメントでは，プログラムが提供している
コマンド，オプション，そしてキーの組み合わせが索引にあるでしょう．コマ
ンド，オプション，またはキーの記述を探している場合，`i'でトピックの入
力を促されているとき，その名前を入力してください．例えば，`C-f'キーが
行なうことの記述を読みたい場合，`iC-fRET'を入力してください．ここで，
`C-f'は3つのリテラル文字`C'，`-'，そして`f'のことで，`C-f'に割り当てら
れているコマンドを実行するためにEmacs内部で入力する"Control-f"のコマン
ドキーではありません．

Emacsでは，`i'でコマンド`Info-index'を実行します．

`s'コマンドで，ファイル全体から文字列を検索することが可能になります．
それは，必要場合は次のノードに切り替えます．`s'に続き探す文字列を入力
し，RETで終了します．同じ文字列を再度検索するため，`s'に続けてRETを入
力します．ファイルのノードはファイルにある順番で探され，それは，メニュー
のツリー構造と`next'ポインタの順番に関連している必要はありません．しか
し通常は，2つの順番はそんなに異なりません．あらゆる状況で，ヘッダが見
えない場合(`s'でカーソルを文字があるところに移動しても，そこはノードの
最初ではないので，これは生じます)，到着したノードを判定するため`b'を実
行することが可能です．

Emacsでは，`Meta-s'は`s'と同じです．これは検索コマンドとして`M-s'を使
用している，他のGNUパッケージとの互換性のためです．`s' と`M-s'はどちら
もEmacsでコマンド`Info-search'を実行します．



File: info-ja.info, Node: Add, Next: Menus, Prev: Info Search, Up: Expert Info

Infoに新しいノードを追加する
============================

新しいトピックをInfoディレクトリのリストに追加するため，以下のようにす
る必要があります．

  1. そのトピックをドキュメントにするため，いくつかのファイルで，いく
     つかのノードを作成してください．
  2. ディレクトリのメニューにそのトピックを書いてください．*Note Menu:
     Menus.

  Usually, the way to create the nodes is with Texinfo (*Note Overview
of Texinfo: (texinfo)Top.); this has the advantage that you can also
make a printed manual or HTML from them.  You would use the
`@dircategory' and `@direntry' commands to put the manual into the
Info directory.  However, if you want to edit an Info file manually
and install it manually, here is how.  通常，ノードを作る方法として
Texinfoを用います (*Note Overview of Texinfo: (texinfo)Top.)．これには，
印刷されたマニュアルや HTML を作成することもできるという利点もあります．
マニュアルとInfoディレクトリに追加に置くために、`@dircategory' と 
`@direntry' を使うことになるだろう。しかし，Infoファイルを編集して、そ
れを自分でインストールしたい場合，以下の方法があります．

新しいノードを，既存のドキュメントファイルや，新しいものに書き込むこと
が可能です．それは，その前に`^_'文字が存在し(ユーザは見えません．この
ノードには1つありますが，あなたは見ることができません)，それは，`^_'，
`^L'("フォームフィード")，またはファイルの終りのいずれかで終了する必要
があります． (1) (*Note Add-Footnotes::)

ノードを開始する`^_'には，改行または`^L'と改行を続ける必要があり，その
後にノードのヘッダ行を続けます．ヘッダ行には(Infoで見つかるように)ノー
ド名を与える必要があり，`Next'，`Previous'，そして`Up'ノード(存在する
場合は全て)をの名前を述べる必要があります．御覧のように，このノードの
`Up'ノードはノード`Expert Info'です．`Next'ノードは`Menus'です．

キーワード"Node"，"Next"，"Previous"，そして"Up"は，あらゆる順番で，ヘッ
ダ行のどこにでも書いてもかまいませんが，推奨される順番はこの文のもので
す．それぞれのキーワードには，コロン，スペース，そしてタブを続け，その
後に適切な名前を続ける必要があります．名前はタブ，カンマ，または改行で
終了してもかまいません．スペースでは終了しません．ノード名にはスペース
を含めてもかまいません．名前の大文字小文字の違いは重要ではありません．

ノード名には2つの形式が有ります．現在のファイルのノードは，ノードの最
初の行の`Node: '後に現われるもので命名されています．例えば，このノード
の名前は`Add'です．他のファイルのノードは，このノードの`(info)Add'の様
に，`(FILENAME)NODE-WITHIN-FILE'で命名されています．ファイル名が"./"で
始まる場合，それは現在のディレクトリと相対的になります．それ以外の場合，
それはあなたのサイトの標準的なInfo ディレクトリから開始して相対的なも
のになります．名前`(FILENAME)Top'は，`(FILENAME)'で省略することが可能
です．慣習で，名前`Top'は，単一ファイルでの"最上位の"ノードに使用され
ます -- その`Up'ノードはファイルの外部を指し示します．`Directory'ノー
ドは`(dir)'で，それはサイトにインストールされているすべてのInfoドキュ
メントをリストしている大きなメニューを保持しているファイル`dir'を指し
示します．`Directory'でリストアップされているドキュメントファイルの
`Top'ノードには，その中に`Up: (dir)' が有るでしょう．

ノード名`*'は特別です．それはファイル全体を参照します．そのため，`g*'
は現在のファイル全体を表示します．ノード`*'を使用することで，ファイル
をツリーのノードに組織化しない，時代遅れの形式にすることを可能にします．

ノード自身の名前を述べる`Node:'の名前には，Infoがノードを探すとき，ファ
イル名が存在することを予期していないので，ファイル名を含めてはいけませ
ん．`Next'，`Previous'，そして`Up'の名前ではそれらを含めてもかまいませ
ん．このノードで，`Up'ノードは同じファイルに有るので，それを使用する必
要は有りません．

このファイルのノードには，ヘッダ行にファイル名があることに注意してくだ
さい．ファイル名はInfoで無視されますが，それらは，ユーザがノードを識別
する助けとなるコメントとして提供されています．


File: info-ja.info  Node: Add-Footnotes, Up: Add

(1) `^L'を新しいノードの終りに書く場合，`^L'ではノードを_開
始_することが不可能なので，その後に次のものを開始する`^_'があることを
確かめてください．また，ノードの境界をページの境界にする良い方法は，
`^_'の_直後に_`^L'を同じように書くことです．



File: info-ja.info, Node: Menus, Next: Cross-refs, Prev: Add, Up: Expert Info

How to Create Menus
===================

メニューの作成方法
==================

Info階層のすべてのノードには，"メニュー"を持たせてもかまいません -- そ
れはサブノードのリストです．`m'コマンドで，端末から読み込まれたトピッ
クに対して現在のノードのメニューを検索します．

メニューは`* Menu:'で始まる行で開始します．行の残りはコメント
です．行の先頭から`* 'で始まる全ての行は，単一のトピックをリスト
アップします．トピックの名前 -- このトピックを選択するため，ユーザが
`m'コマンドに与える必要がある引数 -- は，星型(アスタリスク)とスペー
スの直後にあり，コロン，スペース，そしてタブが続き，そしてそのトピック
を述べているノード名が続きます．`Next'，`Previous'，そして
`Up'が続くノード名に似ているノード名は，タブ，カンマ，または改行
で終端してもかまいません．それは，ピリオドで終端してもかまいません．

ノード名とトピック名が同じ場合，2度名前を与える代わりに，省略の`*
NAME::'を使用してもかまいません(そして，それがメニューが乱雑になるのを
抑えるので，可能なときはいつでもそれを使用すべきです)．

トピック名の先頭付近がお互いに異なるようにトピック名を選択することは思
慮深いことです -- これで，ユーザは短い省略の入力が可能になります．長い
メニューでは，最小限受容できる省略となる，それぞれの項目名の初めを大文
字化することは良い考えです(長いメニューとは，5つ以上の項目のものです)．

ノードのメニューでリストアップされているノードは，(メニューのあるノー
ド) の"サブノード"と呼ばれ，(メニューのあるノード自身は)それら(サブノー
ド) の"上位"になります．(サブノードは)それぞれ，上位への`Up:'を示すも
のがあるべきです．(サブメニューの)全てを見たい人が，メニューに何度も訪
れる必要がないように，全てまたはほとんどのサブノードが`Next'と
`Previous'ポインタで並ぶように整列すると役に立つことも多いでしょう．

Infoディレクトリは，ノード`(dir)Top'の単純なメニューです -- すなわち，
ファイル`.../info/dir'のノード`Top'です．その他のあらゆるメニューと全
く同じようなメニューに，新しい項目を書くことが可能です．Info ディレク
トリは，`info'と呼ばれるファイルディレクトリと同じでは*ありません*．
Infoのファイルの多くは，そのファイルディレクトリに存在しますが，必須で
はないこともあります．そして，そのディレクトリのファイルがInfoディレク
トリのノードに自動的にリストアップされないこともあります．

また，Infoノードグラフは，"階層的"だと主張されていますが，実際それは*
任意の*方向に向いたグラフにもなり得ます．共有されている構造とポインタ
サイクルは完全に利用可能になっていて，表現の意味として適切な場合はそれ
らが使用可能です．ファイルの全てのノードが，連結されている構造となる形
式にする必要はありません．実際このファイルには，2つの連結されているコ
ンポーネントがあります．あなたはその中の1つにいて，それはノード`Top' 
の下にあります．それ以外は`h'コマンドで行くノード`Help'を含んでいます．
実際，ごみ収集人がいないので，サブ構造を示さなくても困った問題はありま
せんが，しかしこのようなサブ構造は，今まで誰もその存在を見つけることが
できないので，どちらかと言うと無用です．



File: info-ja.info, Node: Cross-refs, Next: Tags, Prev: Menus, Up: Expert Info

Creating Cross References
=========================

相互参照を作成する
==================

相互参照は，行の先頭に書かれている必要があるメニュー項目と異なり，テキ
ストのどこにでも書くことが可能です．相互参照は，`*'の代わりに`*note'が
あること以外，メニュー項目のように見えます．それは，`)'がノード名の一
部にあることも多いので，`)'で終端することは*できません*．括弧で相互参
照を囲みたい場合，ピリオドを最初に用いて終端してください．相互参照ポイ
ンタの2つの例は以下のようになります．

     *Note details: commands.  (See *note 3: Full Proof.)

*これらは単なる例です．*それが"導く"場所は実際には存在しません！

* Menu:

* Help-Cross::                  Target of a cross-reference.




File: info-ja.info, Node: Help-Cross, Up: Cross-refs

The node reached by the cross reference in Info
-----------------------------------------------

Infoの相互参照で到着するノード
------------------------------

これは，`Cross'と命名されている相互参照で到着するノードです．

このノードは，相互参照で到着することを目的とした特殊なもので，ほとんど
の相互参照は，Infoドキュメントの構造のどこか遠くに"属している"場所があ
ります．そのため，このノードに来たところへ戻るための`Next'，`Previous'，
または`Up' へのリンクがあることを期待することはできません．一般的に，
`l' (el)コマンドがそこへ戻る唯一の方法です．

>> 相互参照でやってきたノードに戻るために`l'を入力してください．



File: info-ja.info, Node: Help-Q, Prev: Help-Int, Up: Getting Started

Quitting Info
=============

Infoを終了する
==============

Infoから出てこれまでしていたことに戻るため，"Quit"するために`q' を入力
してください．これはEmacsで`Info-exit'を実行します．

これがInfoの使用上の基本コースの最後です．Infoドキュメントでの移動方法
と，メニューや相互参照をたどる方法を既に学んできました．これで，新しい
パッケージを学ぶときに新しいユーザが行なう，マニュアルの最初から最後ま
で読む準備ができています．

それ以外のInfoコマンドは，マニュアルで何かを素早く探すときに役に立ちま
す-- すなわち，マニュアルをチュートリアルとしてではなくリファレンスと
して使用する必要があるときです．検索コマンドも同じように学んで欲しいと
いう気持ちもあります．今そうしたい場合，この相互参照 *Note Info
Search:: をたどってください．

更にもう一つのコマンドの組は，熟練ユーザに対して意味があります．Infoの
ドキュメントのディレクトリノードを探すと見つかるはずです．それらを見つ
けることは，通常の方法でInfoを使用するための良い練習になるでしょう．

>> Infoディレクトリノードに移動するために`d'を入力してください．そし
   て，Infoのノードと利用可能なそれ以外のヘルプを見るために，`mInfo'
   とリターンを入力してください．




File: info-ja.info, Node: Tags, Next: Checking, Prev: Cross-refs, Up: Expert Info

Infoファイルのタグ表
====================

大きなInfoファイルにタグ表を与えることで，ノードへのアクセスを速くする
ことが可能です．プログラムのタグ表と異なり，Infoファイルのタグ表はファ
イル自身に存在し，Infoがファイルを読み込むときはいつでも自動的に使用さ
れます．

タグ表を作成するため，Emacs Infoモードを使用しているファイルのノードへ
行 き，`M-x Info-tagify'を入力してください．ファイルを保存するため， 
`C-x C-s'を使用する必要があります．Texinfoパッケージの一部の`makeinfo'
コマンドで生成されたInfoファイルは，常に最初にタグ表があります．

一度Infoファイルにタグ表を持たせると，それが最新であることを確かめる必
要があります．(Texinfoソースを編集するのではなく)Infoファイルを直接編
集し，テキストが削除される結果として，タグ表が記録している位置からノー
ドがファイルの中で千文字以上移動される場合，Infoはもはやそのノードを見
つけることができないでしょう．タグ表を更新するため，再び`Info-tagify' 
コマンドを使用してください．

Infoファイルのタグ表はファイルの終わりにあり，以下のようになっています．

     ^_^L
     Tag Table:
     File: info, Node: Cross-refs^?21419
     File: info,  Node: Tags^?22145
     ^_
     End Tag Table

ノードごとに1行を含んでいて，この行が，(ノード名の直後で終る)ノードヘッ
ダの初めの部分，`DEL'文字，そしてファイル内でのノードを開始する文字の
位置を含んでいることに注意してください．



File: info-ja.info, Node: Checking, Next: Emacs Info Variables, Prev: Tags, Up: Expert Info

Checking an Info File
=====================

Infoファイルの調査
==================

Infoファイルを作成するとき，他のノードからのポインタを作成しているとき
にノード名を簡単に忘れてしまうものです．ノードに対して間違った名前を書
いた場合，誰かがInfoを使用してポインタへの移動を試みるまで発見されませ
ん．Infoファイルの照合は，すべてのノードへのポインタを調査して，無効な
ポインタを報告する自動的な処理です．すべての`Next'，`Previous'，そして
`Up'は，すべてのメニュー項目とすべての相互参照として調査されます．更に，
`Previous'を示すものを持たない`Next'すべてが報告されます．他のファイル
へのポインタの調査は大変遅いので，ファイル内の中のポインタのみ調査され
ます．しかし，それらは通常ほとんどありません．

Infoファイルを調査するため，ファイルのノードを見ている間に，Emacs Info 
モードで`M-x Info-validate'をしてください．



File: info-ja.info, Node: Emacs Info Variables, Prev: Checking, Up: Expert Info

EmacsのInfoモード変数
=====================

以下の変数で，EmacsでのInfoモードの動作を修正してもかまいません．1つま
たは複数のこれらの値を，対話的に，または`~/.emacs'初期化ファイルで設定
してもかまいません．*Note Examining and Setting Variables:
(emacs)Examining．スタンド アローンのInfoリーダプログラムには，*Note
Manipulating Variables: (info-stnd)Variables に記述されている独自の変
数セットがありま す．

`Info-directory-list'
     Infoファイルを探すディレクトリリストです．それぞれの項目は文字列
     (ディレクトリ名)または`nil'(デフォルトディレクトリを試します)です．
     初期化されていない場合は，それを初期化するためにInfoはユーザ変数
     `INFOPATH' を使用し，環境変数`INFOPATH'が無い場合は，
     `Info-default-directory-list'を使用します．

     EmacsのInfoモードとスタンドアローンのInfoで，Infoが検索するディレ
     クトリのリストをカスタマイズしたい場合，両方のプログラムに適用さ
     れる`INFOPATH'環境変数を設定するのが最も良い方法です．

`Info-additional-directory-list'
     Infoドキュメントファイルを検索する追加のディレクトリリストです．
     これらのディレクトリは，`dir'ファイルにマージするために検索されま
     せん．

`Info-fontify'
     `nil'ではない値に設定されるとき，Infoファイルの強調が利用可能です．
     デフォルトは`t'です．`info-node'，`info-xref'，
     `info-header-xref', `info-header-node', `info-menu-5',
     `info-menu-header' と `info-title-N-face' (Nはセクションレベルで，
     1から4の間の数です)，概観をカスタマイズするため，`M-x
     customize-face RET FACE RET'と入力してくださ い -- FACEはここでリ
     ストアップされているものの一つになります．

`Info-hide-note-references'
     既に説明したように，EmacsのInfoでは通常メニューと相互参照に含まれ
     るテキストの一部を隠します．このオプションを `nil' に設定すること
     で，この機能を完全に無効にすることができます．この変数を`nil' で
     も`t'でもない値に設定すると，中間の振舞い，役立つすべてのテキスト
     は表示するが限定的な用途しかないテキストは隠すようになります．

`Info-scroll-prefer-subnodes'
     `nil' でない値に設定すると，SPC と BACKSPACE (あるいは DEL)キーを
     メニューで入力すると，最後か最初までスクロールする前にサブノード
     へ移動します．例えば，ノードのメニューがスクリーンに表われると，
     次に入力する SPC でメニューに含まれるサブノードへ移動できます．こ
     のオプションを`nil'に設定すると，スタンドアローンのInfo リーダと
     似た動作になります．つまり，現在のノードの最後で入力した時のみ最
     初のサブノードへ移動します．デフォルトは `nil'です．

`Info-enable-active-nodes'
     `nil'でない値が設定されているとき，ノードに関連付けされたLispコー
     ドをInfoが実行すること可能にします．Lispコードはノードが選択され
     たとき実行されます．実行されるLispコードにはノードデリミタ(`DEL'
     文字)と以下のような`execute: 'タグを続けるべきです．

          ^_execute: (message "This is an active node!")

`Info-enable-edit'
     `nil'に設定し，`e'(`Info-edit')コマンドを利用不可にします．`nil'
     でない値では，それが可能です．*Note Edit: Add



File: info-ja.info, Node: Creating an Info File, Next: Index, Prev: Expert Info, Up: Top

TexinfoファイルからInfoファイルを作成する
*****************************************

`makeinfo'は，TexinfoファイルをInfoファイルに変換するユーティリティで
す．`texinfo-format-region'と`texinfo-format-buffer'は，同じことを行な
うGNU Emacsの関数です．

Texinfoファイルの書き方を学ぶため，*Note Overview of Texinfo:
(texinfo)Topを参照ください

TexinfoファイルからInfoファイルの作成する方法を学ぶため，*Note
Creating an Info File: (texinfo)Creating an Info File を参照ください

Infoファイルを作成後，インストール方法を学ぶため，*Note Installing an
Info File: (texinfo)Installing an Info File を参照ください



File: info-ja.info, Node: Index

索引
****

以下は，すべてのコマンド，変数，そしてこのドキュメントで説明しているト
ピックのアルファベット順のリストです．


* Menu:

* 1 through 9 (Info mode):      Advanced.               33.
* ノード区切り:                 Add.                    25.
* ノードのヘッダ行書式:         Add.                    37.
* BACKSPACE (Info mode):        Help-^L.                14.
* C-l (Info mode):              Help-^L.                56.
* 相互参照の書式:               Cross-refs.             8.
* DEL (Info mode):              Help-^L.                14.
* Directory node:               Add.                    44.
* Emacsで非表示なテキスト:      Help-Inv.               9.
* Infoモードのマウスサポート:   Help-M.                 139.
* Infoのメニュー:               Help-M.                 5.
* Infoを終了する:               Help-Q.                 8.
* Info のタグ表を更新:          Tags.                   15.
* Infoファイルのタグ表:         Tags.                   5.
* Info-directory:               Help-Int.               37.
* Info document as a reference: Info Search.            5.
* Info documents as tutorials:  Help-^L.                35.
* Info-edit:                    Advanced.               55.
* Info-exit:                    Help-Q.                 8.
* Info-follow-reference:        Help-Xref.              11.
* Info-goto-node:               Advanced.               11.
* Info-index:                   Info Search.            14.
* Info-last:                    Help-Int.               20.
* Info-menu:                    Help-M.                 74.
* Info menus:                   Help-M.                 5.
* ? (Info mode):                Help-^L.                74.
* Info-mouse-follow-nearest-node: Help-M.               153.
* Info-nth-menu-item:           Advanced.               33.
* Info-scroll-down:             Help-^L.                14.
* Info-scroll-up:               Help-^L.                14.
* Info-search:                  Info Search.            46.
* Info-summary:                 Help-^L.                74.
* Info-tagify:                  Tags.                   10.
* Info-top-node:                Help-Int.               47.
* Info-up:                      Help-FOO.               12.
* Info-validate:                Checking.               18.
* M-s (Info mode):              Info Search.            56.
* メニューの書式:               Menus.                  12.
* Mouse-2 (Info mode):          Help-M.                 139.
* N 番目のメニューを選択:       Advanced.               33.
* PAGEDOWN (Info mode):         Help-^L.                49.
* PAGEUP (Info mode):           Help-^L.                49.
* SPC (Info mode):              Help-^L.                14.
* abbreviating Info subnodes:   Help-M.                 79.
* b (Info mode):                Help-^L.                62.
* completion of Info node names: Help-M.                86.
* cross reference format:       Cross-refs.             8.
* cross references in Info documents: Help-Xref.        5.
* d (Info mode):                Help-Int.               37.
* e (Info mode):                Advanced.               55.
* edit Info document:           Advanced.               55.
* f (Info mode):                Help-Xref.              11.
* format of node headers:       Add.                    37.
* g (Info mode):                Advanced.               11.
* go to Directory node:         Help-Int.               37.
* go to Top node:               Help-Int.               47.
* go to a node by name:         Advanced.               11.
* go to another Info file:      Advanced.               20.
* going back in Info mode:      Help-Int.               20.
* header of Info node:          Help.                   15.
* i (Info mode):                Info Search.            14.
* invisible text in Emacs:      Help-Inv.               9.
* l (Info mode):                Help-Int.               20.
* m (Info mode):                Help-M.                 53.
* menu and menu entry format:   Menus.                  12.
* menus in an Info document:    Help-M.                 5.
* mouse support in Info mode:   Help-M.                 139.
* n (Info mode):                Help.                   27.
* node delimiters:              Add.                    25.
* node header line format:      Add.                    37.
* node, in Info documents:      Help.                   10.
* node name format:             Add.                    44.
* p (Info mode):                Help-P.                 5.
* q (Info mode):                Help-Q.                 8.
* quitting Info mode:           Help-Q.                 8.
* reading Info documents top to bottom: Help-^L.        35.
* s (Info mode):                Info Search.            46.
* searching Info documents:     Info Search.            5.
* select N'th menu item:        Advanced.               33.
* small screen, moving around:  Help-Small-Screen.      6.
* stale tags tables:            Tags.                   15.
* t (Info mode):                Help-Int.               47.
* tags tables in info files:    Tags.                   5.
* u (Info mode):                Help-FOO.               12.
* unstructured documents:       Add.                    58.
* update Info tags table:       Tags.                   15.
* visible-mode:                 Help-Inv.               16.


Tag table:
Node: Top313
Node: Getting Started990
Node: Help-Small-Screen1711
Node: Help2965
Node: Help-P3941
Node: Help-^L4652
Node: Help-Inv7486
Node: Help-]8582
Node: Help-M9339
Node: Help-FOO14034
Node: Help-Xref14634
Node: Help-Int16774
Node: Expert Info18284
Node: Advanced19288
Node: Info Search20973
Node: Add22775
Node: Menus25422
Node: Cross-refs27085
Node: Help-Cross27627
Node: Help-Q28090
Node: Tags28810
Node: Checking29704
Node: Emacs Info Variables30292
Node: Creating an Info File32394
Node: Index32952

End tag table
