((ac-slime status "installed" recipe
	   (:name ac-slime :website "https://github.com/purcell/ac-slime" :description "Emacs auto-complete plugin for Slime symbols" :type github :depends
		  (slime)
		  :pkgname "purcell/ac-slime"))
 (ample-regexps status "installed" recipe
		(:name ample-regexps :description "Compose and reuse Emacs regular expressions with ease" :type github :pkgname "immerrr/ample-regexps.el"))
 (apel status "installed" recipe
       (:name apel :website "http://www.kanji.zinbun.kyoto-u.ac.jp/~tomo/elisp/APEL/" :description "APEL (A Portable Emacs Library) is a library to support to write portable Emacs Lisp programs." :type github :pkgname "wanderlust/apel" :build
	      (mapcar
	       (lambda
		 (target)
		 (list el-get-emacs
		       (split-string "-batch -q -no-site-file -l APEL-MK -f")
		       target "prefix" "site-lisp" "site-lisp"))
	       '("compile-apel" "install-apel"))
	      :load-path
	      ("site-lisp/apel" "site-lisp/emu")))
 (auto-async-byte-compile status "installed" recipe
			  (:name auto-async-byte-compile :description "Automatically byte-compile when saved" :website "http://www.emacswiki.org/emacs/AutoAsyncByteCompile" :type emacswiki :post-init
				 (add-hook 'emacs-lisp-mode-hook 'enable-auto-async-byte-compile-mode)
				 :features "auto-async-byte-compile"))
 (auto-complete status "installed" recipe
		(:name auto-complete :website "https://github.com/auto-complete/auto-complete" :description "The most intelligent auto-completion extension." :type github :pkgname "auto-complete/auto-complete" :depends
		       (popup fuzzy)
		       :features auto-complete-config :post-init
		       (progn
			 (add-to-list 'ac-dictionary-directories
				      (expand-file-name "dict" default-directory))
			 (ac-config-default))))
 (bbdb status "installed" recipe
       (:name bbdb :website "http://bbdb.sourceforge.net/" :description "The Insidious Big Brother Database (BBDB) is a contact management utility." :type git :url "git://git.savannah.nongnu.org/bbdb.git" :load-path
	      ("./lisp")
	      :build
	      `("autoconf" ,(concat "./configure --with-emacs=" el-get-emacs)
		"make clean" "rm -f lisp/bbdb-autoloads.el" "make info bbdb")
	      :features bbdb-loaddefs :autoloads nil :info "doc" :post-init
	      (bbdb-initialize)))
 (bm status "installed" recipe
     (:name bm :pkgname "joodland/bm" :website "http://joodland.github.com/bm/" :type github :description "Visible, persistent, buffer local, bookmarks"))
 (cl-lib status "installed" recipe
	 (:name cl-lib :builtin "24.3" :type elpa :description "Properly prefixed CL functions and macros" :url "http://elpa.gnu.org/packages/cl-lib.html"))
 (ctable status "installed" recipe
	 (:name ctable :description "Table Component for elisp" :type github :pkgname "kiwanami/emacs-ctable"))
 (dash status "installed" recipe
       (:name dash :description "A modern list api for Emacs. No 'cl required." :type github :pkgname "magnars/dash.el"))
 (ddskk status "installed" recipe
	(:name ddskk :website "http://openlab.ring.gr.jp/skk/ddskk.html" :description "A Japanese input method on Emacs." :type cvs :module "skk/main" :url ":pserver:guest@openlab.jp:/circus/cvsroot" :autoloads nil :options "login" :info "doc/skk.info" :features
	       ("skk-setup")
	       :build
	       `((,el-get-emacs "-batch" "-q" "-no-site-file" "-l" "SKK-MK" "-f" "SKK-MK-compile")
		 (,el-get-emacs "-batch" "-q" "-no-site-file" "-l" "SKK-MK" "-f" "SKK-MK-compile-info")
		 ("mv" "skk-setup.el.in" "skk-setup.el"))))
 (deferred status "installed" recipe
   (:name deferred :description "Simple asynchronous functions for emacs lisp." :type github :pkgname "kiwanami/emacs-deferred"))
 (direx status "installed" recipe
	(:name direx :description "Directory Explorer" :type github :pkgname "m2ym/direx-el"))
 (direx-grep status "installed" recipe
	     (:name direx-grep :website "https://github.com/aki2o/direx-grep" :description "Grep node of direx.el using incremental search like anything.el/helm.el" :type github :pkgname "aki2o/direx-grep" :depends
		    (direx)))
 (e2wm status "installed" recipe
       (:name e2wm :description "simple window manager for emacs" :website "https://github.com/kiwanami/emacs-window-manager" :type github :pkgname "kiwanami/emacs-window-manager" :depends window-layout))
 (el-expectations status "installed" recipe
		  (:name el-expectations :description "Minimalist unit testing framework" :type emacswiki))
 (el-get status "installed" recipe
	 (:name el-get :website "https://github.com/dimitri/el-get#readme" :description "Manage the external elisp bits and pieces you depend upon." :type github :branch "master" :pkgname "dimitri/el-get" :info "." :load "el-get.el"))
 (elisp-slime-nav status "installed" recipe
		  (:name elisp-slime-nav :type github :pkgname "purcell/elisp-slime-nav" :description "Slime-style navigation for Emacs Lisp" :prepare
			 (add-hook 'emacs-lisp-mode-hook
				   (defun turn-elisp-slime-nav-on nil
				     (elisp-slime-nav-mode t)))))
 (elscreen status "installed" recipe
	   (:name elscreen :website "https://github.com/emacs-jp/elscreen" :description "elscreen" :type github :pkgname "emacs-jp/elscreen"))
 (emacs-async status "installed" recipe
	      (:name emacs-async :description "Simple library for asynchronous processing in Emacs" :type github :pkgname "jwiegley/emacs-async"))
 (emacs-jabber status "installed" recipe
	       (:name emacs-jabber :description "A minimal jabber client" :type git :url "git://emacs-jabber.git.sourceforge.net/gitroot/emacs-jabber/emacs-jabber" :info "." :load-path
		      (".")
		      :features jabber-autoloads :build
		      (("autoreconf" "-i")
		       "./configure" "make"
		       ("mv" "jabber.info" "emacs-jabber.info"))))
 (emacs-w3m status "installed" recipe
	    (:name emacs-w3m :description "A simple Emacs interface to w3m" :type cvs :website "http://emacs-w3m.namazu.org/" :module "emacs-w3m" :url ":pserver:anonymous@cvs.namazu.org:/storage/cvsroot" :build
		   `("autoconf"
		     ("./configure" ,(format "--with-emacs=%s" el-get-emacs))
		     "make")
		   :build/windows-nt
		   (("sh" "./autogen.sh")
		    ("sh" "./configure")
		    "make")
		   :info "doc"))
 (ess status "installed" recipe
      (:name ess :description "Emacs Speaks Statistics: statistical programming within Emacs" :type svn :url "https://svn.r-project.org/ESS/trunk/" :info "doc/info/" :build `,(mapcar
																						(lambda
																						  (target)
																						  (concat "make " target " EMACS=" el-get-emacs))
																						'("clean" "all"))
	     :load-path
	     ("lisp")
	     :features ess-site))
 (expand-region status "installed" recipe
		(:name expand-region :type github :pkgname "magnars/expand-region.el" :description "Expand region increases the selected region by semantic units. Just keep pressing the key until it selects what you want." :website "https://github.com/magnars/expand-region.el#readme"))
 (fuzzy status "installed" recipe
	(:name fuzzy :website "https://github.com/auto-complete/fuzzy-el" :description "Fuzzy matching utilities for GNU Emacs" :type github :pkgname "auto-complete/fuzzy-el"))
 (gh status "installed" recipe
     (:name gh :description "Github API client libraries" :type github :pkgname "sigma/gh.el" :depends
	    (pcache logito request)
	    :autoloads nil))
 (gist status "installed" recipe
       (:name gist :type github :pkgname "defunkt/gist.el" :depends
	      (gh tabulated-list)
	      :description "Emacs integration for gist.github.com" :website "http://github.com/defunkt/gist.el"))
 (git-commit-mode status "installed" recipe
		  (:name git-commit-mode :description "Major mode for editing git commit messages" :type github :pkgname "rafl/git-commit-mode" :features git-commit))
 (git-modes status "installed" recipe
	    (:name git-modes :description "GNU Emacs modes for various Git-related files" :type github :pkgname "lunaryorn/git-modes"))
 (git-rebase-mode status "installed" recipe
		  (:name git-rebase-mode :description "Major mode for editing Git rebase files." :type http :url "https://raw.github.com/magit/git-modes/master/git-rebase-mode.el"))
 (google-contacts status "installed" recipe
		  (:name google-contacts :description "Access Google Contacts from Emacs." :type github :depends oauth2 :pkgname "jd/google-contacts.el"))
 (google-maps status "installed" recipe
	      (:name google-maps :description "Access Google Maps from Emacs." :type github :pkgname "jd/google-maps.el"))
 (helm status "installed" recipe
       (:name helm :description "Emacs incremental and narrowing framework" :type github :pkgname "emacs-helm/helm" :compile nil))
 (helm-descbinds status "installed" recipe
		 (:name helm-descbinds :type github :pkgname "emacs-helm/helm-descbinds" :description "Yet Another `describe-bindings' with `helm'." :depends
			(helm)
			:prepare
			(progn
			  (autoload 'helm-descbinds-install "helm-descbinds"))))
 (htmlize status "installed" recipe
	  (:type github :pkgname "emacsmirror/htmlize" :name htmlize :website "http://www.emacswiki.org/emacs/Htmlize" :description "Convert buffer text and decorations to HTML." :type emacsmirror :localname "htmlize.el"))
 (http-post-simple status "installed" recipe
		   (:name http-post-simple :auto-generated t :type emacswiki :description "HTTP POST requests using the url library" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/http-post-simple.el"))
 (idle-require status "installed" recipe
	       (:name idle-require :website "https://github.com/nschum/idle-require.el" :description "idle-require" :type github :pkgname "nschum/idle-require.el"))
 (idle-scroll status "installed" recipe
	      (:name idle-scroll :auto-generated t :type emacswiki :description "scroll down a line when Emacs is idle" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/idle-scroll.el"))
 (ido-vertical-mode status "installed" recipe
		    (:name ido-vertical-mode :type github :pkgname "rson/ido-vertical-mode.el" :description "makes ido-mode display vertically" :features ido-vertical-mode))
 (image+ status "installed" recipe
	 (:name image+ :website "https://github.com/mhayashi1120/Emacs-imagex" :description "image+" :type github :pkgname "mhayashi1120/Emacs-imagex"))
 (image-dired+ status "installed" recipe
	       (:name image-dired+ :website "https://github.com/mhayashi1120/Emacs-image-diredx" :description "image-dired+" :type github :pkgname "mhayashi1120/Emacs-image-diredx"))
 (info+ status "installed" recipe
	(:name info+ :auto-generated t :type emacswiki :description "Extensions to `info.el'." :website "https://raw.github.com/emacsmirror/emacswiki.org/master/info+.el"))
 (js2-mode status "installed" recipe
	   (:name js2-mode :website "https://github.com/mooz/js2-mode#readme" :description "An improved JavaScript editing mode" :type github :pkgname "mooz/js2-mode" :prepare
		  (autoload 'js2-mode "js2-mode" nil t)))
 (key-chord status "installed" recipe
	    (:name key-chord :description "Map pairs of simultaneously pressed keys to commands." :type emacswiki :features "key-chord"))
 (keyfreq status "installed" recipe
	  (:name keyfreq :description "Track Emacs commands frequency" :type github :pkgname "dacap/keyfreq"))
 (log4e status "installed" recipe
	(:name log4e :website "https://github.com/aki2o/log4e" :description "provide logging framework for elisp." :type github :pkgname "aki2o/log4e"))
 (logito status "installed" recipe
	 (:name logito :type github :pkgname "sigma/logito" :description "logging library for Emacs" :website "http://github.com/sigma/logito"))
 (lua-mode status "installed" recipe
	   (:name lua-mode :description "A major-mode for editing Lua scripts" :depends
		  (ample-regexps)
		  :type github :pkgname "immerrr/lua-mode"))
 (magit status "installed" recipe
	(:name magit :website "https://github.com/magit/magit#readme" :description "It's Magit! An Emacs mode for Git." :type github :pkgname "magit/magit" :depends
	       (cl-lib)
	       :info "." :build
	       (if
		   (version<= "24.3" emacs-version)
		   `(("make" ,(format "EMACS=%s" el-get-emacs)
		      "all"))
		 `(("make" ,(format "EMACS=%s" el-get-emacs)
		    "docs")))
	       :build/berkeley-unix
	       (("touch" "`find . -name Makefile`")
		("gmake"))))
 (metaweblog status "installed" recipe
	     (:name metaweblog :description "Metaweblog" :type github :pkgname "punchagan/metaweblog"))
 (monky status "installed" recipe
	(:name monky :description "Magit for Hg" :type github :pkgname "ananthakumaran/monky" :features monky))
 (multiple-cursors status "installed" recipe
		   (:name multiple-cursors :description "An experiment in adding multiple cursors to emacs" :type github :pkgname "magnars/multiple-cursors.el"))
 (navi2ch status "installed" recipe
	  (:name navi2ch :website "http://navi2ch.sourceforge.net/" :description "Navigator for 2ch for Emacsen" :type github :pkgname "naota/navi2ch"))
 (o-blog status "removed" recipe nil)
 (oauth2 status "installed" recipe
	 (:name oauth2 :description "OAuth 2.0 Authorization Protocol" :type elpa))
 (org-mode status "installed" recipe
	   (:name org-mode :website "http://orgmode.org/" :description "Org-mode is for keeping notes, maintaining ToDo lists, doing project planning, and authoring with a fast and effective plain-text system." :type git :url "git://orgmode.org/org-mode.git" :info "doc" :build/berkeley-unix `,(mapcar
																																				       (lambda
																																					 (target)
																																					 (list "gmake" target
																																					       (concat "EMACS="
																																						       (shell-quote-argument el-get-emacs))))
																																				       '("oldorg"))
		  :build `,(mapcar
			    (lambda
			      (target)
			      (list "make" target
				    (concat "EMACS="
					    (shell-quote-argument el-get-emacs))))
			    '("oldorg"))
		  :load-path
		  ("." "contrib/lisp" "lisp")
		  :load
		  ("lisp/org-loaddefs.el")))
 (org-toodledo status "installed" recipe
	       (:name org-toodledo :website "https://github.com/christopherjwhite/org-toodledo" :description "org-toodledo" :type github :pkgname "christopherjwhite/org-toodledo"))
 (org2blog status "installed" recipe
	   (:name org2blog :description "Blog from Org mode to wordpress" :type github :pkgname "punchagan/org2blog" :depends
		  (xml-rpc-el metaweblog org-mode)
		  :features org2blog))
 (package status "installed" recipe
	  (:name package :description "ELPA implementation (\"package.el\") from Emacs 24" :builtin "24" :type http :url "http://repo.or.cz/w/emacs.git/blob_plain/1a0a666f941c99882093d7bd08ced15033bc3f0c:/lisp/emacs-lisp/package.el" :shallow nil :features package :post-init
		 (progn
		   (let
		       ((old-package-user-dir
			 (expand-file-name
			  (convert-standard-filename
			   (concat
			    (file-name-as-directory default-directory)
			    "elpa")))))
		     (when
			 (file-directory-p old-package-user-dir)
		       (add-to-list 'package-directory-list old-package-user-dir)))
		   (setq package-archives
			 (bound-and-true-p package-archives))
		   (mapc
		    (lambda
		      (pa)
		      (add-to-list 'package-archives pa 'append))
		    '(("ELPA" . "http://tromey.com/elpa/")
		      ("melpa" . "http://melpa.milkbox.net/packages/")
		      ("gnu" . "http://elpa.gnu.org/packages/")
		      ("marmalade" . "http://marmalade-repo.org/packages/")
		      ("SC" . "http://joseito.republika.pl/sunrise-commander/"))))))
 (pcache status "installed" recipe
	 (:name pcache :description "persistent caching for Emacs" :type github :pkgname "sigma/pcache"))
 (pkgbuild-mode status "installed" recipe
		(:name pkgbuild-mode :description "Major mode for editing PKGBUILD files" :type github :pkgname "juergenhoetzel/pkgbuild-mode" :features pkgbuild-mode :post-init
		       (add-to-list 'auto-mode-alist
				    '("PKGBUILD$" . pkgbuild-mode))))
 (point-undo status "installed" recipe
	     (:name point-undo :auto-generated t :type emacswiki :description "undo/redo position" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/point-undo.el"))
 (pophint status "installed" recipe
	  (:name pophint :website "https://github.com/aki2o/emacs-pophint" :description "provide navigation like the Vimperator Hint Mode of Firfox." :type github :pkgname "aki2o/emacs-pophint" :depends
		 (popup log4e yaxception)))
 (popup status "installed" recipe
	(:name popup :website "https://github.com/auto-complete/popup-el" :description "Visual Popup Interface Library for Emacs" :type github :submodule nil :pkgname "auto-complete/popup-el"))
 (popwin status "installed" recipe
	 (:name popwin :description "Popup Window Manager." :website "https://github.com/m2ym/popwin-el" :type github :pkgname "m2ym/popwin-el" :load-path
		("." "misc")))
 (pos-tip status "installed" recipe
	  (:name pos-tip :description "Show tooltip at point" :type emacswiki))
 (pymacs status "removed" recipe nil)
 (rainbow-mode status "installed" recipe
	       (:name rainbow-mode :description "Colorize color names in buffers" :minimum-emacs-version 24 :type elpa))
 (recentf-ext status "installed" recipe
	      (:name recentf-ext :description "Recentf extensions" :type emacswiki :features "recentf-ext"))
 (request status "installed" recipe
	  (:name request :description "Easy HTTP request for Emacs Lisp" :type github :submodule nil :pkgname "tkf/emacs-request"))
 (scratch-log status "installed" recipe
	      (:name scratch-log :website "https://github.com/myuhe/scratch-log" :description "scratch log" :branch "scratch-log-start" :type github :pkgname "myuhe/scratch-log"))
 (sdic-inline status "installed" recipe
	      (:name sdic-inline :auto-generated t :type emacswiki :description "Program to view dictionary." :website "https://raw.github.com/emacsmirror/emacswiki.org/master/sdic-inline.el"))
 (sdic-inline-pos-tip status "installed" recipe
		      (:name sdic-inline-pos-tip :auto-generated t :type emacswiki :description "Extension for sdic-inline-mode using pos-tip.el" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/sdic-inline-pos-tip.el"))
 (session status "installed" recipe
	  (:name session :description "When you start Emacs, package Session restores various variables (e.g., input histories) from your last session. It also provides a menu containing recently changed/visited files and restores the places (e.g., point) of such a file when you revisit it." :type http-tar :options
		 ("xzf")
		 :load-path
		 ("lisp")
		 :url "http://downloads.sourceforge.net/project/emacs-session/session/session-2.3a.tar.gz"))
 (slideview status "installed" recipe
	    (:name slideview :website "https://github.com/mhayashi1120/Emacs-slideview" :description "slideview" :type github :pkgname "mhayashi1120/Emacs-slideview"))
 (slime status "installed" recipe
	(:name slime :description "Superior Lisp Interaction Mode for Emacs" :type github :autoloads "slime-autoloads" :info "doc" :pkgname "slime/slime" :depends cl-lib :load-path
	       ("." "contrib")
	       :build
	       '(("sed" "-i" "s/@itemx INIT-FUNCTION/@item INIT-FUNCTION/" "doc/slime.texi")
		 ("make" "-C" "doc" "slime.info"))
	       :build/darwin
	       '(("make" "-C" "doc" "slime.info"))
	       :build/berkeley-unix
	       '(("gmake" "-C" "doc" "slime.info"))
	       :post-init
	       (slime-setup)))
 (smex status "installed" recipe
       (:name smex :description "M-x interface with Ido-style fuzzy matching." :type github :pkgname "nonsequitur/smex" :features smex :post-init
	      (smex-initialize)))
 (stripe-buffer status "installed" recipe
		(:name stripe-buffer :description "Use different background colors for even and odd lines." :type github :pkgname "sabof/stripe-buffer"))
 (svg-clock status "installed" recipe
	    (:name svg-clock :type elpa :description "svg-clock provides a scalable analog clock.  Rendering is done by\nmeans of svg (Scalable Vector Graphics).  Works only with Emacsen\nwhich were built with svg support -- (image-type-available-p 'svg)\nmust return t.  Call `svg-clock' to start/stop the clock.\nSet `svg-clock-size' to change its size."))
 (tabulated-list status "installed" recipe
		 (:name tabulated-list :type github :pkgname "sigma/tabulated-list.el" :description "generic major mode for tabulated lists." :website "http://github.com/sigma/tabulated-list.el"))
 (thingopt status "installed" recipe
	   (:name thingopt :website "https://github.com/m2ym/thingopt-el" :description "thinopt" :type github :pkgname "m2ym/thingopt-el"))
 (twittering-mode status "installed" recipe
		  (:name twittering-mode :description "Major mode for Twitter" :type github :pkgname "hayamiz/twittering-mode" :features twittering-mode :compile "twittering-mode.el"))
 (undo-tree status "installed" recipe
	    (:name undo-tree :description "Treat undo history as a tree" :website "http://www.dr-qubit.org/emacs.php" :type git :url "http://www.dr-qubit.org/git/undo-tree.git/"))
 (wgrep status "installed" recipe
	(:name wgrep :description "Writable grep buffer and apply the changes to files" :type github :pkgname "mhayashi1120/Emacs-wgrep"))
 (window-layout status "installed" recipe
		(:name window-layout :description "window layout manager" :website "https://github.com/kiwanami/emacs-window-layout" :type github :pkgname "kiwanami/emacs-window-layout"))
 (xml-rpc-el status "installed" recipe
	     (:name xml-rpc-el :description "An elisp implementation of clientside XML-RPC" :type bzr :url "lp:xml-rpc-el"))
 (yalinum status "installed" recipe
	  (:name yalinum :description "Yet another display line numbers." :website "https://github.com/tm8st/emacs-yalinum/" :type github :pkgname "tm8st/emacs-yalinum" :features "yalinum"))
 (yasnippet status "installed" recipe
	    (:name yasnippet :website "https://github.com/capitaomorte/yasnippet.git" :description "YASnippet is a template system for Emacs." :type github :pkgname "capitaomorte/yasnippet" :compile "yasnippet.el" :submodule nil :build
		   (("git" "submodule" "update" "--init" "--" "snippets"))))
 (yaxception status "installed" recipe
	     (:name yaxception :website "https://github.com/aki2o/yaxception" :description "provide framework about exception like Java for elisp." :type github :pkgname "aki2o/yaxception"))
 (zlc status "installed" recipe
      (:name zlc :website "https://github.com/mooz/emacs-zlc/" :description "emacs-zlc" :type github :pkgname "mooz/emacs-zlc")))
