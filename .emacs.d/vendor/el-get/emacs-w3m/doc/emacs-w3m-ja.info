Info file: emacs-w3m-ja.info,    -*-Text-*-
produced by ‘texinfo-format-buffer’
from file ‘emacs-w3m-ja.texi’
using ‘texinfmt.el’ version 2.42 of  7 Jul 2006.

INFO-DIR-SECTION GNU Emacs Lisp
START-INFO-DIR-ENTRY
* Emacs-w3m-ja: (emacs-w3m-ja).  An Emacs interface to w3m (Japanese)
END-INFO-DIR-ENTRY


This file documents emacs-w3m, an Emacs interface to w3m.

このファイルは Emacs で動く w3m のインタフェースである emacs-w3m に関
する説明書です。

This edition is for emacs-w3m version 1.4.632.

この版は emacs-w3m バージョン 1.4.632 に対応します。





File: emacs-w3m-ja.info, Node: Top, Next: Introduction, Prev: (dir), Up: (dir)

Emacs-w3m ユーザマニュアル
**************************

                                                  Emacs-w3m 開発チーム

この文書は emacs-w3m バージョン 1.4.632 に対応します。



Copyright (C) 2000-2014 TSUCHIYA Masatoshi

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU General Public License,
     Version 2 or any later version published by the Free Software
     Foundation.

     この文書を、フリーソフトウェア財団によって発行された GNU 一般公衆
     利用許諾契約書第 2 版またはそれ以降の版のうちどれかの定める条件の
     下で複製、配布、あるいは変更することを許可します。

     This document is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     General Public License for more details.

     この文書は有用であることを願って頒布されますが、*全くの無保証* で
     す。*商業可能性* の保証や *特定の目的への適合性* は、言外に示され
     たものも含め全く存在しません。詳しくは GNU 一般公衆利用許諾契約書
     をご覧ください。

     You should have received a copy of the GNU General Public License
     along with this document; see the file COPYING.  If not, write to
     the Free Software Foundation, Inc., 51 Franklin Street, Fifth
     Floor, Boston, MA 02110-1301, USA.

     あなたはこの文書と共に、GNU 一般公衆利用許諾契約書の複製物を一部
     受け取ったはずです。COPYING ファイルを参照してください。もし受け
     取っていなければ、フリーソフトウェア財団まで請求してください (宛
     先は the Free Software Foundation, Inc., 59 Temple Place, Suite
     330, Boston, MA 02111-1307 USA)。



* Menu:

* Introduction::                はじめに
* Getting Started::             Emacs-w3m を使い始めるのはとっても簡単
* Basic Usage::                 基本的な使い方
* Pretty Good Features::        たくさんのすぐれもの
* Customizable Variables::      デフォルトのままでも結構良いと思うけれど
* Hooking into MUAs::           メール/ニュースリーダーで使う
* Frequently Asked Questions::  必ず答があるとは限らない
* Known Problems::              あなたならきっと解決できる
* Shimbun Library::             ウェブ上の新聞を読むための道具
* Tips::                        Emacs-w3m を使う洒落た小物たち
* Mailing List::                メーリングリスト、バグリポート
* Emacs-w3m Functions::         Emacs-w3m の関数の詳しい説明
* External Packages::           お仲間のパッケージたち
* Authors::                     このマニュアルを書いた人たち
* Index::                       索引

 -- 項目の詳細なリスト ---

Getting Started

* Required Emacs Version::      どんなバージョンの Emacs で使えるの?
* You Need w3m::                w3m を使います: emacs-w3m が速いわけ
* Other Requirements::          Emacs-w3m を動作させるのに必要なもの
* Installing Emacs-w3m::        Emacs-w3m をインストールする
* Non-UNIX-like systems::       非 UNIX 系環境でのインストール
* Minimal Settings::            設定しなければならない最低限のもの

Basic Usage

* Browsing Web Pages::          ネットサーフィンしよう!
* Inline Images::               画像表示を ON/OFF する
* Tracing History::             時空を遡る
* Managing Bookmarks::          ぼくの/わたしのお気に入り
* Using Tabs::                  みんなタブが好きだよね
* Working with buffers::        バッファを作る/消す/移動する
* Downloading::                 ファイルをダウンロードする
* Submitting Forms::            HTML フォームに記入する
* HTML File Information::       ウェブページ作りとハックのお手伝い

Pretty Good Features

* Using Search Engines::        使いやすいウェブ検索
* Grouping URLs::               一つの URL で複数のウェブページを見る
* Weather Information::         明日の天気は晴れでしょう
* Using Antenna::               アンテナを張り巡らそう
* Showing Directory Tree::      ディレクトリの木構造を表示する
* Viewing Perl Documents::      Perl のドキュメントを見る
* Using Namazu::                Namazu でファイルを検索する
* Octet::                       application/octet-stream データを見る
* Frame Local Buffers::         多数のセッションをフレームでグループ分けする
* Session Manager::             セッションの保存と読みこみ

Customizable Variables

* General Variables::           一般的な変数
* Image Variables::             画像に関連した変数
* Form Variables::              フォームに関連した変数
* Cookie Variables::            クッキーに関連した変数
* Bookmark Variables::          ブックマークに関連した変数
* Search Variables::            ウェブ検索に関連した変数
* Weather Variables::           天気予報に関連した変数
* Dtree Variables::             dtree に関連した変数
* Antenna Variables::           アンテナに関連した変数
* Perldoc Variables::           Perldoc に関連した変数
* Namazu Variables::            Namazu に関連した変数
* Octet Variables::             Octet に関連した変数
* Session Manager Variables::   セッションマネージャに関連した変数
* Hooks::                       フック
* Other Variables::             その他の変数

Hooking into MUAs

* Gnus::                        Gnus で HTML メールを読む
* Mew::                         Mew で HTML メールを読む
* SEMI MUAs::                   SEMI MUA で HTML メールを読む
* VM::                          VM (vieW maiL) は Wanderlust にあらず

Frequently Asked Questions

* General FAQ::                 一般的な質問
* Trouble FAQ::                 トラブル
* Shimbun FAQ::                 Shimbun に関する質問

Known Problems

Shimbun Library

* Nnshimbun::                   Gnus をウェブブラウザにする!
* Mew Shimbun::                 Mew で新聞を読む
* Shimbun with Wanderlust::     Wanderlust で新聞を読む
* Shimbun local mode::          新聞の取得にシェルスクリプトを使う
* Shimbun Sites::               新聞が読めるサイト
* Shimbun Basics::              新聞モジュールの作り方

Tips

Mailing List

Emacs-w3m Functions




File: emacs-w3m-ja.info, Node: Introduction, Next: Getting Started, Prev: Top, Up: Top

はじめに
********

Emacs/W3 (http://www.cs.indiana.edu/elisp/w3/docs.html) は、かつては
Emacs 上で動作する最もポピュラーな web ブラウザーでした。しかし動作が
非常に遅かったので、私たちはそれに代わる速いものを欲しました。一方、
w3m (http://w3m.sourceforge.net/) というページャーがありました。それは
ページャーでしたが、テキストモード WWW ブラウザーとして使うことができ
たので、私たちは w3m への Emacs インターフェースの開発を始めました。

すばらしい w3m プログラムを開発してくれた伊藤彰則さんと w3m チームのみ
なさんに、格段の感謝を捧げます。さらにコメント、提案およびバグの修正を
してくれたすべての人々に感謝します。たとえ問題があっても、責任はすべて
私たち (emacs-w3m 開発チーム) にあります。もっとも、保証はまったくあり
ませんが。Emacs-w3m は 2000年6月に土屋雅稔によって創始されました。

Emacs-w3m の公式ページ (http://emacs-w3m.namazu.org/) も併せてご覧くだ
さい。



File: emacs-w3m-ja.info, Node: Getting Started, Next: Basic Usage, Prev: Introduction, Up: Top

Emacs-w3m を使い始めるのはとっても簡単
**************************************

ひょっとすると、あなたのシステムには emacs-w3m がすでにインストールさ
れているかもしれません。その場合、あなたはこの項を読み飛ばして、直ちに
使い始めることができます。そんな幸運に恵まれなかったならば、emacs-w3m
のインストールの仕方を会得するために、読み続けてください。

* Menu:

* Required Emacs Version::      どんなバージョンの Emacs で使えるの?
* You Need w3m::                w3m を使います: emacs-w3m が速いわけ
* Other Requirements::          Emacs-w3m を動作させるのに必要なもの
* Installing Emacs-w3m::        Emacs-w3m をインストールする
* Non-UNIX-like systems::       非 UNIX 系環境でのインストール
* Minimal Settings::            設定しなければならない最低限のもの



File: emacs-w3m-ja.info, Node: Required Emacs Version, Next: You Need w3m, Prev: Getting Started, Up: Getting Started

どんなバージョンの Emacs で使えるの?
====================================

以下に挙げたいろいろなバージョンの Emacsen で emacs-w3m を動作させるこ
とができます。

`Emacs 21.1 以上'
     追加のパッケージは不要です。

`XEmacs 21.x'
     第一に、emacs-w3m は XEmacs 21.4.17 以上、および XEmacs 21.5-b19
     以上だけをサポートすることに注意してください。加えて、
     `timer-funcs.el' を含む最新の xemacs-base パッケージをインストー
     ルしておく必要があります。

     APEL パッケージと `gifsicle' プログラムが必要です。さらに、
     `mailto' url を解析するための `rfc2368.el' モジュールをインストー
     ルしておいた方が良いでしょう (*Note Other Requirements::)。

`Emacs 20.x, Emacs 19.34 (含 Mule 2.3)'
     これらの Emacs を emacs-w3m はサポートしません。

GNU Emacs の開発版を使っているのであれば、おそらく CVS 版の emacs-w3m
を使わなければならないでしょう。その場合には、メーリングリストに参加す
ることを強く勧めます (*Note Mailing List::)。



File: emacs-w3m-ja.info, Node: You Need w3m, Next: Other Requirements, Prev: Required Emacs Version, Up: Getting Started

w3m を使います: emacs-w3m が速いわけ
====================================

Emacs-w3m は外部コマンド w3m を、ウェブコンテンツを取得するためのバッ
クエンドとして、または HTML の描画エンジンとして使用します。非同期動作
によって高速な Emacs ウェブブラウザを実現することができたのは w3m のお
かげです。

あなたは最新の w3m をインストールしなければなりません。それは以下の場
所で取得できます:

`http://prdownloads.sourceforge.net/w3m/'



File: emacs-w3m-ja.info, Node: Other Requirements, Next: Installing Emacs-w3m, Prev: You Need w3m, Up: Getting Started

Emacs-w3m を動作させるのに必要なもの
====================================

使用している Emacs のバージョンによっては、サードパーティのパッケージ
が必要になることがあります。この項では、それらを見つけてインストールす
るための資料を提供します。

`APEL'
     XEmacs に不可欠です。Emacs-w3m を構築する前に APEL をインストール
     しなければなりません。APEL は以下の場所にあります:

     `http://kanji.zinbun.kyoto-u.ac.jp/~tomo/lemi/dist/apel/'

     APEL XEmacs パッケージ (SUMO に含まれています) のバージョン 1.32
     より古いものは使えないことに注意してください。もしすでにそのよう
     な版のパッケージがインストールされているならば、それを更新するか、
     または上記のリンクで示した APEL で置き換えるために、以下の命令を
     使ってください (新規に APEL をインストールする場合も同じ命令を使
     うことができます):

          % rm -fr /usr/local/lib/xemacs/xemacs-packages/lisp/apel
          % cd apel-10.7
          % make install-package XEMACS=xemacs-21.4.x\
            PACKAGEDIR=/usr/local/lib/xemacs/xemacs-packages

`gifsicle'
     XEmacs に不可欠です。すべての XEmacs 21.x には、オプティマイズさ
     れたアニメーション gif が正常に表示されなかったり、ある種のインター
     レース gif を表示しようとするとクラッシュしてしまう既知のバグがあ
     ります。Emacs-w3m は gif データを XEmacs 21.x で扱える形式に変換
     するために、`gifsicle' プログラムを使います。これは次の場所から入
     手することができます:

     `http://www.lcdf.org/gifsicle/'

`ImageMagick'
     ImageMagick パッケージに含まれている `convert' プログラムがあれば、
     emacs-w3m は画像サイズの変更や `favicon' 画像を Emacs が扱えるフォー
     マットに変換するためにそれを使います。Emacs-w3m は ImageMagick が
     無くても動作するでしょうが、インストールすることによってあなたの
     ネットサーフィンが豊かなものになるでしょう。ImageMagick パッケー
     ジは、以下の場所から手に入れることができます:

     `ftp://ftp.imagemagick.org/pub/ImageMagick/'

     `favicon' 画像を操作するために、バージョン 5.4.0-5 以降のものを使
     うことを推奨します。以前のバージョンも動くかもしれませんが、それ
     らは完全にチェックされていません。

`FLIM'
     `Shimbun' ライブラリを使うためには FLIM パッケージが必要です。
     `Shimbun' ライブラリはウェブ上の新聞を読むための道具類のコレクショ
     ンで、Gnus、Mew または Wanderlust とともに使うことができます。
     *Note Shimbun Library::.

     使っている Emacs のバージョンにかかわらず、FLIM パッケージには
     APEL パッケージが必要であることに注意してください。したがって
     `shimbun' ライブラリを使うには、APEL と FLIM の両方をインストール
     しなければなりません。FLIM パッケージは以下の場所にあります:

     `http://kanji.zinbun.kyoto-u.ac.jp/~tomo/lemi/dist/flim/flim-1.14/'

`Mule-UCS'
     XEmacs 21.4 を使うか、または Emacs 21 を使って中国語、日本語、韓
     国語などのテキストを読む必要があるならば、emacs-w3m が (Unicode
     システムの代表的な coding system である) UTF-8 でエンコードされた
     ページを表示できるようにするために、Mule-UCS Emacs Lisp パッケー
     ジをインストールすることを勧めます。Emacs 21 が Unicode システム
     を部分的に (例えばラテン・テキストのために) サポートし、Emacs 22
     以上がそれを完全にサポートすることに注意してください。Mule-UCS
     Emacs Lisp パッケージは以下の場所から取得してください:

     `http://unit.aist.go.jp/itri/itri-gist/ftp.m17n.org/pub/mule/Mule-UCS/test/Mule-UCS-current.tar.gz'

     (Mule-UCS の公式ページは近い将来 `http://www.meadowy.org/' でオー
     プンします。)

     Emacs-21.2 で利用する場合は、Mule-UCS に このパッチ
     (http://www.m17n.org/mlarchive/mule/200203/msg00000.html) を適用
     したほうがいいでしょう。

     XEmacs 21.4 ユーザ向けには、ここにコンパイル済みのパッケージがあ
     ります:

     `ftp://ftp.xemacs.org/xemacs/packages/mule-ucs-1.14-pkg.tar.gz'

     (Mule SUMO に含まれているので、加えてさらにこれをインストールする
     必要はありません。)

`codepage-ex'
     ヨーロッパのいくつかの web サイトは、`charset=ISO-8859-1' をテキ
     ストのエンコードに指定しているのにもかかわらず、実際には
     `windows-1252' を使います。それらをデコードするのに `iso-8859-1'
     は不十分なので、emacs-w3m は利用可能なら `windows-1252' を
     `iso-8859-1' のスーパーセットとして使用します。Emacs 22 から
     `windows-1252' coding system は組み込まれていますが、
     `codepage-ex' というモジュールを使うことによって、Emacs 21 でもそ
     れを使えるようにすることができます。以下のページを参照してくださ
     い。

     `http://nijino.homelinux.net/emacs/codepage-ex.html'

`rfc2368.el'
     XEmacs 上で動作させる emacs-w3m が、適切に `mailto' url を解析で
     きるようにしたい場合にインストールしてください。XEmacs で使うこと
     ができる `rfc2368.el' モジュールは、emacs-w3m の配布の `attic' ディ
     レクトリにあります。インストールするには `rfc2368.el' ファイルを
     `load-path' が通っているディレクトリにコピーして、以下のコマンド
     を実行してください:

          % xemacs -batch -vanilla -f batch-byte-compile rfc2368.el



File: emacs-w3m-ja.info, Node: Installing Emacs-w3m, Next: Non-UNIX-like systems, Prev: Other Requirements, Up: Getting Started

Emacs-w3m をインストールする
============================

Emacs-w3m の取得に関しては公式ページ `http://emacs-w3m.namazu.org/' を
参照してください。すべて準備できましたか?  では始めましょう。

非 UNIX 系のシステム (`configure' を実行できないか `make' コマンドが無
い、何らかのシステム) に emacs-w3m をインストールするには、この項を飛
ばして次の項 *Note Non-UNIX-like systems:: に行ってください。

 1. 最初に、配布された emacs-w3m の tarball を以下のように適当な場所で展開して、先頭のディレクトリに入ってください:

          % tar zxf emacs-w3m-1.4.632.tar.gz
          % cd emacs-w3m-1.4.632

     Emacs-w3m を CVS で取得したのならば、`configure' スクリプトを生成
     するために (引数無しで) `autoconf' を実行しなければなりません。

  2. `configure' スクリプトを実行します。

          % ./configure

     *Gnus ユーザへの重要なお知らせ*:

     複数のバージョンの Gnus がインストールされている場合 (リリース版
     と開発版の Gnus があるかもしれません) は、`load-path' にあなたが
     使うバージョンがインストールされているディレクトリ (`gnus.elc' ファ
     イルを調べましょう) を含むようにしてください。以下のように
     `--with-addpath' オプションを使うことによって、これを確実に行なう
     ことができます:

          % ./configure --with-addpath=/usr/local/share/emacs/site-lisp/gnus

     APEL、FLIM または他の何かを、デフォルトの `load-path' 以外の標準
     ではないディレクトリにインストールしてある場合は、以下のように
     `--with-addpath' オプションを使ってそれらを指定しなければなりませ
     ん (さらに、それに `:' で分けられた Gnus のディレクトリを含めても
     構いません):

          % ./configure --with-addpath=/opt/share/apel:/opt/share/flim

     デフォルトではインストーラ (つまり `make install') は gzip によっ
     てインストールされる Lisp のソースファイルと info ファイルを圧縮
     します。もしそれらのファイルが圧縮されることを望まないのであれば、
     configure オプションの {--without-compress-install} を使ってくだ
     さい。

 3. 単に `make' と `make install' を実行します。XEmacs を使っている場合は、さらに次の段落も見てください。

          % make
          % make install

     すべての Lisp ファイルと info ファイルが適切なディレクトリにイン
     ストールされるでしょう。

     さて、あなたはどんなファイルがどこに行くか分かりますか?  それを前
     もって知るためには、これを使ってください:

          % make what-where

     画像を表示することができる Emacs または XEmacs を使っているならば、
     アイコン画像のファイルをインストールした方が良いでしょう。それを
     行なうには:

          % make install-icons

     または

          % make install-icons30

     後者はちょっと大きなアイコン画像を使うためのものです。

 4. 以下のように `make install' の代わりに `makeinstall-package' を使うことによって、emacs-w3m を XEmacs パッケー
     ジとしてインストールすることもできます:

          % make
          % make install-package

     この場合 `make install-icons' または `make install-icons30' を実
     行する必要はありません。

     パッケージ・ディレクトリを指定するには二つの方法があります:

      * `configure' オプションの `--with-packagedir=' を使います。例です:

               % ./configure --with-packagedir=/opt/xemacs/xemacs-packages
               % make what-where
               % make
               % make install-package

      * 変数 `PACKAGEDIR' を使います。例です:      % ./configure
               % make what-where PACKAGEDIR=/opt/xemacs/xemacs-packages
               % make
               % make install-package PACKAGEDIR=/opt/xemacs/xemacs-packages



File: emacs-w3m-ja.info, Node: Non-UNIX-like systems, Next: Minimal Settings, Prev: Installing Emacs-w3m, Up: Getting Started

非 UNIX 系環境でのインストール
==============================

あなたのシステムで `configure' スクリプトを実行することができないか、
`make' コマンドが利用できない場合は、以下の文句を唱えてください。

     % emacs -batch -q -no-site-file -l w3mhack.el NONE -f w3mhack-nonunix-install

APEL、FLIM (または他の何か) が普通の場所にインストールされていないと、
インストーラはそれらを無視してしまうでしょう。そんな場合は、以下に示す
ように、それらの場所をインストーラに告げる必要があります:

     % emacs -batch -q -no-site-file -l w3mhack.el //c/share/apel://c/share/flim -f w3mhack-nonunix-install



File: emacs-w3m-ja.info, Node: Minimal Settings, Prev: Non-UNIX-like systems, Up: Getting Started

設定しなければならない最低限のもの
==================================

この項では基本的な emacs-w3m の設定のいくつかを説明します。きめ細かな
設定をしたいならば、たくさんのカスタマイズ可能な変数を *Note
Customizable Variables:: で見つけることができるでしょう。

`Autoloads'
     Emacs-w3m を XEmacs パッケージとしてインストール (*Note
     Installing Emacs-w3m::) してあれば `w3m/auto-autoloads.el' ファイ
     ルが自動ロード (autoload) の面倒を見てくれるので、これは必要あり
     ません。

     それ以外のすべての場合、以下の行を `~/.emacs' ファイルに入れてく
     ださい:

          (require 'w3m-load)

`Startup File'
     Emacs-w3m のいろんな変数をいじる必要があるときは、`~/.emacs-w3m'
     ファイル (これは `w3m-init-file' という変数のデフォルト値です) の
     利用を推奨します。このファイルは `~/.emacs' と似ていますが、こち
     らは emacs-w3m が起動するときに読み込まれます。`w3m-command' など
     幾つかのオプションは、このファイルでは変更できないことに注意して
     ください。

`Proxy Gateway'
     あなたが防火壁 (firewall) の中から proxy ゲートウェイを通してイン
     ターネットに接続している場合は、それを使うように w3m に指示する必
     要があります。

     これにはいくつかの方法があります。一つは環境変数 `http_proxy' を
     shell 上で、こんなふうにグローバルに設定することです:

          setenv http_proxy http://proxy.hogege.com:8000/

     他に、変数 `w3m-command-arguments' をカスタマイズして、`-o' およ
     び `http_proxy=http://PROXY_SERVER_NAME:PORT/' を追加する方法があ
     ります。これは `~/.emacs-w3m' ファイルで以下のように行なうことも
     できます。

          (setq w3m-command-arguments
                (nconc w3m-command-arguments
                       '("-o" "http_proxy=http://proxy.hogege.com:8000/")))

     Proxy ゲートウェイを通すべきではないホスト (イントラネットのサイ
     トなど) を指定するには、環境変数 `no_proxy' (`no-proxy' ではない
     ことにご注意) にコンマで区分けされたホスト名のリストを設定してく
     ださい。あるいは以下のように、変数 `w3m-no-proxy-domains' にドメ
     イン名 (ホスト名ではない) のリストを設定することもできます:

          (setq w3m-no-proxy-domains '("local.com" "neighbor.com"))

     `no_proxy' ホストの設定にどうやって正規表現を使うかの説明は、変数
     `w3m-command-arguments-alist' のドキュメントを見てください。



File: emacs-w3m-ja.info, Node: Basic Usage, Next: Pretty Good Features, Prev: Getting Started, Up: Top

基本的な使い方
**************

* Menu:

* Browsing Web Pages::          ネットサーフィンしよう!
* Inline Images::               画像表示を ON/OFF する
* Tracing History::             時空を遡る
* Managing Bookmarks::          ぼくの/わたしのお気に入り
* Using Tabs::                  みんなタブが好きだよね
* Working with buffers::        バッファを作る/消す/移動する
* Downloading::                 ファイルをダウンロードする
* Submitting Forms::            HTML フォームに記入する
* HTML File Information::       ウェブページ作りとハックのお手伝い



File: emacs-w3m-ja.info, Node: Browsing Web Pages, Next: Inline Images, Prev: Basic Usage, Up: Basic Usage

ネットサーフィンしよう!
=======================

すべてのウェブ・ブラウズの操作は、キーで行うことができます。Emacs-w3m
はデフォルトで `Lynx-like' キーマップ (*Note Key Binding::) というもの
を使います。もちろんマウスを使うこともできます。

* Menu:

* Key Binding::                 二つのキーバインド
* Launching and Jumping::       とにかく動かしてみよう
* Moving in a page::            ページ内を飛びまわる
* Moving over pages::           ページ間を渡り歩く
* Browsing With Mouse Operations:: マウスを使ってサーフィン
* Going back to daily hacking and/or daily writing:: 普段の生活に戻るには



File: emacs-w3m-ja.info, Node: Key Binding, Next: Launching and Jumping, Prev: Browsing Web Pages, Up: Browsing Web Pages

二つのキーバインド
------------------

Emacs-w3m は Emacs ウェブ・ブラウザの歴史の中では後発のブラウザなので、
ユーザが新しいウェブ・ブラウザに容易に慣れることができるようにするため
に、二種類のキーバインドを用意しました。一つは `Lynx-like' キーマップ
と呼ばれ、もう一つは `Info-like' キーマップです。これらの名前から、そ
れらが何を意味するかは分かりますね?  前者はテキスト版のウェブ・ブラウ
ザである `Lynx' のものに似ています。そして後者は GNU の公式ドキュメン
ト・ブラウザである `Info' のものに似ています。デフォルトでは
`Lynx-like' キーマップが使われます。`Info-like' キーマップを使いたいの
ならば、

     M-x customize-option <RET> w3m-key-binding <RET>

とタイプして `Info-like' キーマップを選び、変更をセーブしてください。
あるいは以下の断片を `~/.emacs' ファイル (`~/.emacs-w3m.el' ファイルで
はありません) に加えてください:

     (setq w3m-key-binding 'info)

キーバインドを一つずつ変更するには、`~/.emacs-w3m.el' ファイルで以下の
ように `w3m-mode-map' 変数をいじってください:

     (define-key w3m-mode-map [up] 'previous-line)
     (define-key w3m-mode-map [down] 'next-line)
     (define-key w3m-mode-map [left] 'backward-char)
     (define-key w3m-mode-map [right] 'forward-char)



File: emacs-w3m-ja.info, Node: Launching and Jumping, Next: Moving in a page, Prev: Key Binding, Up: Browsing Web Pages

とにかく動かしてみよう
----------------------

以下に挙げる三つの違うコマンドを使って emacs-w3m を起動することができ
ます。それらのコマンドの一つを試してください。ウェブページが "*w3m*"
という名前の Emacs のバッファ (emacs-w3m のバッファのこと) に表示され
ます。おそらく気付くでしょうけれども、emacs-w3m のバッファのメジャーモー
ドは `w3m-mode' です。他にマイナーモード (*Note Managing Bookmarks::)
もあります。

ここでは、それらのコマンドの最も基本的な使い方だけを説明します。それら
についてもっと詳しく知りたい場合は、*Note Emacs-w3m Functions:: を参照
してください。また、emacs-w3m の動作をカスタマイズするために使うことが
できる変数群を、*Note Customizable Variables:: で参照してください。

`w3m'
     Emacs-w3m を起動して、`w3m-home-page' という変数で指定されたホー
     ムページを表示します。`w3m-home-page' のデフォルトの値は "about:"
     です。Emacs-w3m を起動したときに毎回 URL を入力できるようにしたい
     場合は、変数 `w3m-quick-start' の値を `nil' にしてください (*Note
     Customizable Variables::)。

     これは Emacs を起動するときに引数として使うこともできます。例です:

          % emacs -f w3m

     URL を指定して、このように使うこともできます:

          % emacs -f w3m http://emacs-w3m.namazu.org/

`w3m-find-file'
     ローカルファイル名をミニバッファで入力して、それを emacs-w3m で表
     示します。

`w3m-browse-url'
     URL をミニバッファで入力して、それを emacs-w3m で表示します。この
     コマンドは、どちらかと言えば他のアプリケーションプログラムから
     emacs-w3m を起動するために用意されています。

あなたがすでに Emacs のユーザならば、emacs-w3m のバッファの中で移動す
るのに苦労は無いでしょう。多くの標準のキーがそのまま使えるのですから。
例えば `C-n'、`C-v' それに `C-s' は emacs-w3m バッファで有効なキーです
(これらは一行下降、一ページ送り、または後方単語検索として共通に使われ
ます)。

リンクをたどるには `<RET>' キーを使ってください。それにはポイントをリ
ンクの場所に移動しなければなりません。リンクは普通のテキストとは違って
表示されているので、簡単に見分けることができます。それらは下線付き、ま
たは違う色になっているはずです。それらの見栄えは `w3m-anchor' という
フェースによって決まります (*Note Customizable Variables::)。

`<RET>'
`<right>' (Lynx-like キーマップのみ)
     現在位置のリンクが指し示すページを表示します
     (`w3m-view-this-url')。

     このコマンドの振る舞いは、厳密には現在位置のリンクの性質によって、
     または接頭引数を与えるかどうかに依存します。詳細は *Note
     Emacs-w3m Functions:: を参照してください。

前述のように、変数 `w3m-quick-start' の値を `nil' に設定するこ
とによって、`M-x w3m' コマンドを使ったときに URL を指定すること
が可能です。Emacs-w3m のバッファでは、入力した新しい URL のページに行く
ための一般的な方法が、さらに以下の二つあります。

`<RET>'
     Emacs-w3m のバッファにおいて、ヘッダラインに表示されている URL の
     位置にポイントを移動させてから `<RET>' を叩くことによって、ミニバッ
     ファから URL を入力して、そのページを表示させることができます。
     Mozilla などの GUI ベースのウェブブラウザに慣れている人にとって、
     この機能はおなじみですよね。これに関する詳しい説明が *Note
     Emacs-w3m Functions:: で見つかるはずです (`w3m-view-this-url')。

`g'
     ミニバッファで URL の入力をうながして、emacs-w3m にそのページを表
     示させることができます (ポイントの位置とは無関係です)。このキーの
     割り当ては、すでに Gnus や Mew を利用している人にはおなじみでしょ
     う (`w3m-goto-url')。

`G'
     ミニバッファで URL の入力をうながして、それを新しいセッションで表示しま
     す。これはちょうど `g' (<M-x w3m-goto-url>) のように動作しま
     すが、新しいセッションを開くところが違います。文字端末で emacs-w3m を使っ
     ているのでない限り、新しいセッションを開くということは、そのページを新し
     いタブで表示することを意味します。タブについてのもっと詳しいことは、
     *Note Using Tabs:: を参照してください (`w3m-goto-url-new-session')。

`c' (Lynx-like キーマップ)
`y' (Info-like キーマップ)
     表示しているページの URL をエコーエリアに表示するとともに、
     `kill-ring' に URL を挿入します (`w3m-print-current-url')。

`u' (Lynx-like キーマップ)
`Y' (Info-like キーマップ)
     現在位置のリンクが指し示す対象の URL をエコーエリアに表示するとともに、
     `kill-ring' に URL を挿入します (`w3m-print-this-url')。

さて、あなたが読んでいるページが今日の時事ニュースかだれかの日記だった
ら、それを取り込んだ後で新しい内容で置き換えられているかもしれません。
次のコマンドを使うと、同じページの最新の内容に更新することができます。
(このコマンドは、ページが壊れているように見える場合に、全画面の再描画
を強制させるためにも役立てることができます。)

`R'
`C-S-l' (Info-like キーマップのみ)
     ページを読み込み直します (`w3m-reload-this-page')。



File: emacs-w3m-ja.info, Node: Moving in a page, Next: Moving over pages, Prev: Launching and Jumping, Up: Browsing Web Pages

ページ内を飛びまわる
--------------------

Emacs で移動用に割り当てられている馴染み深いキーがウェブページの閲覧中
に使えることは、おそらくすでにあなたを魅了しているでしょう。信じてもら
えないかもしれませんが、もっとあるのです!  私たちはあなたの時間を大切
にしたいので、ポイントの移動、ページのスクロール、あるいはとても速いや
り方でリンクを見つけるためのキーを追加しました。それらをマスターすれば、
それらがどんなに便利かを分かってもらえるでしょう。

Emacs の標準キーバインドに比べて `w3m-mode' では、より短いキーストロー
クでスクロールコマンド群を呼び出せるようにキーが割り当てられています。
ウェブページ内でテキストを入力できる個所はかなり特別なので (*Note
Submitting Forms::)、たいていのキーは特別な意味を持っていて、そこでは
`self-insert-command' に割り当てられていません。

`<SPC>'
     下に向かってスクロールします。`more' や `less' コマンド、あるいは
     Emacs の `view-mode' を使ったことがあれば、覚えるまでもないキーで
     すよね (`w3m-scroll-up-or-next-url')。

`<DEL>'
`b'
`<backspace>'
`S-<SPC>'
`C-?'
     上に向かってスクロールします。`less' コマンドや Emacs の
     `view-mode' に馴れ親しんでいるあなたの手は、自然にこのキーを叩く
     でしょう (`w3m-scroll-down-or-previous-url')。

`>'
     左にスクロールします。スクロールの量は
     `w3m-horizontal-scroll-columns' で与え、デフォルト値は 10 です
     (`w3m-scroll-left')。

`<'
     右にスクロールします。スクロールの量は
     `w3m-horizontal-scroll-columns' で与え、デフォルト値は 10 です
     (`w3m-scroll-right')。

`.' (Lynx-like キーマップ)
`S-<left>' (Info-like キーマップ)
     左にシフトします (小刻みな水平スクロール)。シフトの量は
     `w3m-horizontal-shift-columns' で与え、デフォルト値は 2 です
     (`w3m-shift-left')。

`,' (Lynx-like キーマップ)
`S-<right>' (Info-like キーマップ)
     右にシフトします (小刻みに水平スクロールです)。シフトの量は
     `w3m-horizontal-shift-columns' で与え、デフォルト値は 2 です
     (`w3m-shift-right')。

`M-l'
     現在ポイントがある位置のテキストが、水平方向に関して中心になるよ
     うにスクロールします (`w3m-horizontal-recenter')。

`w3m-mode' メジャーモードでは、いろいろな種類の移動コマンドが定義され
ています。すなわち、リンク、フォーム、それに画像 (それが表示されていて
もいなくても) です。

簡単な例を挙げてみます。広く知られている Google 検索エンジンで単語を調
べたいのだとしましょう。ステップ１: emacs-w3m で
`http://www.google.com' を開きます。ステップ２: いったんページが読み込
まれたら `]' を叩いてください。ぐわしっ! (1) (*Note Moving in a
page-Footnotes::) ポイントがページの最初の入力フォームに移動しましたね。
今や `<RET>' を叩いてそこに何かを入力して、`C-c C-c' で送
ることができます。このコマンド無しでは、そのページに `C-n' や
`C-f' などを打ち込んで移動しなければならなくて、まったく骨折りなこ
とだったでしょう。

`<TAB>'
`<down>' (Lynx-like キーマップのみ)
     次のリンク (emacs-w3m の用語では "アンカー") へポイントを移動しま
     す。より厳密には、順方向で最も近いアンカーへ移動します。

`M-<TAB>'
`S-<TAB>'
`<backtab>'
`<up>' (Lynx-like キーマップのみ)
     前のアンカーへポイントを移動します。より厳密には、逆方向で最も近
     いアンカーへ移動します (`w3m-previous-anchor')。

`]'
     次のフォームへポイントを移動します。より厳密には、順方向で最も近
     いフォームへ移動します (`w3m-next-form')。

`['
     前のフォームへポイントを移動します。より厳密には、逆方向で最も近
     いフォームへ移動します (`w3m-previous-form')。

`}'
     次の画像へポイントを移動します。より厳密には、順方向で最も近い画
     像へ移動します (`w3m-next-image')。

`{'
     前の画像へポイントを移動します。より厳密には、逆方向で最も近い画
     像へ移動します (`w3m-previous-image')。


File: emacs-w3m-ja.info  Node: Moving in a page-Footnotes, Up: Moving in a page

(1) 普通そんな音はしないけれどね。英語版の Tadaa! は漫画などで使われる
擬音で、その状況に応じていろいろに訳されます。



File: emacs-w3m-ja.info, Node: Moving over pages, Next: Browsing With Mouse Operations, Prev: Moving in a page, Up: Browsing Web Pages

ページ間を渡り歩く
------------------

この項ではページからページに移動するやり方を説明します。リンクをたどっ
たり URL を入力する方法はここにはありません (それら二つの方法は *Note
Launching and Jumping:: で説明されています)。

ここには、以前に訪問したページの履歴を後ろに、および前に移動する (他の
ブラウザでは「戻る」「進む」としておなじみの) コマンドと、仮にもブラウ
ザたるものが義務として提供すべき「ホームページへ移動する」機能がありま
す。あらかじめ *Note Tracing History:: の項を読んでおいた方が、たぶん
理解しやすいでしょう。

`B' (Lynx-like キーマップ)
`<left>' (Lynx-like キーマップ)
`l' (Info-like キーマップ)
`p' (Info-like キーマップ)
     以前に訪問したページの履歴を１ページ戻ります
     (`w3m-view-previous-page')。数の引数 N が与えられると N ページ戻
     ります。これは過去に戻るためのお勧めの方法です。

`N' (Lynx-like キーマップ)
`n' (Info-like キーマップ)
     以前に訪問したページの履歴を１ページ進みます
     (`w3m-view-next-page')。もちろん `B' (`Info-like' キーマップの場
     合は `l') で履歴を戻った後でなければ働きません。数の引数 N が与え
     られると N ページ進みます。このコマンドは、まさに back to the
     future を実現します!

`H'
     ホームページへ移動します (`w3m-gohome')。ホームページの URL は
     `w3m-home-page' という変数で指定します (*Note Customizable
     Variables::)。`w3m-home-page' のデフォルトの値は "about:" です。

以下のコマンドは、他には無い emacs-w3m の特長です。私たちはそれらの特
許を得ることができました。従って、他のいかなる場所でも見つからないでしょ
う。そのため、今日それらを使うことを学ばなければなりません! (真に受け
ないでくださいね。ただの冗談ですから。)

`^'
`u' (Info-like キーマップのみ)
     現在表示されているページの親ディレクトリへの移動を試みます。例え
     ば、"http://foo/bar/baz" が表示されている場合は "http://foo/bar/"
     に移動しようとします。この機能は次の観察に基づいて実装されました:
     ウェブブラウザのユーザは、しばしば一段階上のディレクトリに移動し
     なければなりません。彼らが捜している情報が、現在のページに表示さ
     れないから (それが削除されたので、あるいは検索エンジンが間違って
     いるページに連れて行ったため) です。

     他のウェブブラウザを使う場合、一般には、URL から `<DEL>' キー等を
     複数回使って、手作業で末尾のコンポーネントを削除する手間が必要で
     す。Emacs-w3m では、この操作を `^' のたった一押し! で行なうことが
     できます。

     また、"2 ^" と数字を付けてコマンドを実行すると、その数字の分だけ
     親のディレクトリに移動します。"0 ^" と "0" を付けて実行するとその
     サイトの最上位まで移動します。

`<SPC>'
     現在のポイント位置がバッファの末尾付近にあり、下方向にスクロール
     できない場合に `<SPC>' を押すと「次」のページへ移動します
     (`w3m-scroll-up-or-next-url')。ここで「次のページ」とは、現在読ん
     でいるページのヘッダ内の特別な "next" フィールドが指し示している
     ページのことです。この機能は訪問したページの履歴とは関係ありませ
     ん。

     一度に巨大なコンテンツを転送するのを待つことが、ユーザにとって快
     適ではないなどの理由で、いくつかのウェブサイトがそれらのコンテン
     ツを小さな複数のページに分割していることに、おそらく気付いている
     でしょう。例えば、検索エンジンの検索結果は、しばしばそのように現
     われます。そんなサイトでは、ユーザはすべての情報にアクセスするた
     めに、しばしば一つのページから次のページに、手動でリンクをたどら
     なければなりません。

     Emacs-w3m は、可能であればこのリンクを明示的にたどる操作をスクロー
     ル操作と統合して、複数のページに分割されて提供されるコンテンツを、
     できれば一枚のウェブページとして閲覧できるよう試みます。

     それはこうして働きます: そのようなウェブサイトでは、分割したウェ
     ブページ間のつながりをページのヘッダ内の "next"、"prev" あるいは
     "previous" フィールドに記載してある場合があります。Emacs-w3m は何
     をたどるかを知るために、このフィールドを利用しています。

     二つの操作 (リンクをたどる + スクロール) が Emacs-w3m 上でどのよ
     うに統合されているのかを、再び Google を例に説明しましょう。
     `http://www.google.com' を開き、ある単語を検索します。もし、あま
     りにもありふれた単語 (例えば「牛丼」) を検索すると、大量の検索結
     果を得ることになるでしょう。Google は、その基準を使ってソートした
     検索結果を複数のウェブページに分割した上で、まず最初のページを返
     します。`<SPC>' を使って最初のページをスクロールさせながら眺めて
     ください。そして、そのページの最後がそのウィンドウで見えるまで、
     スクロールし続けてください。そこでは、あなたをびっくりさせるしか
     けが待っています。Emacs-w3m 以外のブラウザを使って残りの検索結果
     を見たいと思ったならば、

          Gooooooogle

     の下にならぶ数字のどれか

          1 2 3 4 5 6 7 8...

     をクリックする必要があります。しかし emacs-w3m ならば、単に
     `<SPC>' を押すというスクロールと同じ操作で、リンクをたどることが
     できるのです。

`<DEL>'
`b'
`<backspace>'
`S-<SPC>'
`C-?'
     ポイント位置がバッファの先頭付近にあり、上方向にスクロールできな
     い場合に `<DEL>' を押すと、「前」のページへ移動します
     (`w3m-scroll-down-or-previous-url')。ここで「前」のページとは、現
     在表示されているページのヘッダ内の "prev" あるいは "previous" フィー
     ルドに指定されているページのことです。この機能は訪問したページの
     履歴とは関係ありません。`<SPC>' (`w3m-scroll-up-or-next-url') と
     同様、ただし逆の動きになります。



File: emacs-w3m-ja.info, Node: Browsing With Mouse Operations, Next: Going back to daily hacking and/or daily writing, Prev: Moving over pages, Up: Browsing Web Pages

マウスを使ってサーフィン
------------------------

Emacs-w3m の開発者達は、Emacs ギーク (1) (*Note Browsing With Mouse
Operations-Footnotes::) でない普通の人にも emacs-w3m を使ってもらえる
ように、少し骨を折りました。例えば URL やフォームのテキストの入力を除
くほとんどのウェブブラウズ操作を、マウスだけで行なうことができます。そ
れでもなお修飾キーとしてシフトキーが必要になる場合があることに注意して
ください。Emacs-w3m の開発者がみんな Emacs ギークなので...

ウェブ閲覧の最初の基本となる「リンクをたどる操作」には `mouse-2' を使っ
てください。Emacs 22.1 以上では、`mouse-1' でも
`mouse-1-click-follows-link' の値に応じた、リンクをたどる操作を行なう
ことができます。

`mouse-2'
     マウスカーソルの下にあるリンクをたどります
     (`w3m-mouse-view-this-url')。

`S-<mouse-2>'
     新しいセッション (*Note Tracing History::) のもとでマウスカーソル
     の下にあるリンクをたどります
     (`w3m-mouse-view-this-url-new-session')。

Emacs-w3m のスクロールバー、メニュー及びツールバーは、マウスを使う場合
に役立ちます。ただし Emacs がそれらをサポートしていることが必要で、か
つそれらを有効にしていなければなりません。言うまでもないですが、スクロー
ルバーを動かして表示をスクロールさせることができます。Emacs フレームの
一番上にある「w3m」メニューから、この info ドキュメントで紹介している
emacs-w3m の様々な機能を呼び出すことができます。主要な機能についてはメ
ニューアイテムを選ぶまでもないことに注意してください。代わりにツール
バー・アイコンを使うことができます。

タブ (*Note Using Tabs::) を使って emacs-w3m のバッファを切り替えるに
は、ウィンドウのてっぺんの行を `mouse-2' で直接クリックするか、または
「w3m」メニューの一つおいて隣にある「Tab」メニューから一つを選んでくだ
さい。


File: emacs-w3m-ja.info  Node: Browsing With Mouse Operations-Footnotes, Up: Browsing With Mouse Operations

(1) 英語版の Info では Emacs otaku



File: emacs-w3m-ja.info, Node: Going back to daily hacking and/or daily writing, Prev: Browsing With Mouse Operations, Up: Browsing Web Pages

普段の生活に戻るには
--------------------

思い出してください。おそらくあなたはウェブを見るために Emacs を始めた
のではありません。エディタの内蔵インタープリタを scheme に置き換えたり、
ソフトウェアの info ドキュメントを作成したり、ソフトウェアの特許に対す
る自分の考えを印刷したり...するためだったのではありませんか?  Emacs を
使っていた間に、仕事のためにウェブを見る必要に迫られ、しかしたまたま
Emacs から離れずにウェブを見ることができてしまったのです。

さぁ、本来の作業に戻る時が来ました。あなたががんばらないと世界は変りま
せん!  すぐにまたウェブを閲覧する必要があるかもしれないなら `q' を、し
ばらく emacs-w3m に戻ってくるつもりがないなら `Q' を使ってください。

`q'
     Emacs-w3m のウィンドウと閉じて、他のバッファを選択します
     (`w3m-close-window')。

`Q'
     Arrived URLs (閲覧履歴, *Note Tracing History:: 参照) のリストと
     クッキー (*Note Cookie Variables::) をディスクに保存して、本当に
     emacs-w3m を終了します (`w3m-quit')。



File: emacs-w3m-ja.info, Node: Inline Images, Next: Tracing History, Prev: Browsing Web Pages, Up: Basic Usage

画像表示を ON/OFF する
======================

あなたが使っているバージョンの Emacs がバッファに画像を表示することが
できるならば、あたかも Mozilla のような「グラフィカル」ブラウザのよう
に、emacs-w3m はウェブページにそれらを表示することができます。下記のコ
マンドのどれかを使おうとする前に、あなたの Emacs が正しく画像表示に使
えることを確かめてください (*Note Required Emacs Version::)。

現在のバッファにおける画像の表示を切り替えるには `T' (`Info-like' キー
マップの場合は `I') を使ってください。それによって emacs-w3m はサーバ
から画像を取ってきて、しかる後にそれらを「グラフィカル」ブラウザとして
そうなるであろうバッファの位置に表示します。もう一度キーを叩くと、画像
はバッファから消え去ります。

デフォルトでは emacs-w3m は画像を表示しませんが、その振る舞いを変更して
常に画像表示することを選ぶのは可能で、それには変
数 `w3m-default-display-inline-images' をカスタマイズして、その値
を `nil' から `t' に変更する必要があります。
*Note Customizable Variables::.

さらに emacs-w3m には、画像の拡大縮小、ファイルへのセーブ、または外部
ビューワで見る、といった気の利いた機能が付属しています。

`T' (Lynx-like キーマップ)
`I' (Info-like キーマップ)
     現在のバッファにあるすべてのインライン画像の表示をトグルで切り替
     えます (`w3m-toggle-inline-images')。`transient-mark-mode' が on
     で、かつ領域が設定されている場合に限って、その領域内にある画像だ
     けが on になります。

     注1: 初めて訪れたページで最初からインライン画像を表示するかどうか
     は、前述の通り変数 `w3m-default-display-inline-images' の値で制御
     されます (デフォルトは off です)。しかし、そのバッファを起点にし
     て訪れるバッファで画像を表示するかどうかは、
     `w3m-toggle-inline-images-permanently' が `nil' ではない値 (デフォ
     ルトは `t') だった場合は、そのバッファで画像を表示していたかどう
     かの最後の状態を継承します。
     `w3m-toggle-inline-images-permanently' が `nil' だったら、常に
     `w3m-default-display-inline-images' がそれを制御します。

     注2: このコマンドは領域を不活性にします。したがって、再び特定の領
     域にある画像だけを表示したいならば、もう一度その領域を設定しなけ
     ればなりません。

`t' (Lynx-like キーマップ)
`i' (Info-like キーマップ)
     カーソルの場所にある単一の画像の表示をトグルで切り替えます
     (`w3m-toggle-inline-image')。`transient-mark-mode' が on で、かつ
     領域が設定されている場合に限って、その領域内にある画像だけが on
     になります。`Info-like' キーマップについては、もし Emacs が画像表
     示をサポートしないならば、このキーは外部ビューワを起動するコマン
     ド (`w3m-view-image') にバインドされます。

`M-S-t' (Lynx-like キーマップ)
`M-S-i' (Info-like キーマップ)
     現在のバッファにあるすべてのインライン画像の表示を取り止めます。
     (`w3m-turnoff-inline-images')。

`I' (Lynx-like キーマップ)
     ポイントの下にある画像を外部ビューワで見ます (`w3m-view-image')。

`M-i'
     ポイントの下にある画像を外部ファイルにセーブします。デフォルトの名前はそ
     の画像の元の名前です。それ故に、ほとんどの場合
     に `M-i <RET>' は正しい名前で画像をセーブするでしょ
     う (`w3m-save-image')。

`M-['
     ポイントの下にある画像を縮小 (zoom out) します
     (`w3m-zoom-out-image')。

`M-]'
     ポイントの下にある画像を拡大 (zoom in) します
     (`w3m-zoom-in-image')。



File: emacs-w3m-ja.info, Node: Tracing History, Next: Managing Bookmarks, Prev: Inline Images, Up: Basic Usage

時空を遡る
==========

Emacs-w3m には、以前に訪問したすべてのページのリストを提示するための、
2つの方法があります。第一の方法は「emacs-w3m の履歴」(emacs-w3m
history) と単純に呼ばれるもので、そのセッション (注: そのバッファ内で
行なう操作とそれに対する反応) において訪問したページのリストを階層的に
提示します。すなわち、あるリンクをたどると、それまでのページは行き先の
「親」になります。それは、訪れたページの跡をたどったり、履歴が長くなっ
てしまった場合にどこから着たかを思い出すためには、たいへん都合の良いも
のです。

これは、GNU プロジェクトのホームページをちょっと訪ねた後における、この
機能の動作の例です:

     GNU's Not Unix! - the GNU Project and the Free Software Foundation (FSF)
       Philosophy of the GNU Project - Free Software Foundation (FSF)
         GNU Emacs - GNU Project - Free Software Foundation (FSF)
          Order from the Free Software Foundation (FSF)
       Links to Other Free Software Sites - GNU Project - Free Software Fo...
         EFF: Homepage

(実際には、この例は 72 桁に収まるように、少しばかり編集されています。
現実の emacs-w3m バッファでは URLs は切り詰められません。)

どの emacs-w3m バッファからでも `s' キー (`Info-like' キーマップの場合
は `o' キー) を使うことによって、このような履歴を提示させることが可能
です。

この履歴はバッファ・ローカル、すなわち、ある emacs-w3m のバッファに固
有のものであることに注意してください。でも emacs-w3m にはユニークな機
能があります: あなたが新しいページを訪問する場合、履歴は新しいバッファ
にコピーされます。その結果、それまでに訪れたページに今まで通りアクセス
することができます。これは、Mozilla などの、新しいバッファでは履歴が常
にゼロからスタートするブラウザとは異なります。

Emacs-w3m は単にあなたが訪れたページを記録するだけでなく、あなたがページ
の正確な同じ場所へ戻りたい場合に、それらのページの中の特定の位置を記録す
ることもできます。`C-c C-@' を押すと、カーソルの位置が履歴に登
録されます。以前に記録した位置へ移動するには、そのページを開い
た emacs-w3m のバッファで `C-c C-v' を押してください。

`s' (Lynx-like キーマップ)
`C-u s' (Lynx-like キーマップ)
`o' (Info-like キーマップ)
`C-u o' (Info-like キーマップ)
     このセッションにおいて訪問した URLs のリストを表示します。接頭引
     数付きで呼ばれると (後述)、代わりに arrived URLs を表示します
     (`w3m-history')。

`C-c C-@'
`C-c C-<SPC>'
     そのページの中のカーソルの位置を履歴に記録します。

`C-c C-v'
     現在表示しているページにおい
     て、`C-c C-@' (`w3m-history-store-position') で記憶した位
     置へ移動します。

もう一つの過去に訪れたページに関する情報を手に入れる方法は、「arrived
URLs」です。これはあなたが emacs-w3m で訪問した、最後の 500個! の URL
のリストです。リストは日付順で、最も最近のものを先頭に、それぞれのペー
ジの訪問時刻が表示されます。これは例です (info の表示が拡がり過ぎない
ように編集されています):

     Order from the Free Software Foundation (FSF)             22:53:25
     GNU Emacs - GNU Project - Free Software Foundation (FS    22:53:05
     Philosophy of the GNU Project - Free Software Foundati... 22:52:46
     Philosophy of the GNU Project - Free Software Foundati... 22:52:39
     EFF: Homepage                                             22:52:18
     Links to Other Free Software Sites - GNU Project - Fre... 22:52:07
     Links to Other Free Software Sites - GNU Project - Fre... 22:52:07
     GNU's Not Unix! - the GNU Project and the Free Softwar... 22:51:32
     Bookmarks                                                 22:51:02
     The DICT Development Group- upwards                       2003-01-08
     the monkey puzzle: new debian packages as an rss feed     2003-01-08
     new-debian-packages.rss                                   2003-01-07
     it's a miracle                                            2003-01-06

前のコマンドに接頭引数を渡す、すなわち `C-u s'
(`Info-like' キーマップの場合は `C-u o') を使うことによって、
この履歴を得ることができます。このページに表示される URLs の数はカスタマ
イズできます。変数 `w3m-keep-arrived-urls' を参照してください。それ
はデフォルトでは 500 を越えることはできません。*Note Customizable Variables::.

もちろん、すべての場合に、例に示されているすべての行はリンクです。その
リンクをたどることによって、通常のページを訪問していたらちょうどそうな
るように、以前に訪ねたどのページにも行くことができます。

*Note Moving over pages:: の項も見てください。そこでは「戻る」「進む」
などの機能に割り当てられた単純なキーで、履歴の中を移動するやり方を説明
しています。



File: emacs-w3m-ja.info, Node: Managing Bookmarks, Next: Using Tabs, Prev: Tracing History, Up: Basic Usage

ぼくの/わたしのお気に入り
=========================

現代的なあまたのブラウザの例に漏れず、emacs-w3m には先進のブックマーク
の機能があります。それによってカテゴリー毎に分類し、それらを編集し、あ
あ、もちろん簡単に閲覧することができます。

日本語版注釈: ブックマークの語源は、本に挟む栞 (しおり) のことです。

* Menu:

* Adding Bookmarks::            お気に入りに URL を加える
* Consulting Bookmarks::        ブックマークを閲覧する
* Editing Bookmarks::           ブックマークを変更するには?



File: emacs-w3m-ja.info, Node: Adding Bookmarks, Next: Consulting Bookmarks, Prev: Managing Bookmarks, Up: Managing Bookmarks

お気に入りに URL を加える
-------------------------

ブックマークに URL を加えるには、いくつかのやり方があります。最初の一
つは、`a' キーを使って (または `w3m-bookmark-add-current-url' コマンド
を呼んで) 今現在閲覧しているページを加えることです。すると、そのブック
マークをどの項目に入れるかを尋ねられ (`<TAB>' キーによる補完が効きます)、
タイトルの書き換えが促されます (デフォルトは、そのページのタイトルになっ
ています)。これらの二つをこなしたら、それらを有効にするために `<RET>'
を叩いてください。すると "Added" というメッセージがミニバッファに現れ
て、(驚くなかれ!) そのページがブックマークに記録されます。

ブックマークを加えるもう一つの方法は、`M-a' を使う (または
`w3m-bookmark-add-this-url' コマンドを呼ぶ) ことです。これは、現在位置
の URL (もしそのリンクをたどると、閲覧することができる URL) をブックマー
クに加えます。その場合でも最初に説明した方法と同様に、項目の名前とタイ
トルを入力しなければなりません。そのとき、それらのデフォルトはリンク自
体の名前になっています。

最後に、三番目の方法は `C-u a' を叩くことです。このときは、ブッ
クマークに加える URL、その項目、およびタイトルの入力が促されます。

`a'
     現在のページをブックマークに加えます。接頭引数付きで呼ばれた場合
     は、加える URL の入力が求められます
     (`w3m-bookmark-add-current-url')。

`M-a'
     現在位置の URL をブックマークに加えます
     (`w3m-bookmark-add-this-url')。



File: emacs-w3m-ja.info, Node: Consulting Bookmarks, Next: Editing Bookmarks, Prev: Adding Bookmarks, Up: Managing Bookmarks

ブックマークを閲覧する
----------------------

ブックマークされたページを閲覧する最も簡単な方法は、emacs-w3m のバッファ
で `v' キーを叩くことです。ですがもう一つ、特別な URL である
`about://bookmark/' に行くことによっても可能です。すると一行あたり一つ
ずつのブックマークが、項目ごとにまとめられて表示されるでしょう。そこで
は、他のページを閲覧するのと同じように、それらを確実に閲覧することがで
きます。

ブックマークのページでは bookmark マイナーモードが働いています。それは、
ブックマークを編集するためのキーバインドを追加します。*Note Editing
Bookmarks::.

`v'
     ブックマークのページを呼び出します (`w3m-bookmark-view')。



File: emacs-w3m-ja.info, Node: Editing Bookmarks, Prev: Consulting Bookmarks, Up: Managing Bookmarks

ブックマークを変更するには?
---------------------------

Bookmark マイナーモード (*Note Consulting Bookmarks::) は、ブックマー
クを編集するためにいくつかのキーバインドを設けています。中でもブックマー
クを kill (すなわち消去) するための `C-k' とブックマーク・ファイルを編
集するための `E' (`Info-like' キーマップの場合は `e') は、最も注目に値
します。

ブックマークは HTML ファイルに収められています。したがってそのファイル
は手で編集することができますが、十分に注意してください。emacs-w3m が項
目名を認識するために必要なコメントを消してしまうことによって、ものごと
は簡単に台無しになります。あなたが HTML の基本を知っていれば、むしろそ
のファイルの中身は極めて分かり易いものでしょう。

`C-k'
     現在位置のブックマークを kill します (`w3m-bookmark-kill-entry')。

`E'
     ブックマーク・ファイルを読み込んで、編集可能な状態にします
     (`w3m-bookmark-edit')。

`C-_'
     やり直しをします (`w3m-bookmark-undo')。



File: emacs-w3m-ja.info, Node: Using Tabs, Next: Working with buffers, Prev: Managing Bookmarks, Up: Basic Usage

みんなタブが好きだよね
======================

ほとんどの他のテキストベースのブラウザーと異なり、emacs-w3m はタブによ
る閲覧をサポートしています。タブによる閲覧って何? と尋ねられそうですね。
それはとても単純で、ウィンドウのてっぺんの行にすべてのバッファを単純か
つ分かりやすいやり方で表示することによって、単一のウィンドゥですべての
emacs-w3m のバッファを表現する方法です。それぞれのバッファは「タブ」と
して表示されます。この行は、他のバッファに移動したり、ページの状態を知
ることができるようにするために常に見えたままになっていて、バッファにつ
られてスクロールしません。

その感触をつかむ最も簡単な方法は、単に試してみることです。ですから、引
き続いて emacs-w3m のセッションを始めてください。何も設定変更をしてい
なければ、デフォルトでタブの行が現れます。てっぺんで、小さな四角に現在
のページのタイトルを表示している明るい行がそれです。では (例えば `G'
で) 別の w3m バッファを作ってみましょう。すると四角が二つになったでしょ
う。それらがタブです。

もっとも分かりやすいタブの使い道は切り替えです: タブの上で `mouse-1'
ボタンをクリックすることによって、そのバッファを表示させることができま
す。さらに `mouse-2' ボタンでも、または GNU Emacs ではマウスホイールで
も動作します。これは、複数の emacs-w3m バッファを使うための、非常に速
くて簡単な方法です。単に指し示してクリックするか、マウスホイールをクル
クルすれば良いのですから。(はいはい、あなたを無視していませんよ。あな
たはキーボードを使って切り替えたいのですね。ご心配無く。それも可能です。
次の節で説明しますから、黙って読み続けてください!)

もう一つの気が利いた機能は、ページの状態を知らせることです。カラー端末
かウィンドゥシステムを使っていれば、ページの状態を知らせるために
emacs-w3m は違う色でテキストをタブに表示します (1) (*Note Using
Tabs-Footnotes::)。例えばベージを取り込んでいる最中はテキストは赤くなっ
ていて、取り込みが完了するとデフォルトの色 (通常は黒) に戻ります。これ
により、見ようと思って待っているページが到着したかどうかが、タブ行を一
目見ただけで分かります。

最後に、もしウェブページが favicon を持っていれば、それもタブに表示さ
れます (2) (*Note Using Tabs-Footnotes::)。Emacs-w3m ユーザにもっと視
覚効果を!

ユーザオプション:

`w3m-use-tab'
     タブによる閲覧を活かすかどうか。

あなたが GNU Emacs のユーザーならば、マウスホイールを使うと、隣のバッ
ファに行くだけでなく、バッファを隣の場所に移動させることもできます。そ
れにはタブ行の上でマウスホイールを回す間、コントロール・キーを押し下げ
ておいてください。マウスホイールによって emacs-w3m がどのように動作す
るかを制御する二つの変数があります:

`w3m-tab-track-mouse'
     この変数は、マウスが選択したタブを追いかけて移動するかどうかを制
     御します。デフォルト値は `t' です。もしプロポーショナルなフォント
     をタブのフェースに使っているならば、これを `nil' に設定する必要が
     あるかもしれません。`w3m-tab-mouse-position-adjuster' も見てくだ
     さい。

`w3m-tab-mouse-position-adjuster'
     この変数は、マウスポインターが選択したタブを追いかけて移動すると
     きのマウスの位置を調整するための値を含んでいます。デフォルト値は
     `(0.5 . -4)' です。これは浮動少数 M と整数 N のコンス・セルで、マ
     ウスの位置 (ピクセル数で与えられます) の計算に以下のように適用さ
     れます:

          (TAB_WIDTH + M) * ORDER + N

     ここで TAB_WIDTH は一つのタブのピクセル幅、ORDER は何番目のタブか
     を表します。結果の少数以下は切り捨てられます。

     もしタブのフェースにプロポーショナルなフォントを使っていると、こ
     の計算は常に失敗するでしょう。`w3m-tab-track-mouse' も参照してく
     ださい。


File: emacs-w3m-ja.info  Node: Using Tabs-Footnotes, Up: Using Tabs

(1) XEmacs はすべてのタブをいつも同じ色で表示しますが、選択されたタブ
と他のものを区別したり、モードラインで現在のページの状態を知ることは簡
単です。

(2) XEmacs では今のところタブ行に favicon は表示されません。



File: emacs-w3m-ja.info, Node: Working with buffers, Next: Downloading, Prev: Using Tabs, Up: Basic Usage

バッファを作る/消す/移動する
============================

遅かれ早かれあなたは emacs-w3m 中毒になって、すべてのウェブの閲覧をそ
れで賄わなければならなくなるでしょう。あなたがめげてしまいそうなこの任
務を手伝うために、emacs-w3m のバッファで動作するたくさんの違う手段を考
えました。

* Menu:

* Creating and killing buffers:: バッファを作ったり消したり
* Moving across buffers::        バッファ間の移動
* Selecting buffers::            リストからバッファを選ぶ



File: emacs-w3m-ja.info, Node: Creating and killing buffers, Next: Moving across buffers, Prev: Working with buffers, Up: Working with buffers

バッファを作ったり消したり
--------------------------

時に、ウェブページを開かないで単に新しいバッファを作ることが役に立つこ
とがあります。この操作を emacs-w3m の用語では「ふたごのコピーを作る」
(creating a twin copy) と言います。これは単に、その内容が現在のバッファ
と同一な新しいバッファを作ります。

この反対はバッファを閉じることで、今はその内容に興味が無い一つのバッファ
を、単に閉じることができます。あるいは、現在のバッファ以外のすべてを閉
じることを決断しても良いです。以下のコマンドでそれを行なってください:

`C-c C-t'
`M-n'
     現在のバッファと同一のコピーを新しい名前で作ります。これは新しい
     バッファにウェブページを取り込まずに、新しいセッションを始めるの
     に使います (`w3m-copy-buffer')。

`C-c C-w'
     現在の emacs-w3m のバッファを閉じます (`w3m-delete-buffer')。

`C-c M-w'
     現在のもの以外のすべての emacs-w3m のバッファを閉じます
     (`w3m-delete-other-buffers')。



File: emacs-w3m-ja.info, Node: Moving across buffers, Next: Selecting buffers, Prev: Creating and killing buffers, Up: Working with buffers

バッファ間の移動
----------------

最も頻繁に使うコマンドがたぶん隣のバッファに行くものであろうことは、世間
の認めるところでしょう。それは、現在の「後」か「前」のバッファです。この
意味はタブを使ってみればよくわかります。次のバッファは現在の右側の一つ後、
前のバッファは左側です。しかし、残念ながら XEmacs はタブを順不同に表示す
るので、どれが隣のバッファかを知るには、各タブに表示されている数字に注目
する必要があります。これらのコマンドに割り当てられているキー
は `C-c C-p' と `C-c C-n' です。

これらのコマンドは数字接頭引数の習慣を理解します。すなわち、それらを数
N を引数として呼ぶと、現在のバッファから N 個離れたバッファに行きます。
例えば、現在位置から右にバッファを二個分 (すなわちバッファ二個分だけ次
に) 移動するには、`2 C-c C-n' を使ってください (1) (*Note Moving
across buffers-Footnotes::)。

`C-c C-p'
     前の emacs-w3m バッファに移動します。これは通常タブ行において左方
     向に次です。数の引数 N を付けて使うと、バッファを N 個分前に移動
     します (`w3m-previous-buffer')。

`C-c C-n'
     次の emacs-w3m バッファに移動します。これは通常タブ行において右方
     向に次です。数の引数 N を付けて使うと、バッファを N 個分次に移動
     します (`w3m-next-buffer')。

あなたが GNU Emacs のユーザーならば、以下のコマンドを使って emacs-w3m
バッファをタブ行の隣の場所に移動させることもできます:

`C-c C-.'
`C-c C->'
     選択されている emacs-w3m バッファを、タブ行の右隣の場所に移動させ
     ます。数の引数 N を付けて使うと、タブの N 個分右に移動させます
     (`w3m-tab-move-right')。

`C-c C-,'
`C-c C-<'
     選択されている emacs-w3m バッファを、タブ行の左隣の場所に移動させ
     ます。数の引数 N を付けて使うと、タブの N 個分左に移動させます
     (`w3m-tab-move-left')。

私たちが骨を折ったにもかかわらず、これらのコマンドがお気に召さないなら
ば、あなたが欲しいものが ibuffer や iswitchb のような万能志向の人
(generalist) 向けのバッファ管理パッケージの中にあるかどうかを探してみ
るのも良いかもしれません。emacs-w3m バッファは Emacs の正規のバッファ
ですから、それらもまた良好に動作するでしょう。


File: emacs-w3m-ja.info  Node: Moving across buffers-Footnotes, Up: Moving across buffers

(1) いつものように、`2 C-c C-n' の代わりに `C-u 2 C-c
C-n' を使っても良いのですが、emacs-w3m のバッファではすべての数字キー
とマイナス記号が数の接頭引数に割り当てられていることを覚えておいてくだ
さい。



File: emacs-w3m-ja.info, Node: Selecting buffers, Prev: Moving across buffers, Up: Working with buffers

リストからバッファを選ぶ
------------------------

リストから emacs-w3m のバッファを選ぶための二つのやり方があります。一つ
目は、`C-c C-a' で呼び出されるミニバッファ・ベースのインターフェー
スです。表示したいバッファを、`M-p' と `M-n' キー (また
は <↑> と <↓> キー) を使って選ぶことができ、それらはリストの中
で循環します。また、プロンプトを編集して、`<TAB>' の補完を使って
既存のウェブページのタイトルを書き込むこともできます。例えば、"Google
Search" のページを開いてあるならば、"Goo" に続けて `<TAB>' を
叩くことによって、そのページのタイトルが完成します。ページの名前の後ろに
は、(鍵括弧で挟まれた) バッファの名前が付きます。そし
て `<RET>' を使うと、あなたが選んだバッファに切り替わります。

二つ目のもっと洗練されたインターフェースは emacs-w3m バッファリストと言
い、`C-c C-s' で起動されます。それは分割されたウィンドゥにすべて
の開いているバッファを表示し (`C-c C-s' で表示形式が切り替わりま
す)、実時間でバッファを見ることができるようになります。そのバッファリス
トの中でポイントを移動すると、ポイントのところにあるバッファが主ウィンドゥ
に表示され、バッファの切り替えが直接目に見える形で返ってくるのです。

バッファリストの中を移動するには `p' と `n' キー (または矢印キー) を使っ
てください。バッファリストでは `<DEL>' と `<SPC>' で、主ウィンドゥに表
示されているバッファをスクロールさせることが可能で、これは正しいバッファ
を見ているかどうかをチェックしたいときに便利です。ポイントのところにあ
るバッファを選びたいときは `<RET>' キーを使ってください。この場合はバッ
ファリストが隠されます。あるいは、`w' キーを使った場合はバッファリスト
は表示されたままで、主ウィンドゥにフォーカスします。

また、このメニューで普通のバッファで使われるのと同じキー割り当て
(*Note Creating and killing buffers::) で、バッファを閉じたり作ること
もできます。

最後に、`?' はヘルプの表示、`g' はリストの作り直し、そして `q' はバッ
ファリストの終了を主ウィンドゥのバッファは変更せずに、それぞれ実行しま
す。

`C-c C-a'
     ミニバッファでバッファ名の入力を求めます。`M-p' と `M-n' で既存の
     バッファが循環し、`<TAB>' で補完できます (`w3m-switch-buffer')。

`C-c C-s'
     分割されたウィンドゥにバッファリストを表示しま
     す (`w3m-select-buffer')。このウィンドゥでは `C-c C-s' で水
     平と垂直モードが切り替わり、`<RET>' でポイントのところにあるバッ
     ファを選んでバッファリストは隠蔽、`w' でポイントのところにあるバッファ
     を選んでそれにフォーカス、`n' と `p' それに矢印キーが上下の移動
     に使えます。



File: emacs-w3m-ja.info, Node: Downloading, Next: Submitting Forms, Prev: Working with buffers, Up: Basic Usage

ファイルをダウンロードする
==========================

どんなウェブページやファイルも emacs-w3m でダウンロード (すなわち取得、
表示ではありません) できます。単にダウンロードしたいリンクにポイントを
置いて `d' を叩いてください。ローカルにセーブするファイル名が尋ねられ
ます。デフォルトでは遠隔サーバーにおけるファイルの名前になります。それ
で良ければ `<RET>' を押してください。ダウンロードは非同期に実行され、
Emacs で行なっている他の仕事の邪魔をしないので、そうしたければ他のバッ
ファで emacs-w3m による閲覧を続けることができます。

このダウンロードの仕組みは w3m を使うのですが、代わりにもっと強力な
wget を使うことも考慮してみてください。私たちのお友だちプロジェクトで
ある "emacs-wget" を覗いてみましょう。そのホームページはここ
`http://pop-club.hp.infoseek.co.jp/emacs/emacs-wget/' です。

`d' (Lynx-like キーマップ)
`D' (Info-like キーマップ)
     ポイントのところにあるリンクが指し示すファイルかページをダウンロー
     ドします (`w3m-download-this-url')。

`M-d' (Lynx-like キーマップ)
`d' (Info-like キーマップ)
     URL の内容をローカルファイルにダウンロードします (`w3m-download')。
     その URL とローカルファイルの名前の入力を求められます。



File: emacs-w3m-ja.info, Node: Submitting Forms, Next: HTML File Information, Prev: Downloading, Up: Basic Usage

HTML フォームに記入する
=======================

これらの emacs-w3m コマンドは、単純なキーバインドと専用の Emacs のウィ
ンドゥかミニバッファを使って、フォームからフォームへの移動とフィールド
に入力するための機能を提供します。

覚えておいて欲しい大事なキーバインドは `<RET>' です。これは現在位置に
あるものによって異なる意味を持ちます。テキスト領域 (textarea) では、ミ
ニバッファで値を入力することが促されます。選択用のタグでは、選択肢のリ
ストが Emacs のエレクトリック (electric == 自己挿入) ウィンドゥに現れ
ます (そこでは矢印キーで移動して、`<RET>' キーで一つを選ぶことができま
す)。ラジオボタンおよびチェックボックスでは `<RET>' キーでそれらのうち
の一つを選びます。

ミニバッファかエレクトリック・ウィンドゥにいるときは、
`C-c C-q' キーで取り消すことができます。フォームに記入したものを
送り出すには `C-c C-c' を使ってください。

`]'
     次のフォームにジャンプします (`w3m-next-form')。

`['
     前のフォームにジャンプします (`w3m-previous-form')。

`C-c C-c'
     現在位置のフォームに記入したものを送り出します
     (`w3m-submit-form')。

`<RET>'
     現在位置にあるのフォーム値を書き換えます。

`<RET>' (w3m-form-*-keymap)
     その値を選択します。

`C-c C-q' (w3m-form-*-keymap)
     フォームの編集を中断して、変更を取り止めます。

`w3m-form-use-textarea-backup' が `nil' に設定されていなかったら、
textarea で入力したテキストを後で再利用できるように、バックアップ・ファ
イルに記録します。フォームの編集を始めるときにバックアップされたテキス
トがあったら、それを使うかどうかを尋ねられるでしょう。テキストを保存す
るためのファイルは、変数 `w3m-form-textarea-directory' で指定されるディ
レクトリに格納されます。



File: emacs-w3m-ja.info, Node: HTML File Information, Prev: Submitting Forms, Up: Basic Usage

ウェブページ作りとハックのお手伝い
==================================

いつもドキュメントの執筆環境として、あるいはソフトウェアの開発環境とし
て Emacs を使っている人には、同じその環境の中でウェブを閲覧できること
は本当に便利でしょう。例えば HTML ファイルを執筆しているのであれば、外
部のウェブブラウザを起動する必要なく、Emasc の中で作成した HTML ファイ
ルをプレビューできます。プログラミング・マラソンの最中に、迅速に技術文
献からサンプルコードを切り貼りするといったことだって...

逆はどうでしょう。(すなわちウェブ閲覧の環境で、そのソースである HTML
ファイルを編集したり、参照したりできたら) かっこいいと思いませんか？
ドキュメントを執筆中に emacs-w3m で下見 (preview) して誤字を発見したと
想像してみてください。その HTML ファイルをたちどころに修正したくなるは
ずです。あなたがウェブテクノロジーに携わるプログラマなら、閲覧中のウェ
ブページを HTML 形式で閲覧したくなることがあるでしょう、特に、新聞モ
ジュールの作者の方 (*Note Shimbun Basics::)。

HTML ファイルを開いている Emacs のバッファの名前を明示的に指定してバッ
ファを切り替えることも普通にできますが、emacs-w3m ではそういった目的の
ために専用のキーが割当てられています。Emacs-w3m は自分が現在表示してい
るウェブページの URL を知ってるんです。その情報を使わない手はありませ
ん。

`\'
     表示中のウェブページを HTML 形式でそのまま表示します
     (`w3m-view-source')。

`='
     表示中のウェブページの情報を表示します。情報には、タイトル、URL、
     ドキュメントタイプ、最終変更日時が含まれます (`w3m-view-header')。

`E' (Lynx-like キーマップ)
`e' (Info-like キーマップ)
     現在閲覧中のローカルファイルを編集します (`w3m-edit-current-url')。

`e' (Lynx-like キーマップ)
`E' (Info-like キーマップ)
     現在ポイントの下にあるリンク先のローカルファイルを編集します
     (`w3m-edit-this-url')。

`M'
     ポイントにあるリンクを `browse-url' で開きます。

`|'
     ウェブページのソースをコマンドにパイプします。どんなコマンドを使
     うかを尋ねられます (`w3m-pipe-source')。

ここで紹介した以外にも、他のコマンドや Emacs のサブシステムと
emacs-w3m を連携させる方法を *Note Tips:: にて紹介しているので、参考に
してください。



File: emacs-w3m-ja.info, Node: Pretty Good Features, Next: Customizable Variables, Prev: Basic Usage, Up: Top

たくさんのすぐれもの
********************

* Menu:

* Using Search Engines::        使いやすいウェブ検索
* Grouping URLs::               一つの URL で複数のウェブページを見る
* Weather Information::         明日の天気は晴れでしょう
* Using Antenna::               アンテナを張り巡らそう
* Showing Directory Tree::      ディレクトリの木構造を表示する
* Viewing Perl Documents::      Perl のドキュメントを見る
* Using Namazu::                Namazu でファイルを検索する
* Octet::                       application/octet-stream データを見る
* Frame Local Buffers::         多数のセッションをフレームでグループ分けする
* Session Manager::             セッションの保存と読みこみ



File: emacs-w3m-ja.info, Node: Using Search Engines, Next: Grouping URLs, Prev: Pretty Good Features, Up: Pretty Good Features

使いやすいウェブ検索
====================

Emacs-w3m には検索エンジンを利用するための先進の機能があり、三つのイン
ターフェースを通して利用することができます:

 * 標準の検索インターフェースです。`S' キー (`Info-like' キーマップの場合は `s' キー) で、いずれかの emacs-w3m バッファから起動さ
     れます。これは検索エンジンを指定して検索語を入力する、単純な対話
     型のやり方です。*Note The Search Interface:: を参照してください。

 * クイックサーチ・インターフェースです。これは技巧的に作られたURL に行くことによって検索エンジンを利用するための、より速い (さ
     らに、より複雑な) 方法です。この機能に関する詳細は *Note Quick
     Searching:: を参照してください。

 * "feeling searchy" 機能が有効になっている(`w3m-enable-feeling-searchy') と、URL を入力するときに通常の URL
     の代わりに何かの語句を指定することによって、その語句の web 検索を
     自動的に開始させることができます。

* Menu:

* The Search Interface::        Emacs-w3m による検索のやり方
* Quick Searching::             もう一つの (そして速い) ウェブ検索
* Adding New Search Engines::   お気に入りのエンジンを使うには?



File: emacs-w3m-ja.info, Node: The Search Interface, Next: Quick Searching, Prev: Using Search Engines, Up: Using Search Engines

Emacs-w3m による検索のやり方
----------------------------

Emacs-w3m のバッファで `S' キー (`Info-like' キーマップの場合は `s'
キー) を使うことにより、標準の検索インターフェースを立ち上げることがで
きます。すると、ミニバッファで検索語の入力を求めるプロンプトが現れるの
で、一つまたは複数の語を入れて、`<RET>' を叩いてください。そのエンジン
の検索結果のページが現れ、その後、あたかも検索エンジンに通常のウェブの
流儀による入力を行なったときのように、結果を閲覧することができます。

おそらく、あなたはどのエンジンで探索したいかを決める機会が与えられてい
ないことに気付くでしょう。Emacs-w3m はデフォルトで Google 検索エンジン
を使いますが、変数 `w3m-search-default-engine' (*Note Customizable
Variables:: 参照) をカスタマイズすることによって、この振る舞いを変更す
ることができます。あるいは、このコマンドを使うたびに検索エンジンを指定
することができます。

どのエンジンを使用するかを明示するためには、コマンドに接頭引数を与えなけ
ればなりません (通常これは `C-u S' (`Info-like' キーマップ
の場合は `C-u s') のように、コマンドの前に `C-u' を叩くこと
を意味します)。すると emacs-w3m はエンジンの入力を促すので、その名前を一
つ選ぶことができます (<TAB> キーで補完ができます)。いったん選
択したら `<RET>' キーを叩いてください。その後で検索語を入力する
ことができ、`<RET>' をタイプすれば検索結果が現れるでしょう。

`S' (Lynx-like キーマップ)
`s' (Info-like キーマップ)
     新しい検索を始めます。接頭引数付きで呼ばれた場合は、どのエンジン
     を使うかを尋ねます (`w3m-search')。



File: emacs-w3m-ja.info, Node: Quick Searching, Next: Adding New Search Engines, Prev: The Search Interface, Up: Using Search Engines

もう一つの (そして速い) ウェブ検索
----------------------------------

ウェブ・パワーユーザ (これを読んでいるあなた) には、迅速で効率的な検索
の方法が必要です。クイックサーチはその一つです。

それは何をするのかって?  それは `gg:emacs' のような特別の URL に行くだ
けで、ウェブ検索を始めさせるのです。このモードの動作の長所は、次の通り
です:

 * 速い。エンジンと検索語を選ぶのに、一つの URL をタイプするだけです。

 * 便利。この機能によって、容易に emacs-w3m のタブかウィンドゥを開いて、検索を始めることができます。例えば、`G' キーで新しいウィ
     ンドウを開いてクイックサーチ URL に行くように。そして、特別のクイッ
     クサーチ URL そのものにも、ブックマークを付けることができます。

   * グルーピング機能も使える。例えば `group:gg:emacs&ya:w3m' のよう
     な URL によって、同時に二つの検索を始めることができます。例えばこの場合
     は、Google で "emacs" の、Yahoo! で "w3m" の検索をそれぞれ始めます。
     *Note Grouping URLs::.

これを使うのはとても簡単です。"gnu" という単語を Google で探して結果の
リストを得たいのであれば、`g' を叩いてから "gg:gnu" という URL を
タイプしてください。この表現の第一の部分 "gg" は、Google 検索エンジンを
使用したいことを示します。第二の部分は検索語です。エンジンと検索語は、コ
ロンで分けなければなりません。そして `<RET>' を叩けば検索結果を
見ることができます。スペースで分離した複数の語を入力できることを、心に留
めておいてください。"Feeling Searchy" 機能が有効になっていれば、ミニバッ
ファで `<SPC>' は self-insert キーになっています (これがデフォル
トです。`w3m-enable-feeling-searchy' を参照してください。) 無
効にしてある場合は、最初に `C-q' を叩いてください。つま
り `C-q <SPC>' です。

Emacs-w3m のデフォルトでは、利用可能ないくつかの検索エンジンの短縮形が
あり、それらは変数 `w3m-uri-replace-alist' で定義されています。例えば
Google には "gg"、Google Groups 用には "ggg"、Yahoo! のための "ya"、
Altavista に対する "al" および 英辞朗 on the WEB の "alc" などの短い名
前です。さらに検索エンジンの短縮形を追加するには *Note Adding New
Search Engines:: を参照してください。

短縮形の代わりに、"google" や "yahoo" のような完全なエンジンの名前を、
クイックサーチ URL に使うこともできます。それらの名前は、変数
`w3m-search-engine-alist' で定義されます。



File: emacs-w3m-ja.info, Node: Adding New Search Engines, Prev: Quick Searching, Up: Using Search Engines

お気に入りのエンジンを使うには?
-------------------------------

Emacs-w3m は利用可能な多くの検索エンジンを持っています。あなたのお気に
入りの検索エンジンを使いたいのに、万が一にもそれが既知の検索エンジンの
リストに載っていなかったらどうしましょう?  それを検索エンジンのリスト
に加えれば良いのです。そしてそれは極めて簡単です:

 1. 最初に、あなたが加えたい検索エンジンのエントリー・ポイントが何かを知らなければなりません。例えば:

     `http://my.searchengine.com/?query=foobar'

     ここで foobar はあなたが検索したい語です。

 2. この情報が手に入ったら、`~/.emacs-w3m' ファイルに加えてください:

          (eval-after-load "w3m-search"
            '(add-to-list 'w3m-search-engine-alist
                          '("My engine"
                            "http://my.searchengine.com/?query=%s"
                            nil)))

     第一フィールドの "My engine" をあなたのエンジンの説明で、第二フィー
     ルドをエントリー・ポイントで置き換えてください (`%s' は重要です。
     これは検索を行なうときに、検索語で置き換えられます)。そして第三
     フィールドは使用するエンコーディングを意味し、`nil' またはそれが
     省略された場合は変数 `w3m-default-coding-system' の値が標準のエン
     コーディングとして使われます。

     英語の検索エンジンでは滅多に気にする必要が無いことなのですが、い
     くつかの日本の検索エンジンでは、それに何か (例えば `euc-japan')
     を指定する必要があるかもしれません。

 3. 今やこの検索エンジンは、emacs-w3m で通常の `S' キー(`Info-like' キーマップの場合は `s' キー) で使うことができます。
     このエンジンを頻繁に使うのならば、短いエンジンの名前をクイックサー
     チエンジン (*Note Quick Searching:: を参照) に加えることもできま
     す。それには、以下のコードを `~/.emacs-w3m' ファイルに追加してく
     ださい:

          (eval-after-load "w3m-search"
            '(progn
               (add-to-list 'w3m-search-engine-alist
                            '("My engine"
                              "http://my.searchengine.com/?query=%s"
                              nil))
               (add-to-list 'w3m-uri-replace-alist
                            '("\\`my:" w3m-search-uri-replace "My engine"))))

     これにより、`my:foobar' のような URL を使って、あなたの検索エンジ
     ンで "foobar" という語を検索することができます。



File: emacs-w3m-ja.info, Node: Grouping URLs, Next: Weather Information, Prev: Using Search Engines, Up: Pretty Good Features

一つの URL で複数のウェブページを見る
=====================================

Emacs-w3m は "group URLs" という、複数の実際の URL を一つにまとめた特
別な URL を扱うことができます。そのようなグループ URL を開くと、
emacs-w3m は一度に複数のページを開くために、そのグループに含まれるそれ
ぞれの URL に対して一つのバッファを開きます。

グループ URL を作るには、開きたいすべてのページのアドレスを単にアンパ
サンド記号 ("&") で一緒にして (すなわち結合して)、グループ URL を表す
接頭辞の "group:" を付ければ良いのです。例を挙げると、GNU プロジェクト
のホームページ `http://www.gnu.org/' と Savannah ホームページ
`http://savannah.nongnu.org/' を見たいものとすれば、グループ URL は次
のようなものになるでしょう。

`group:http://www.gnu.org/&http://savannah.nongnu.org/'

この構文を日常的に使うのはかなり辛いものがありますが、非常に短い URL
(例えばクイックサーチ URL、*Note Quick Searching:: を参照) や非対話型
で使う状況では、この機能はおおいに役立つでしょう。



File: emacs-w3m-ja.info, Node: Weather Information, Next: Using Antenna, Prev: Grouping URLs, Up: Pretty Good Features

明日の天気は晴れでしょう
========================




File: emacs-w3m-ja.info, Node: Using Antenna, Next: Showing Directory Tree, Prev: Weather Information, Up: Pretty Good Features

アンテナを張り巡らそう
======================

アンテナはウェブページの変化を追跡するための道具です。アンテナを使うと、
特定のページが、以前に見たときから更新されたかされなかったかを、周期的
にチェックすることができます。

いずれかの emacs-w3m バッファで `A' を使うことによって、アンテナを始め
ることができます。あるいは、特別の URL `about://antenna/' に行くことに
よっても同じことができます。

* Menu:

* Setting up Antenna::          ウェブサイトをアンテナに加えるには?
* Daily web tracking::          アンテナで変化を追跡する



File: emacs-w3m-ja.info, Node: Setting up Antenna, Next: Daily web tracking, Prev: Using Antenna, Up: Using Antenna

ウェブサイトをアンテナに加えるには?
-----------------------------------

現に表示中のウェブページをアンテナに加えるには、単純に `+' キーを押し
てください。すべてのフィールドがすでに書きこまれている
`w3m-antenna-sites' をカスタマイズするためのバッファが現れるでしょう。
あなたは単に "Save for future sessions" と "Finish" のボタンを押せば良
いのです。

`+'
     URL をアンテナ・データベースに加えます。接頭引数付きで呼ばれた場
     合は、現在のページを追加するのではなくて、加える URL を尋ねます
     (`w3m-antenna-add-current-url')。



File: emacs-w3m-ja.info, Node: Daily web tracking, Prev: Setting up Antenna, Up: Using Antenna

アンテナで変化を追跡する
------------------------

アンテナ・ページには二つの項目が現れます。一つは "Updated" と呼ばれ、
もう一つは "Visited" と呼ばれます。"Updated" の項目では最後にアンテナ
を更新した後で変化したウェブサイトが、そして "Visited" の項目では変化
しなかったウェブサイトが見つかります。それぞれの項目で、各行はアンテナ・
データベースの一つのウェブサイトを表し、以下の構造になっています:

`  * 2002/12/15 16:43  (T)  My website'

最初の部分は、アンテナが最後にそのページの変化を報告した、そのウェブサ
イトが更新された最終時刻です。またはその情報が得られないこともあります。

`(T)' は "Time" を表し、最後にアンテナを更新した後で、そのページの変更
時刻が変化したので、変化が検出されたことを意味します。もう一つの可能性
がある値は `S' ("Size" のこと) で、そのページのサイズが変化したので、
変化が検出されたことを意味します。

行の最後の部分は、データベースに追加したときに与えた、このウェブサイト
のタイトルです。

どうか、アンテナ・データベースは自動的に更新されないことに注意してくださ
い。アンテナ・ページで `R' を叩くか、または接頭引数をコマンドに渡
す (例えば `C-u A' でアンテナを始める) ことによって、サイトが変
化したかどうかをチェックしたい毎に、それを更新しなければなりません。

もし、自動で更新させたいなら、変数 `w3m-antenna-refresh-interval' に更
新間隔を秒で設定してください。

`A'
     アンテナのページに行きます。接頭引数付きで呼ばれた場合は、表示す
     る前にアンテナ・データベースを更新します (`w3m-antenna')。



File: emacs-w3m-ja.info, Node: Showing Directory Tree, Next: Viewing Perl Documents, Prev: Using Antenna, Up: Pretty Good Features

ディレクトリの木構造を表示する
==============================

`w3m-dtree' コマンドを使うと、ローカルディレクトリのすべてのサブディレ
クトリの木構造を表示して、普通のウェブページのように閲覧することができ
ます。この機能を使ったときに現れる emacs-w3m のバッファは、その名前ゆ
えに外部の "tree" プログラムの出力に非常に類似したものになります。さら
に emacs-w3m からのボーナス: このコマンドを接頭引数付きで呼ぶとファイ
ルも表示し、emacs-w3m は完全装備のファイル閲覧器に変身します。

Emacs-w3m dtree がどんなふうに動作するかの例です:

     /home/romain/.elisp/emacs-w3m/
      |-CVS/
      |-attic/
      |  +-CVS/
      |-autom4te.cache/
      |-doc/
      |  |-CVS/
      |  +-emacs-w3m/
      |-icons/
      |  +-CVS/
      |-patches/
      |  +-CVS/
      +-shimbun/
         +-CVS/

接頭引数を付けると、代わりにこんなふうになります:

     /home/romain/.elisp/emacs-w3m/ (allfiles)
      |-(f).cvsignore
      |-(f)BUGS.ja
      |-(f)COPYING
      |-[d]CVS/
      |  |-(f)Entries
      |  |-(f)Repository
      |  +-(f)Root
      |-(f)ChangeLog
      |-(f)ChangeLog.1
      |-(f)Makefile
      |-(f)Makefile.in
      |-(f)README
      |-(f)README.ja

`D' (Lynx-like キーマップ)
`T' (Info-like キーマップ)
     ミニバッファでローカルディレクトリの入力を求め、その木構造を表示します。
     接頭引数付きで呼ばれると (例: `C-u D'、ただ
     し `Info-like' キーマップの場合は `C-u T')、そのディレクト
     リにあるファイルも表示します (`w3m-dtree')。



File: emacs-w3m-ja.info, Node: Viewing Perl Documents, Next: Using Namazu, Prev: Showing Directory Tree, Up: Pretty Good Features

Perl のドキュメントを見る
=========================




File: emacs-w3m-ja.info, Node: Using Namazu, Next: Octet, Prev: Viewing Perl Documents, Up: Pretty Good Features

Namazu でファイルを検索する
===========================

emacs-w3m は、全文検索ソフト Namazu を使ってファイルを検索することもで
きます (`w3m-namazu')。この機能を使うためには、Namazu を以下の場所から
取得して、インストールしておく必要があります:

`http://namazu.org/'

Namazu を使うためには、実際に検索を行う前に、検索対象となるファイルに
含まれている単語の索引 (インデックス) を作成しておく必要があります。もっ
とも典型的なコマンドは以下の通りです。

     % mknmz -O <インデックスを置くディレクトリ> <ドキュメントのあるディレクトリ>

`w3m-namazu' を動かす前に、いくつかの変数を設定しておく必要があります。
以下の変数を、使っている環境にあわせて設定してください。

`w3m-namazu-index-alist'
     インデックスの保存されているディレクトリの連想配列を設定します。
     `w3m-namazu' では、インデックスの保存されているディレクトリに対し
     て、ディレクトリ名よりも分かりやすい別名を定義することができます。
     また、幾つかの別々のインデックスを、あたかも単一のインデックスで
     あるかのように扱うこともできます。そのためには、次のように別名を
     キーとし、インデックスの保存されているディレクトリ (のリスト) を
     値とする連想配列を `w3m-namazu-index-alist' に設定します。

          (setq w3m-namazu-index-alist
                '(("alias1" "Path/to/the/index/directory1")
                  ("alias2" "Path/to/the/index/dir2"
                            "Path/to/the/index/dir3")))

`w3m-namazu-default-index'
     検索対象とするインデックスを指定します。実際にインデックスが保存されてい
     るディレクトリや、`w3m-namazu-index-alist' を設定するときに使った別
     名が使えます。値が `nil' の場合は、
     `M-x w3m-namazu <RET>' と実行するたびに、検索対象とするイン
     デックスを問い合わせます。

これで準備が整いましたから、
`M-x w3m-namazu <RET> query <RET>' とすると、文字列 query を
検索することができます。デフォルト以外のインデックスを対象として検索を行
う場合は、`C-u M-x w3m-namazu' というように前置引数を指定して実
行します。



File: emacs-w3m-ja.info, Node: Octet, Next: Frame Local Buffers, Prev: Using Namazu, Up: Pretty Good Features

application/octet-stream データを見る
=====================================

(作成中)

以下の設定を `~/.emacs' に書いておくと、`octet-find-file' でファイルを
開いたときに便利かも知れません。

     (add-hook 'octet-find-file-hook 'view-mode)
     (add-hook 'octet-find-file-hook 'w3m-minor-mode)



File: emacs-w3m-ja.info, Node: Frame Local Buffers, Next: Session Manager, Prev: Octet, Up: Pretty Good Features

多数のセッションをフレームでグループ分けする
============================================

多数の emacs-w3m のセッションをグループ毎に別々のフレームに分割するこ
とができます。例えば二つの emacs-w3m のフレームを用意して、一つは検索
エンジン群を扱い、もう一方ではニュースサイト群を扱うような使い方です。

Emacs-w3m はたくさんのページを同時に見るためのいくつかの機能を提供しま
す。例えば、たくさんのページをそれぞれ新しいセッションとして立ち上げる
ためにタブを使ったり (*Note Using Tabs::)、または `group:' で始まる特
別な URL (*Note Grouping URLs::) を使うことができます。しかし、あまり
にたくさんのページがある場合は、それらを別々のフレームでグループ分けを
したいと思うかもしれません。そうであれば、`w3m-fb-mode' コマンドはあな
たのためのものです。ただしそれを使うためには `w3m-use-tab' 変数を
非-`nil' (デフォルトで `t') に、`w3m-pop-up-frames' 変数を `nil' (それ
がデフォルト) に設定しておかなければなりません (*Note General
Variables::)。

`M-x w3m-fb-mode' をタイプするとモードがトグルに切り替わりますが、
接頭引数としてそのコマンドに正の整数を与えることによって、モードを on に
することができます (ゼロ以下では off になります)。

`w3m-fb-mode' が on になっていると、現在のフレームで開始したセッション
はそのフレームだけに関連付けられます。そして他のフレームで開いた他のセッ
ションは、同様にそれらのフレームだけに現れます。言い換えると、あるフレー
ムに関連付けられたセッションは他のフレームには現れません。
`w3m-fb-mode' は新しいフレームを作らないので、それらは何らかの方法であ
なた自身が作る必要があります。



File: emacs-w3m-ja.info, Node: Session Manager, Prev: Frame Local Buffers, Up: Pretty Good Features

セッションの保存と読みこみ
==========================

emacs-w3m ではセッション組を保存したり読みこんだりすることができます。

将来使うために、今開いているセッション組を保存できます。`M-S' を押して、
そのセッション情報に名前をつけてください。

そうすると次は、保存したセッション組を復帰したくなると思います。`M-s'
を押すとセッション選択メニューが開きます。このメニューのキーバインドは
以下のようになっています。

`<RET>'
     選択されているセッション組に含まれるすべてのセッションを開きます。

`M-s'
     選択されているセッション組の詳細なメニューを開きます。これを使っ
     てセッション組の中のセッションを一つずつ開くことができます。

`d'
     選択されているセッション組、またはセッションを削除します。

`r'
     選択されているセッション組の名前を変更します。

`s'
     現在開いているすべてのセッションを保存します。`M-S' と同じです。

`n'
     カーソルを次のセッション組に動かします。

`p'
     カーソルを前のセッション組に動かします。

`q'
     セッション選択メニューを終了します。

emacs-w3m はセッション組を自動的に保存することができます。
`w3m-session-deleted-save' が non-`nil' の時、emacs-w3m は閉じられたセッ
ションを自動的に保存します。これは、うっかりセッションを閉じてしまった
時などに便利でしょう。`w3m-session-automatic-save' が non-`nil' ならば、
emacs-w3m 終了時に開いていたすべてのセッションを自動的に保存します。

自動的に保存されているセッション組のことを忘れてしまって、なにかおもし
ろいページの URL を忘れてしまうということが時々あります。emacs-w3m は
こういうことを防止することができます。`w3m-session-load-last-sessions'
が `auto' であれば、emacs-w3m は自動的に前回開いていたセッションたちを
復帰します。`w3m-session-load-last-sessions' が `ask' であれば、
emacs-w3m はそれを復帰するかどうかをたずねます。(デフォルトは `nil' に
なっています。)

クラッシュで苦い経験をしたことがあると思います。 クラッシュにあうとがっ
かりしますし、見ていたページがどこかも忘れてしまいます。 emacs-w3m は
こんな状況でも助けてくれます。 `w3m-session-crash-recovery' が
non-`nil' ならば、 emacs-w3m は表示しているセッション組をクラッシュ復
元用に自動的に保存し、クラッシュが起こった時に保存していたセッション組
を復元します。 (デフォルトは `t' になっています。)
`w3m-session-load-crashed-sessions' がnon-`nil' であれば、emacs-w3m は
この復元を自動的に行ないます。`w3m-session-load-crashed-sessions' が
`ask' であれば、emacs-w3m は復元するかどうかをたずねます。 (デフォルト
は `ask' になっています。)



File: emacs-w3m-ja.info, Node: Customizable Variables, Next: Hooking into MUAs, Prev: Pretty Good Features, Up: Top

デフォルトのままでも結構良いと思うけれど
****************************************

たくさんの emacs-w3m の変数が、Custom の仕掛けによってカスタマイズするこ
とができます。Custom は変数を定義するための、Emacs のグラフィック・イン
ターフェースです。Custom にはいくつかのカスタマイズのための手段があり、
例えば単一のオプション (すなわち、Emacs Lisp 変数) のため
の `M-x customize-option'、またはある "group" (この場合のグルー
プは `w3m') に属するすべてのオプション (変数とフェース) を見て、か
つ変更するための `M-x customize-group' が使えます。

あるいは (もし Custom を使いたくないのであれば)、任意の Emacs Lisp 式
を emacs-w3m 初期設定ファイルに書き込むことができます。デフォルトのファ
イルは `~/.emacs-w3m' です。例えば、

     (setq w3m-home-page "http://emacs-w3m.namazu.org/")

これはデフォルトのホームページを `http://emacs-w3m.namazu.org/' に設定
します。シンタックスは `.emacs' ファイルと同じです (*Note Init File:
(emacs)Init File.)。

気を付けなければいけないのは、外部モジュールで定義されているいくつかの
変数が `~/.emacs-w3m' ファイルが読み込まれるときには未定義で、それらを
変更できないかもしれないことです (もちろん、デフォルトの値を気にしない
のであれば、`~/.emacs-w3m' ファイルで完璧に上書きしてしまうことは可能
なのですけれどね)。変数 `w3m-search-engine-alist' は典型的な例です
(*Note Search Variables::)。

`w3m-init-file'
     Emacs-w3m が起動すると、`w3m-init-file' ファイルを読み込みます。
     デフォルト値は `~/.emacs-w3m' です。たぶん、あなたはこれを変更す
     る必要は無いでしょう。これは普通の Emacs Lisp ファイルで、
     `~/.emacs' や `site-init' ファイルを emacs-w3m 関係のもので乱雑に
     しないようにするために使うことができます。Emacs-w3m はこれと同じ
     名前に、拡張子 `.elc' と `.el' が付いているものも (言い換えれば、
     `~/.emacs-w3m.elc'、`~/.emacs-w3m.el' および `~/.emacs-w3m' の順
     に) 調べます。

* Menu:

* General Variables::           一般的な変数
* Image Variables::             画像に関連した変数
* Form Variables::              フォームに関連した変数
* Cookie Variables::            クッキーに関連した変数
* Bookmark Variables::          ブックマークに関連した変数
* Search Variables::            ウェブ検索に関連した変数
* Weather Variables::           天気予報に関連した変数
* Dtree Variables::             dtree に関連した変数
* Antenna Variables::           アンテナに関連した変数
* Perldoc Variables::           Perldoc に関連した変数
* Namazu Variables::            Namazu に関連した変数
* Octet Variables::             Octet に関連した変数
* Session Manager Variables::   セッションマネージャに関連した変数
* Hooks::                       フック
* Other Variables::             その他の変数



File: emacs-w3m-ja.info, Node: General Variables, Next: Image Variables, Prev: Customizable Variables, Up: Customizable Variables

一般的な変数
============

`w3m-accept-languages'
     受け入れ可能な言語を優先度により降順に並べたもリスト。デフォルト
     値は `w3m' の設定ファイル (通常は `~/.w3m/config') の
     `accept_language' のエントリによって設定される。

`w3m-add-referer'

     リファラの送りかた。5つの選択子がある。

       1. `nil': 決してリファラを送らない。

       2. `t': 常にリファラを送る。

      3.  `lambda': 移動元のページと移動先のページの両方が同じサーバにより提供されている時のみリファラを送る。

       4. 二つの正規表現のコンス・セル: 移動元のページの URL が 1つめの正規表現に
          マッチし、かつ、2つめの正規表現にマッチしない場合のみリファラを送る。
          `nil' が指定されるとすべての URL にマッチする。

      5. 関数: URL とリファラの 2つを引数にとる関数が non-`nil'を返せばリファラを送る。

     ブラウジング履歴が洩れるのを心配するのなら、`nil' か `lambda' に
     設定してください。あなたのコンピュータが秘密のネットワークに属し
     ているのなら、以下のように 2つの正規表現を設定して、個人情報が洩
     れるのを防ぐといいでしょう:

          (setq w3m-add-referer
                '("\\`http:\"
                  . "\\`http://\\([^./]+\\.\\)*example\\.net/"))

`w3m-add-user-agent'
     non-`nil' ならば、リクエストヘッダに User-Agent を含めます。
     `w3m-user-agent' の値が User-Agent として使われます。

`w3m-arrived-file'
     閲覧した URL のデータベースを保存するファイル名。

`w3m-auto-show'
     non-`nil' ならばウィンドウの水平スクロールを有効にする。point がウィ
     ンドウの両端の外に出た場合に自動的に水平スクロールするが、
     `truncate-lines' が `nil' ならば何も起こらない。

     この機能は特定の emacs-w3m のコードのみで使われる。すなわち、通常
     `auto-hscroll-mode'、`automatic-hscrolling'、`auto-show-mode' お
     よび `hscroll-mode' はすべて emacs-w3m のバッファでは無効になるだ
     ろう。

`w3m-charset-coding-system-alist'
     MIME charset とコーディングシステムの連想配列。charset とコーディ
     ングシステムの両方がシンボルでなければならない。

`w3m-coding-system'
     `w3m' コマンドと通信するために使うコーディングシステムのデフォル
     ト値。

`w3m-coding-system-priority-list'
     emacs-w3m で使われるコーディングシステムを優先度により並べたリス
     ト。

`w3m-command'
     `w3m' コマンドの実行ファイル名。この値が nil ならば最初に
     emacs-w3m が存在する `w3m'、`w3mmee' または `w3m-m17n' を (この順
     番に) `exec-path' ディレクトリから探索してくれるので、通常はこの
     値を設定する必要はない。

     他の `w3m' コマンドを使いたければ、.emacs でこの値を明示的に設定
     するか、カスタマイズして保存してください。この場合、Emacs と
     emacs-w3m を再起動しなければいけません。今のところ、`w3m.elc' を
     読みこんだ後に `w3m' コマンドの変更を安全にすべての emacs-w3m プ
     ログラムに行なうことはできないからです。

`w3m-command-arguments'
     `w3m' コマンドの引数のデフォルト値。
     `w3m-command-arguments-alist' も参照するとよい。

`w3m-command-arguments-alist'
     URL にマッチする正規表現と `w3m' に追加で渡される引数との連想配列。
     この変数は特定のホストへの接続にプロキシを用いるなどのことに使わ
     れます。最初にマッチした要素が適用されます。以下にどのようにこの
     変数を設定するかの例を示します。

          (setq w3m-command-arguments-alist
                '(;; Don't use the proxy server to visit local web pages.
                  ("^http://\\([^/]*\\.\\)*your-company\\.com\\(/\\|$\\)"
                   "-no-proxy")
                  ;; Use the proxy server to visit any foreign urls.
                  (""
                   "-o" "http_proxy=http://proxy.your-company.com:8080/")))

     この 1つめの要素は、スキームが `http' であり、ホスト名
     が `your-company.com' であるか、`.your-company.com' で終わる
     すべての URL にマッチします。これらのホストに接続するのにプロキシは用いら
     れません。あなたが正規表現の初心者であるのなら、
     `w3m-no-proxy-domains' を代わりに使ってください。

`w3m-command-environment'
     サブプロセスが継承する環境変数の連想配列。

`w3m-confirm-leaving-secure-page'
     non-`nil' ならば、セキュアなページを去る時に emacs-w3m は確認を求
     めます。この変数には non-nil の値を *強く* おすすめします。このオ
     プションを切る前に *必ず* どういうことをしたいのかを完全に理解し
     てください。デフォルトでは、`t' になっています。

`w3m-content-type-alist'
     コンテントタイプと正規表現と表示するためのコマンドとフィルタとの
     連想配列。それぞれの要素は、以下のデータが構成するリストである。

      1. コンテントタイプ。 URL またはファイル名にマッチする正規表現。ファイルを閲覧するための方法。以下の三つの種類が使われるでしょう。

           a. 閲覧する URL を引数にとる lisp の関数。 b.("COMMAND" [ARG...]) -- "COMMAND" は外部コマンドであり、
               ARG は (あるならば) コマンドに渡す引数である。`file' と
               `url' のシンボルを ARG として指定すると、それぞれ閲覧す
               るファイルの内容を含んだテンポラリファイルのファイル名
               と、閲覧する URL とに置換えられる。
            c. `nil' ならば、URL をローカルのファイルにダウンロードします。

      4.  `1. コンテントタイプ' で指定されたものを上書きするコンテントタイプ。以下の値も有効です。

           a.  URL と CONTENT-TYPE と CHARSET の 3つの引数をとり、コンテントタイプを返す Lisp 関数。 b. コンテント
               タイプを示す文字列。
            c. `nil' ならば、コンテントタイプを上書きしない。

`w3m-correct-charset-alist'
     特殊な MIME 文字セットと標準の MIME 文字セットとの連想配列。

`w3m-db-history-display-size'
     about://arived-db/ で一度に表示する URL の最大数。

`w3m-decoder-alist'
     エンコードの種類とデコーダと引数との連想配列。

`w3m-default-coding-system'
     URL 文字列と POST されるデータとをエンコードするのにデフォルトで
     使われるコーディングシステム。

`w3m-default-content-type'
     ローカルのファイルを参照する時にデフォルトで使われるコンテントタ
     イプ。

`w3m-default-directory'
     emacs-w3m のバッファにおいて、現在のディレクトリとして使われるディ
     レクトリ。存在するディレクトリを示す文字列、その値が存在するディ
     レクトリを示すシンボル、url を引数にとりディレクトリを返す関数、
     もしくは `nil' (デフォルト値)が有効な値となります。指定されたディ
     レクトリが存在しない場合や、`nil' が指定された場合は
     `w3m-profile-directory' の値が使われます。

     例外: ローカルのファイルや、リモートのファイルを ftp でアクセスし
     ている場合はそのファイルのディレクトリが現在のディレクトリとして
     使われます。

`w3m-default-save-directory'
     ダウンロードしたファイルがデフォルトで保存されるディレクトリ。

`w3m-delete-duplicated-empty-lines'
     non-`nil' ならば二行以上の連続した空白行を一行にまとめる。

`w3m-dirlist-cgi-program'
     ローカルのディレクトリ列挙するのに使われる CGI プログラムの名前。
     `nil' ならば、`w3m' コマンドの dirlist.cgi のモジュールが使われる。

`w3m-doc-view-content-types'
     ファイルを閲覧するのに `doc-view-mode' を使うコンテントタイプのリ
     スト。この変数は `w3m-content-type-alist' の値を上書きする。

`w3m-edit-function'
     ローカルのファイルを編集するための関数。`w3m-edit-current-url' ま
     たは `w3m-edit-this-url' のコマンドが呼ばれた時に使われます。

`w3m-edit-function-alist'
     ページを編集するために使う関数の連想配列。このオプションは、
     `w3m-edit-current-url' や `w3m-edit-this-url' のコマンドが呼ばれ
     た時にどの関数でそのページを編集するかを決めるのに使われます。こ
     の連想配列から適当な関数が見つからなければ、`w3m-edit-function'
     が使われます。

`w3m-enable-feeling-searchy'
     non-`nil' ならば、url としてどんな単語も入力することができるよう
     になります。その場合、emacs-w3m はその言葉を web 検索します。デフォ
     ルトでは `t' です。

`w3m-encoding-type-alist'
     ファイルの拡張子とファイルのエンコードの種類との連想配列。

`w3m-file-coding-system'
     設定ファイルを書くために使われるコーディングシステム。この変数は
     `w3m-save-list' 関数で使われます。

`w3m-file-name-coding-system'
     emacs-w3m がファイルにアクセスする時に、パス名を変換する先のコー
     ディングシステム。

`w3m-fill-column'
     emacs-w3m のバッファで `fill-column' として使われる数字。正の値な
     らば、ページがその桁数で表示される。0 か負の値ならば、ウィンドウ
     の幅からその数字をがページの最大幅として使われる。XEmacs ではこの
     設定が常に働くわけではないということに注意してください。

`w3m-follow-redirection'
     emacs-w3m がリダイレクトを尊重しリダイレクト先を追いかける最大数。
     `nil' ならば、`w3m' コマンドがリダイレクトを処理します。クッキー
     がリダイレクトされるページ間で共有されることがありうるので、クッ
     キーを許可するならば (つまり、`w3m-use-cookies' を non-`nil' にし
     ているならば)、この変数を `nil' にしないでください。

`w3m-home-page'
     emacs-w3m が起動した時に開く URL の文字列を指定します。某会社の略
     称になっちゃいますから HP とは言わないでくださいね。

`w3m-horizontal-scroll-columns'
     ウィンドウを水平スクロールする時に、スクロールする文字数。

`w3m-horizontal-scroll-division'
     カーソル位置がきちんと表示されるようにするのに使われる数字。
     emacs-w3m のバッファでアンカーやフォームを移動していてカーソルが
     ウィンドウの外に出てしまってもカーソルが見つからなくなることは決
     してありません。

     この変数の値を N とします。カーソルがウィンドウの左に出てしまうと
     emacs-w3m はウィンドウをスクロールし、カーソルがウィンドウの左か
     らウィンドウの幅の 1/N の所に置かれるようにします。同様にカーソル
     がウィンドウの右から出てしまうと、emacs-w3m はウィンドウをスクロー
     ルし、カーソルがウィンドウの右からウィンドウの幅の 1/N の所に置か
     れるようにします。

     `w3m-auto-show' が `nil' ならばこの機能は動きません。値は 1 より
     も大きい整数でなければいけません。

`w3m-horizontal-shift-columns'
     ウィンドウを shifting する時に、スクロールする文字数。`shifting'
     というのは、スムーズなスクロールを意味します。

`w3m-imitate-widget-button'
     non-`nil' ならば、リンク (アンカー) ボタンでウィジェットのボタン
     の動作をします。これは `<TAB>' を使って Gnus の記事バッファの中を
     移動するのに便利です。真偽値を返す Lisp 関数を設定することもでき
     ます。

`w3m-init-file'
     Your emacs-w3m startup file name.  If a file with the `.el' or
     `.elc' suffixes exists, it will be read instead.

     Note: This file is used as the startup configuration *NOT* for
     the `w3m' command but for emacs-w3m.  In order to modify
     configurations for the `w3m' command, edit the file named
     `~/.w3m/config' normally.

`w3m-input-coding-system'
     Coding system used when writing to `w3m' processes.  It overrides
     `coding-system-for-write' if it is not `binary'.  Otherwise, the
     value of the `w3m-current-coding-system' variable is used
     instead.

`w3m-keep-arrived-urls'
     Maximum number of URLs which the arrived URLs database keeps.

`w3m-keep-cache-size'
     Maximum number of pages to be cached in emacs-w3m.

`w3m-key-binding'
     Type of key binding set used in emacs-w3m sessions.  The valid
     values include `info' which provides `Info-like' keys, and `nil'
     which provides `Lynx-like' keys.

`w3m-language'
     Your preferred language used in emacs-w3m sessions.

`w3m-local-directory-view-method'
     Symbol of the method to view a local directory tree.  The valid values
     include `w3m-cgi' using the CGI program specified by the
     `w3m-dirlist-cgi-program' variable (which see), and
     `w3m-dtree' using the w3m-dtree Lisp module.

`w3m-local-find-file-function'
     Function used to open local files.  If a url of the `file:'
     scheme in which you entered agrees with the rule of the
     `w3m-local-find-file-regexps' variable (which see), it is used to
     open the file.

     Function should take one argument, the string naming the local
     file.  It can also be any Lisp form returning a function.  Set
     this to `nil' if you want to always use emacs-w3m to see local
     files.

`w3m-local-find-file-regexps'
     `Cons' of two regexps matching and not matching with local file
     names.  If a url of the `file:' scheme in which you entered
     matches the first form and does not match the latter form, it
     will be opened by the function specified by the
     `w3m-local-find-file-function' variable.  `Nil' for the regexp
     matches any file names.

     For instance, the value `(nil . "\\.html?\\'")' allows
     `file:///some/where/w3m.el', not `file:///any/where/index.html',
     to open by the function specified by
     `w3m-local-find-file-function'.  The latter will be opened as a
     normal web page.  Furthermore, if you would like to view some
     types of contents in the local system using the viewers specified
     by the `w3m-content-type-alist' variable, you can add regexps
     matching those file names to the second element of this variable.
     For example:

          (setq w3m-local-find-file-regexps
                '(nil . "\\.\\(?:[sx]?html?\\|dvi\\|ps\\|pdf\\)\\'"))

     It is effective only when the `w3m-local-find-file-function'
     variable is set properly.

`w3m-mailto-url-function'
     Function used to handle the `mailto' urls.  Function is called
     with one argument, just a url.  If it is `nil', a function
     specified by the `mail-user-agent' variable will be used for
     composing mail messages.

`w3m-mailto-url-popup-function-alist'
     Alist of `(MAJOR-MODE . FUNCTION)' pairs used to pop a mail
     buffer up.  If a user clicks on a `mailto' url and a mail buffer
     is composed by `mail-user-agent' with the `MAJOR-MODE',
     `FUNCTION' will be called with a mail buffer as an argument.
     Note that the variables `special-display-buffer-names',
     `special-display-regexps', `same-window-buffer-names' and
     `same-window-regexps' will be bound to `nil' while popping to a
     buffer up.

`w3m-make-new-session'
     Non-`nil' means making new emacs-w3m buffers when visiting new
     pages.  If it is non-`nil' and there are already emacs-w3m
     buffers, the `w3m' command makes a new emacs-w3m buffer if a user
     specifies a url string in the minibuffer, and the
     `w3m-safe-view-this-url' command also makes a new buffer if a
     user invokes it in a buffer not being running the `w3m-mode'.
     The default value is `nil'.

`w3m-mbconv-command'
     Name of the `mbconv' command provided by the `libmoe' package.
     The `libmoe' package is used when you use the `w3mmee' command
     instead of the `w3m' command.  See also `w3m-command'.

`w3m-no-proxy-domains'
     List of domain names for which emacs-w3m will not use a proxy
     server.  Each element should be exactly a domain name which means
     the latter common part of the host names, not a regexp.

`w3m-output-coding-system'
     Coding system used when reading from `w3m' processes.

`w3m-pop-up-frames'
     Non-`nil' means pop to a new frame up for an emacs-w3m session.
     This variable is similar to `pop-up-frames' and does override
     `w3m-pop-up-windows'.  If `w3m-use-tab' is non-`nil' or there is
     the buffers selection window (for the `w3m-select-buffer'
     feature), this variable is ignored when creating the second or
     more emacs-w3m session.

`w3m-pop-up-windows'
     Non-`nil' means split the windows when a new emacs-w3m session is
     created.  This variable is similar to `pop-up-windows' and quite
     overridden by `w3m-pop-up-frames' as if `pop-up-frames'
     influences.  Furthermore, if `w3m-use-tab' is non-`nil' or there
     is the buffers selection window (for the `w3m-select-buffer'
     feature), this variable is ignored when creating the second or
     more emacs-w3m session.

`w3m-popup-frame-parameters'
     Alist of frame parameters used when creating a new emacs-w3m
     frame.  It allows not only the alist form but also XEmacs's plist
     form.

`w3m-prefer-cache'
     Non-`nil' means that cached contents are used without checking
     headers.

`w3m-profile-directory'
     Directory where emacs-w3m config files are loaded from or saved
     to.

`w3m-quick-start'
     Non-`nil' means let emacs-w3m start quickly w/o requiring
     confirmation.  When you invoke the `w3m' command, it attempts to
     visit the page of a string like url around the cursor or the
     value of `w3m-home-page'.  You won't be asked for the
     confirmation then if this value is non-`nil'.  Otherwise, you
     will be prompted for that url with the editing form.

`w3m-redirect-with-get'
     If non-`nil', use the GET method after redirection.  It controls
     how emacs-w3m works when a server responds the code 301 or 302.
     Here is an extract from RFC2616:

     Note: RFC 1945 and RFC 2068 specify that the client is not
     allowed to change the method on the redirected request.  However,
     most existing user agent implementations treat 302 as if it were
     a 303 response, performing a GET on the Location field-value
     regardless of the original request method.

`w3m-relationship-estimate-rules'
     Rules to estimate relationships between a retrieved page and
     others.

`w3m-select-buffer-horizontal-window'
     Non-`nil' means split windows horizontally to open the selection
     window.

`w3m-select-buffer-window-ratio'
     The percentage of the selection window to the whole frame.  The
     car is used when splitting windows horizontally and the cdr is
     for splitting windows vertically.

`w3m-use-title-buffer-name'
     Non-`nil' means use name of buffer included current title.

`w3m-show-error-information'
     Non-`nil' means show an error information as a web page.  Page is
     made when the foreign server doesn't respond to a request to
     retrieve data.

`w3m-space-before-favicon'
     String of space char(s) to be put in front of favicon in the
     mode-line.  It may be better to use two or more spaces if you are
     using oblique or italic font in the modeline.

`w3m-space-before-modeline-icon'
     String of space character(s) to be put in front of the modeline
     icon.  It may be better to use one or more spaces if you are
     using oblique or italic font in the modeline.

`w3m-terminal-coding-system'
     Default coding system used when writing to `w3m' processes.  It
     is just a default value to set process' coding system initially.
     (This variable name is analogically derived from the behavior of
     the `w3m' command which accepts data from Emacs just like reads
     from the terminal.)

`w3m-touch-command'
     Name of the executable file of the touch command.  Note that the
     command is required to be able to modify file's timestamp with
     the `-t' option.

`w3m-track-mouse'
     Whether to track the mouse and message the url under the mouse.
     See also `show-help-function' if you are using GNU Emacs.

     A tip for XEmacs users:

     You can also use the `balloon-help' feature by the
     `M-x balloon-help-mode' command with arg 1.  If the window
     manager decorates the balloon-help frame, and that is not to your taste,
     you may strip it off with the following directives:

          For ol[v]wm use this in .Xdefaults:
             olvwm.NoDecor: balloon-help
               or
             olwm.MinimalDecor: balloon-help

          For fvwm version 1 use this in your .fvwmrc:
             NoTitle balloon-help
          or
             Style "balloon-help" NoTitle, NoHandles, BorderWidth 0

          For twm use this in your .twmrc:
             NoTitle { "balloon-help" }

     See the `balloon-help.el' file for more information.

`w3m-uri-replace-alist'
     Alist of regexps matching URIs, and some types of replacements.
     It can be used universally to replace URI strings in the local
     rule to the valid forms in the Internet.

     Each element looks like the `(REGEXP FUNCTION OPTIONS...)' form.
     `FUNCTION' takes one or more arguments, a uri and `OPTIONS'.  You
     can use the grouping constructs `\\(...\\)' in `REGEXP', and they
     can be referred by the `\N' forms in a replacement (which is one
     of `OPTIONS').

     Here are some predefined functions which can be used for those
     ways:

     `w3m-pattern-uri-replace'
          Replace a URI using PATTERN (which is just an `OPTION').  It
          is allowed that PATTERN contains the `\N' forms in the same
          manner of `replace-match'.

     `w3m-search-uri-replace'
          Generate valid URLs to query words on some specified search
          engines.  For example, the element

               ("\\`gg:" w3m-search-uri-replace "google")

          makes it possible to replace the URI `gg:emacs' to a query
          for the word `emacs' on the Google search engine.

`w3m-url-local-directory-alist'
     Alist of URLs and local directories.  If directory names of a
     given URL and the car of an element are the same, emacs-w3m
     assumes that the file exists in the local directory where the cdr
     of an element points to.  The default value will be set to a
     value of the `yahtml-path-url-alist' variable which exchanged the
     car and the cdr in each element if it is available.

`w3m-use-ange-ftp'
     Non-`nil' means that `ange-ftp' or `efs' is used to access FTP
     servers.

`w3m-use-cygdrive'
     If non-`nil', use the `/cygdrive/' rule when performing
     `expand-file-name'.

`w3m-use-filter'
     Non-`nil' means use filter programs to convert web contents.  See
     also `w3m-filter-rules' (the `w3m-filter.elc' module provides
     it but might have never been loaded.  In that case, to see the default
     value and the documentation of `w3m-filter-rules', type
     `M-x load-library <RET> w3m-filter <RET>').

`w3m-use-form'
     Non-`nil' means make it possible to use form
     extensions. *(EXPERIMENTAL)*

`w3m-submit-form-safety-check'
     Non-`nil' means ask you for confirmation when submitting a form.
     The default value is `nil'.

`w3m-use-header-line'
     Non-`nil' means display the header line.

`w3m-use-header-line-title'
     Non-`nil' means display the current title at the header
     line. This variable is effective only when `w3m-use-tab' is
     `nil'.

`w3m-use-mule-ucs'
     Non-`nil' means use the multi-script support with Mule-UCS.

`w3m-use-refresh'
     Non-`nil' means honor the REFRESH attribute in META tags.
     Emacs-w3m arbitrarily takes you to a url specified by that
     attribute.  Note that they may be malicious traps.

`w3m-refresh-minimum-interval'
     history-back, history-next でページを見た時に最低限 refresh を待
     つ秒数。

`w3m-use-symbol'
     Non-`nil' means replace symbols that the `<_SYMBOL>' tags lead
     into.  It is meaningful only when the `w3m-m17n' command is used
     and (X)Emacs handles unicode charsets.

`w3m-menu-on-forefront'
     Non-`nil' means place the emacs-w3m menus on the forefront of the
     menu bar.  The default value is `nil'.

`w3m-use-tab'
     Non-`nil' means make emacs-w3m a tab browser.  It makes it possible
     to show all emacs-w3m buffers in a single window with the tabs line, and
     you can choose one by clicking a mouse on it.  See also
     `w3m-use-tab-menubar'.

`w3m-use-tab-menubar'
     Non-`nil' means use the TAB pull-down menu in the menubar.  It
     makes it possible to show all emacs-w3m buffers in a single
     window, and you can choose one by clicking a mouse on it.  This
     feature requires that Emacs has been built to be able to display
     multilingual text in the menubar if you often visit web sites
     written in non-ascii text.  See also `w3m-use-tab'.

`w3m-use-toolbar'
     Non-`nil' activates toolbar of `w3m'.

`w3m-user-agent'
     String used for the User-Agent field.  See also
     `w3m-add-user-agent'.

`w3m-new-session-in-background'
     Say whether not to focus on a new tab or a new session in target.
     It influences only when a new emacs-w3m buffer is created.

`w3m-do-cleanup-temp-files'
     非`nil' ならば、 emacs-w3m は自動的に削除しそこなった一時ファイル
     を削除します。 デフォルトは `nil' です。



File: emacs-w3m-ja.info, Node: Image Variables, Next: Form Variables, Prev: General Variables, Up: Customizable Variables

画像に関連した変数
==================

`w3m-default-display-inline-images'
     非`nil' ならば、インライン画像を emacs-w3m のバッファに表示します。
     画像表示の ON/OFF は `w3m-toggle-inline-images' で切り替えられます。
     `w3m-toggle-inline-images-permanently' も参照してください。

`w3m-favicon-cache-expire-wait'
     取得からこの変数で指定された秒数以上経過したキャッシュは削除され
     ます。この変数が `nil' ならば、削除されることはありません。

`w3m-favicon-cache-file'
     favicon のキャッシュを保存するファイル名。デフォルトは、変数
     `w3m-profile-directory' で指定されたディレクトリ下の `.favicon'
     という名前のファイルです。

`w3m-favicon-size'
     favicon のサイズ。この値は、`convert' への geometry 引数として使
     われます。

`w3m-favicon-type'
     favicon を表示するのに使われる画像の種類。

`w3m-favicon-use-cache-file'
     非`nil' ならば、favicon のキャッシュファイルを使います。

`w3m-favicon-default-background'
     favicon 画像の透過色として使われる色の名前。`nil' であれば、Emacs
     のフレームの背景色を使う。空文字は特別で、ヘッダラインかモードラ
     インかの favicon が表示されているほうの背景色に置換えられる。この
     変数は、Emacs 22 以上でしか効力を持たないことに注意。

`w3m-icon-directory'
     emacs-w3m がアイコンを探すディレクトリ。

`w3m-imagick-convert-program'
     ImageMagick の `convert' のプログラム名。

`w3m-treat-image-size'
     非`nil' ならば、`w3m' が画像とテキストの比率を考慮します。デフォ
     ルトは `t' です。

     非-`nil' ならば、`w3m' 画像が置かれる場所を確保した `halfdump' を
     生成し、`alt' テキストは画像の表示幅に等しくなるように切り詰めら
     れる、あるいはスぺースを詰められます。

     `w3m-pixels-per-character' と `w3m-pixels-per-line' も参照してく
     ださい。これらの値が画像が占める桁と行とを計算するために `w3m' コ
     マンドに渡されます。

`w3m-pixels-per-character'
     Integer used for the `-ppc' argument of the `w3m' command.  If
     `nil', the width of the default face is used.  It is valid only
     when `w3m-treat-image-size' is non-`nil'.  The default value is
     `nil'.  If you want to use emacs-w3m in a character terminal and
     make `w3m-treat-image-size' effective, you need to set this
     variable properly.

`w3m-pixels-per-line'
     Integer used for the `-ppl' argument of the `w3m' command.  If
     `nil', the height of the default face is used.  It is valid only
     when `w3m-treat-image-size' is non-`nil'.  Note that a small
     value may not induce a good result.  The default value is `64'.
     If you want to use emacs-w3m in a character terminal and make
     `w3m-treat-image-size' effective, you need to set this variable
     properly.

`w3m-resize-image-scale'
     Number of steps in percent used when resizing images.

`w3m-resize-images'
     If non-`nil', resize images to the specified width and height.

`w3m-show-graphic-icons-in-header-line'
     Non-`nil' means show graphic status indicators in the
     header-line.  If it is `nil', also the favicon won't be shown in
     the header-line even if `w3m-use-favicon' is non-`nil'.  This
     variable is currently meaningless under XEmacs.

`w3m-show-graphic-icons-in-mode-line'
     Non-`nil' means show graphic status indicators in the mode-line.
     If it is `nil', also the favicon won't be shown in the mode-line
     even if `w3m-use-favicon' is non-`nil'.

`w3m-toggle-inline-images-permanently'
     Non-`nil' means let the visibility of images continue
     permanently.  The visibility of images is initialized according
     to `w3m-default-display-inline-images' at the first time, and
     except that it may be toggled by the `w3m-toggle-inline-images'
     command, it does not change hereafter, if it is non-`nil'.
     Otherwise, whether images are visible is initialized according to
     `w3m-default-display-inline-images' whenever you visit a new page
     or reload the current page in an emacs-w3m buffer.

`w3m-use-favicon'
     Non-`nil' means show favicon images if they are available.  It
     will be set to `nil' automatically if ImageMagick's `convert'
     program does not support the ico format.

`w3m-image-default-background'
     画像の透過色として使われる色の名前。`nil' ならば、Emacs のフレー
     ムの背景色が使われる。空文字 ("") は特別に、バッファの背景色に置
     き換えられる。この変数は Emacs 22 以降でのみ有効である。



File: emacs-w3m-ja.info, Node: Form Variables, Next: Cookie Variables, Prev: Image Variables, Up: Customizable Variables

フォームに関連した変数
======================

`w3m-form-input-map-buffer-lines'
     Buffer lines for form select map buffer.

`w3m-form-input-select-buffer-lines'
     Buffer lines for form select buffer.

`w3m-form-input-textarea-buffer-lines'
     Buffer lines for form textarea buffer.

`w3m-form-mouse-face'
     Mouse face to highlight selected value.

`w3m-form-treat-textarea-size'
     Non-`nil' means to process textarea size (treat textarea rows).

`w3m-form-use-fancy-faces'
     Use fancy faces to fontify `<form>' tags.

`w3m-form-use-textarea-backup'
     Non-`nil' means save and restore backup text saved when you last
     edited this textarea.  Files to save text are stored in the
     directory specified by the `w3m-form-textarea-directory'
     variable.



File: emacs-w3m-ja.info, Node: Cookie Variables, Next: Bookmark Variables, Prev: Form Variables, Up: Customizable Variables

クッキーに関連した変数
======================

`w3m-cookie-accept-bad-cookies'
     If `nil', don't accept bad cookies.  If `t', accept bad cookies.
     If ask, ask user whether accept bad cookies or not.

`w3m-cookie-accept-domains'
     A list of trusted domain name string.

`w3m-cookie-file'
     File in which cookies are kept.

`w3m-cookie-reject-domains'
     A list of untrusted domain name string.

`w3m-use-cookies'
     Non-`nil' means enable emacs-w3m to use cookies.
     *(EXPERIMENTAL)*



File: emacs-w3m-ja.info, Node: Bookmark Variables, Next: Search Variables, Prev: Cookie Variables, Up: Customizable Variables

ブックマークに関連した変数
==========================

`w3m-bookmark-file'
     Bookmark file of w3m.

`w3m-bookmark-file-coding-system'
     Coding system for a created bookmark file.  This option is used
     when a new bookmark file is created, or when an existing bookmark
     file includes ASCII characters only.  If the coding system which
     is used to encode your using bookmark file is different from the
     value of this option, emacs-w3m does not change the encoding of
     your bookmark file.

`w3m-bookmark-default-section'
     Default section to add new entry.

`w3m-bookmark-menu-open-new-session'
     If non-`nil', "Bookmark" menu item open new session.



File: emacs-w3m-ja.info, Node: Search Variables, Next: Weather Variables, Prev: Bookmark Variables, Up: Customizable Variables

ウェブ検索に関連した変数
========================

`w3m-search-default-engine'
     Name of the default search engine.  The default is `google'.

`w3m-search-engine-alist'
     An alist of search engines.  Each element looks like `(ENGINE
     ACTION CODING POST-DATA)'.  ENGINE is a string, the name of the
     search engine.  ACTION is a string, the URL that performs a
     search.  ACTION must contain a `"%s"', which is substituted by a
     query string.  CODING is optional value which is coding system
     for query string.  POST-DATA is optional value which is a string
     for POST method search engine.  If CODING is omitted, it defaults
     to `w3m-default-coding-system'.

`w3m-search-word-at-point'
     Non-`nil' means that the word at point is used as an initial
     string.  If `transient-mark-mode', this option is ignored and the
     region is used as an initial string.  The default is `t'.

`w3m-search-thing-at-point-arg'
     `w3m-search-read-query' で使われる `thing-at-point' への引数。デ
     フォルトは `word'.



File: emacs-w3m-ja.info, Node: Weather Variables, Next: Dtree Variables, Prev: Search Variables, Up: Customizable Variables

天気予報に関連した変数
======================

`w3m-weather-default-area'
     Default region to check weather.  The default is the southern
     part of Kyoto city.

`w3m-weather-filter-functions'
     Filter functions to remove useless tags.  The default value is a
     list that contains the following function symbols in this order:

     `w3m-weather-extract-contents' `w3m-weather-adjust-contents'
     `w3m-weather-expand-anchors' `w3m-weather-insert-title'



File: emacs-w3m-ja.info, Node: Dtree Variables, Next: Antenna Variables, Prev: Weather Variables, Up: Customizable Variables

dtree に関連した変数
====================

`w3m-dtree-default-allfiles'
     If non-`nil', invert the meaning of the prefix argument given to
     the `w3m-dtree' command, i.e., the command shows not only
     directories but also files even if you don't give a prefix
     argument.  The default is `nil'.

`w3m-dtree-directory-depth'
     Integer that controls how deep `w3m-dtree' shows subdirectories.
     If it is `nil', files in all subdirectories are shown.  The
     default is `8'.

`w3m-dtree-indent-strings'
     Vector containing strings used for the indentation.  The default is
     `["|-" "+-" "|  " "   "]'.

`w3m-dtree-stop-strings'
     Vector containing strings used to indent directories under which
     there are subdirectories hidden because of
     `w3m-dtree-directory-depth'.  The default is `["|=" "+="]'.



File: emacs-w3m-ja.info, Node: Antenna Variables, Next: Perldoc Variables, Prev: Dtree Variables, Up: Customizable Variables

アンテナに関連した変数
======================

`w3m-antenna-file'
     Name of the file containing antenna URLs.  The default value is
     `~/.w3m/.antenna', where `~/.w3m' is the default value of
     `w3m-profile-directory' (*Note General Variables::).

`w3m-antenna-html-skelton'
     Skeleton used for making the html contents of antenna pages.

`w3m-antenna-make-summary-function'
     Function used to make the summary of the site information.  The
     default is `w3m-antenna-make-summary-like-natsumican'.  The other
     ready-made function is `w3m-antenna-make-summary'.

`w3m-antenna-sites'
     List of web sites that `w3m-antenna' watches.  The default is
     `nil'.

`w3m-antenna-sort-changed-sites-function'
     Function used to sort a list of sites having been changed.  The
     default is `w3m-antenna-sort-sites-by-time'.  The other
     ready-made function is `w3m-antenna-sort-sites-by-title'.

`w3m-antenna-sort-unchanged-sites-function'
     Function used to sort a list of sites having not been changed.
     The default is `w3m-antenna-sort-sites-by-time'.  The other
     ready-made function is `w3m-antenna-sort-sites-by-title'.



File: emacs-w3m-ja.info, Node: Perldoc Variables, Next: Namazu Variables, Prev: Antenna Variables, Up: Customizable Variables

Perldoc に関連した変数
======================

`w3m-perldoc-command'
     Name of the executable file of `perldoc'.  The default is
     `"perldoc"'.

`w3m-perldoc-input-coding-system'
     Coding system used when writing to the `perldoc' command.  The
     default value is `euc-japan' if you are in the Japanese language
     environment.  Otherwise it is `utf-8' if it is available, or
     `iso-latin-1'.

`w3m-perldoc-output-coding-system'
     Coding system used when reading from the `perldoc' command.  The
     default is `undecided'.

`w3m-perldoc-pod2html-command'
     Name of the executable file of `pod2html'.  The default is
     `"pod2html"'.

`w3m-perldoc-pod2html-arguments'
     Lisp of arguments passed to the `pod2html' command.  The default is
     `("--noindex")'.



File: emacs-w3m-ja.info, Node: Namazu Variables, Next: Octet Variables, Prev: Perldoc Variables, Up: Customizable Variables

Namazu に関連した変数
=====================

`w3m-namazu-command'
     Name of the executable file of Namazu.  The default is `namazu'.

`w3m-namazu-arguments'
     List of arguments passed to Namazu.  The default value is `("-h"
     "-H" "-n" w3m-namazu-page-max "-w" whence)'.  The symbols
     `w3m-namazu-page-max' and `whence' will be replaced respectively
     with the value of that variable and a proper value that the
     program determines properly.

`w3m-namazu-default-index'
     An alias for the default index, or the directory name of it.  If this is
     `nil', you will be prompted for the directory name whenever you
     invoke the `w3m-namazu' command with no prefix argument.  The
     default is the value of `namazu-default-dir' if it exists and
     `namazu-always-query-index-directory' is `nil'.  Otherwise
     `nil'.

`w3m-namazu-index-alist'
     Alist of aliases and index directories.  The default value is
     determined due to `namazu-dir-alist' if any or `nil'.

`w3m-namazu-input-coding-system'
     Coding system used when reading from the namazu process.  The
     default is the value of `namazu-cs-read' if it exists, or
     `undecided'.

`w3m-namazu-output-coding-system'
     Coding system used when writing to the namazu process.  The default is
     the value of `namazu-cs-write' if it exists, or is determined to
     `shift_jis-dos' or `euc-japan-unix' due to the system type.

`w3m-namazu-page-max'
     The maximum number of documents retrieved in one search.  The
     default is the value of `namazu-search-num' if any, or `30'.



File: emacs-w3m-ja.info, Node: Octet Variables, Next: Session Manager Variables, Prev: Namazu Variables, Up: Customizable Variables

Octet に関連した変数
====================

There is no user option for the moment.

* Session Manager Variables::


File: emacs-w3m-ja.info, Node: Session Manager Variables, Next: Hooks, Prev: Octet Variables, Up: Customizable Variables

セッションマネージャに関連した変数
==================================

`w3m-session-file'
     セッションを保存するファイル名。

`w3m-session-time-format'
     保存時間の形式。

`w3m-session-automatic-title'
     emacs-w3m 終了時の自動保存セッションのタイトル。

`w3m-session-crash-recovery-title'
     クラッシュ復元用セッションのタイトル。

`w3m-session-deleted-title'
     バッファを閉じた時の自動保存セッションのタイトル。

`w3m-session-deleted-keep-number'
     バッファを閉じた時の自動保存セッションをいくつ保存しておくか。

`w3m-session-automatic-keep-number'
     emacs-w3m 終了時の自動保存セッションをいくつ保存しておくか。

`w3m-session-unknown-title'
     タイトルが指定されなかった時に使われる文字列。



File: emacs-w3m-ja.info, Node: Hooks, Next: Other Variables, Prev: Session Manager Variables, Up: Customizable Variables

フック
======

`w3m-after-cursor-move-hook'
     Hook run each time after the cursor moves in emacs-w3m buffers.
     This hook is called by the `w3m-check-current-position' function
     by way of `post-command-hook'.

`w3m-delete-buffer-hook'
     Hook run when every emacs-w3m buffer is deleted.

`w3m-display-hook'
     Hook run after displaying pages in emacs-w3m buffers.  Each function is
     called with a url string as the argument.  This hook is evaluated by the
     `w3m-goto-url' function.

`w3m-fontify-after-hook'
     Hook run after fontifying emacs-w3m buffers.  This hook is
     evaluated by the `w3m-fontify' function.

`w3m-fontify-before-hook'
     Hook run when starting to fontify emacs-w3m buffers.  This hook
     is evaluated by the `w3m-fontify' function.

`w3m-form-input-map-mode-hook'
     A hook called after w3m-form-input-map-mode.

`w3m-form-input-map-set-hook'
     A Hook called before w3m-form-input-map-set.

`w3m-form-input-select-mode-hook'
     A hook called after w3m-form-input-select-mode.

`w3m-form-input-select-set-hook'
     A Hook called before w3m-form-input-select-set.

`w3m-form-input-textarea-mode-hook'
     A hook called after w3m-form-input-textarea-mode.

`w3m-form-input-textarea-set-hook'
     A Hook called before w3m-form-input-textarea-set.

`w3m-minor-mode-hook'
     Hook run after `w3m-minor-mode' initialization.

`w3m-mode-hook'
     Hook run after `w3m-mode' initialization.  This hook is evaluated
     by the `w3m-mode' function.

`w3m-select-buffer-hook'
     Hook run when a different emacs-w3m buffer is selected.

`w3m-bookmark-mode-hook'
     Hook run at the end of function `w3m-bookmark-mode'.



File: emacs-w3m-ja.info, Node: Other Variables, Prev: Hooks, Up: Customizable Variables

その他の変数
============

`w3m-async-exec'
     Non-`nil' means execute the `w3m' command asynchronously in Emacs
     process.

`w3m-broken-proxy-cache'
     Set it to `t' if the proxy server seems not to work properly in
     caching.  Note that this may be the double-edged sword; setting
     it to `t' will likely be harmful if the proxy server sends bad
     requests (e.g., not including the Host header, see RFC2616
     section 14.23) to foreign servers when the `w3m' command
     specifies the `no-cache' directive.  Also note that it may not be
     effective if you are using old `w3m' command.

`w3m-history-minimize-in-new-session'
     Non-`nil' means minimize copied history so that there's only
     current page.  This variable is effective when creating of the new
     session by copying (i.e., `w3m-copy-buffer').  The default value is
     `nil'.

`w3m-history-reuse-history-elements'
     Non-`nil' means reuse the history element when re-visiting the
     page.  Otherwise, a new history element will be created even if
     there are elements for the same url in the history.

     Emacs-w3m used to operate as the case in which it is non-`nil',
     however it sometimes brought about users' dissatisfaction.  For
     example, if a user visited the pages A -> B -> C -> B in order,
     performing BACK on the second B would let a user visit A.  The
     reason why a user was taken to A rather than C is that the
     `w3m-history' variable only had the list `(A B C)' as a history
     and B was the current position at that time.

     The default value for this variable is `nil' which allows the
     `w3m-history' variable to have the list `(A B C B)'.  Where
     contents of two B's are the identical Lisp objects.  So, too much
     wasting the Lisp resources will be avoided.

     See the documentation for the variables `w3m-history' and
     `w3m-history-flat' for more information.

`w3m-process-connection-type'
     Value for `process-connection-type' used when communicating with
     `w3m'.

`w3m-process-modeline-format'
     Format used when displaying the progress of the external `w3m'
     process.  It shows a percentage of the data loaded from the web
     server.

`w3m-show-current-title-in-buffer-tab'
     If non-`nil', show the title strings in the buffers tab.  It has
     no effect if your XEmacs does not support the gutter items.

`w3m-input-url-provide-initial-content'
     If non-`nil', provide an initial minibuffer content (if any) when
     entering a url.  The default is `nil'.  A url string is not worth
     editing in most cases since a url thing is generally a list of
     arbitrary letters, not a human readable one.  So, we provide no
     initial content when prompting you for a url by default.  But
     sometimes there will be a case to be convenient if you can modify
     the url string of [1]the link under the cursor or of [2]the
     current page.  In that case, you can type the `M-n' key [1]once
     or [2]twice to fill the minibuffer with an initial content if you
     use Emacs 23 and up.  Otherwise, set this variable to a non-`nil'
     value to always provide an initial content.



File: emacs-w3m-ja.info, Node: Hooking into MUAs, Next: Frequently Asked Questions, Prev: Customizable Variables, Up: Top

メール/ニュースリーダーで使う
*****************************

ここでは三種類の MUA (Message User Agent) を紹介します。それらの MUA
はすべて emacs-w3m を使うことによって HTML メールを適切に表示すること
ができます。それぞれの MUA と emacs-w3m を設定して使うための HowTo と
いくつかの注意を、ここで見つけることができるでしょう。

異なる習慣に関する即席の注釈: `message' って何? − Gnus ユーザが
`message' と言うとき、それはしばしばメールまたはニュースとして送信する
メッセージの草稿を意味します。しかし、それは Mew や Wanderlust のユー
ザが、受信したメッセージに対して使う用語です。彼らは送信するメッセージ
に `draft' を使っています。一方 Gnus ユーザは、受信したメッセージを
`article' と呼びます。

* Menu:

* Gnus::                        Gnus で HTML メールを読む
* Mew::                         Mew で HTML メールを読む
* SEMI MUAs::                   SEMI MUA で HTML メールを読む
* VM::                          VM (vieW maiL) は Wanderlust にあらず



File: emacs-w3m-ja.info, Node: Gnus, Next: Mew, Prev: Hooking into MUAs, Up: Hooking into MUAs

Gnus で HTML メールを読む
=========================

第一に、もしユーザオプション `mm-text-html-renderer' がデフォルトで
`shr' または `gnus-w3m' になっているのであれば (つまり関数 `mm-shr' ま
たは `gnus-article-html' が利用できるのであれば)、そして Gnus の内蔵の
HTML 描画器であるその関数に満足しているのであれば、何もする必要は無い
でしょう。*Note 表示 のカスタマイズ: (emacs-mime-ja)Display
Customization.  さらに *Note HTML: (gnus-ja)HTML.

しかし、もしお使いの Gnus が少し古くて `mm-shr' 関数や
`gnus-article-html' 関数が使えないか、または HTML 記事の描画のために
emacs-w3m を試してみたいのであれば、この章はまさにあなたのためのもので
す。

 * Emacs-w3m で何ができるの? HTML の spam メールを、emacs-w3m を使って人間が読めるように変換す
     ることができます。もちろん HTML の ham メール (spam ではないメー
     ル) に対しても働き、どちらの場合でも emacs-w3m はデフォルトの変換
     器よりもたぶん速いでしょう。追加の操作は必要ありません。それは単
     に表示されます。

     記事バッファの HTML の部分では `w3m-minor-mode' が on になって、
     emacs-w3m のと同じ主要なキーを使うことができます。例えば `<RET>'
     は、現在位置のリンクが指し示すページに行きます。それらのキーは変
     数 `w3m-minor-mode-command-alist' で定義されています。保安上の理
     由から、いくつかのコマンドはそれに似た別のコマンドで置き換えられ
     ていることを心に留めておいてください (下記参照)。

 * 何をしなければいけないの? この行を `~/.gnus.el' ファイルに追加してください。

          (setq mm-text-html-renderer 'w3m)

     さらに、記事バッファで画像を表示したい場合は、以下の行を入れてく
     ださい。

          (setq mm-inline-text-html-with-images t)

     記事バッファで emacs-w3m のキーを使う必要が無いならば、以下の行も
     追加してください:

          (setq mm-inline-text-html-with-w3m-keymap nil)

 * ご注意 前に spam と ham のことを書いたのはふざけているわけではなくて、あ
     なたの注意を喚起するためにまさにここにあるのです。HTML メールには
     `<img>' タグを使った spammers (spam をばらまくやから) の卑劣な悪
     巧みが含まれているかもしれません。それは `Click Here!' ボタンより
     はるかに有害です。最もありそうなのは、そんなたちの悪い spam があ
     なたの目に止まったかどうかを検査する、すなわちこの場合、あなたの
     メールアドレスが有効であることを確認するための spammer の意図があ
     ることです。それは、画像を表示するときに自動的に取得しに行くであ
     ろう URL に、識別文字列を埋め込むことによって行なわれます。変数
     `mm-w3m-safe-url-regexp' がデフォルト値から変更されていなければ、
     Gnus が勝手に spammer のサイトに接続することはありません。

     `mm-inline-text-html-with-images' を `t' にすれば、記事バッファに
     インライン画像を表示することができますよね?  いいえ、断じて違いま
     す。あなたはまだ守られているのです。あなたのメールアドレスが到達
     可能だという事実が漏れることを気にしないのであれば、変数
     `mm-w3m-safe-url-regexp' を `nil' にしてください。
     `mm-w3m-safe-url-regexp' のデフォルト値は `"\\`cid:"' で、これは
     私たちが `cid:' URL によってメールに含まれている画像が安全だと考
     えていることを意味します (すなわち、`mm-w3m-safe-url-regexp' を変
     更しなくても、そのような画像は表示することができます)。

 * おまけ 概略バッファにいるときでも、記事バッファの画像表示をトグルに切り
     換えることができます。それらの画像が emacs-w3m によって表示される
     場合だけですけれどね。例です:

          (defun gnus-summary-w3m-safe-toggle-inline-images (&optional arg)
            "Toggle displaying of all images in the article buffer.
          If the prefix arg is given, force displaying of images."
            (interactive "P")
            (with-current-buffer gnus-article-buffer
              (let ((st (point-min))
                    (nd (point-max))
                    (w3m-async-exec w3m-async-exec))
                (save-restriction
                  (widen)
                  (if (or (> st (point-min)) (< nd (point-max)))
                      (setq w3m-async-exec nil))
                  (article-goto-body)
                  (goto-char (or (text-property-not-all (point) (point-max)
                                                        'w3m-safe-url-regexp nil)
                                 (point)))
                  (if (interactive-p)
                      (call-interactively 'w3m-toggle-inline-images)
                    (w3m-toggle-inline-images arg))))))

          (eval-after-load "gnus-sum"
            '(define-key gnus-summary-mode-map
               "vi" 'gnus-summary-w3m-safe-toggle-inline-images))

     キー `vi' は他の何かに変更することができます。さらに *Note 概略バッ
     ファー: (gnus-ja)Summary Buffer.

*Note Nnshimbun:: も参照してください。



File: emacs-w3m-ja.info, Node: Mew, Next: SEMI MUAs, Prev: Gnus, Up: Hooking into MUAs

Mew で HTML メールを読む
========================

Emacs-w3m を使うことによって、Text/Html を Message モードに表示できる
ようになります。以下の設定を `~/.mew.el' ファイルに加えてください:

     (require 'mew-w3m)

これで、あたかも Text/Plain であるかのように、Text/Html を Message モー
ドに表示できるようになります。この際も、`C-c C-e' の操作は有効で
す。

このごろ、同じ情報を二つ含んでいるメールを非常によく見かけます。それら
は `text/plain' パートと `text/html' パートの両方から成る (何ちゅうバ
ンド幅の無駄使いだ) `multipart/alternative' フォーマットを使っています。
Mew はデフォルトでは `text/plain' パートだけを表示します。あなたは
emacs-w3m を使っているのですから、`text/html' パートの方を優先したくな
るかもしれません。それならば、以下の設定を `~/.mew.el' ファイルに加え
てください:

     (setq mew-mime-multipart-alternative-list
           '("Text/Html" "Text/Plain" ".*"))

Mew に関連するいくつかのカスタマイズ可能な変数があります:

`mew-use-w3m-minor-mode'
     非-`nil' にすると、text/html パートが表示されているメッセージバッ
     ファにおいて `w3m-minor-mode' が on になり、emacs-w3m のと同じ主
     要なキーを使うことができます。例えば `<RET>' は、現在位置のリンク
     が指し示すページに行きます。それらのキーは変数
     `w3m-minor-mode-command-alist' で定義されています。保安上の理由か
     ら、いくつかのコマンドはそれに似た別のコマンドで置き換えられてい
     ることを心に留めておいてください。デフォルト値は `nil' です。

`mew-w3m-auto-insert-image'
     非-`nil' にすると、multipart/related なメッセージを読んでいるとき
     に、メッセージバッファで画像をインライン表示させることができます。
     mew-w3m は、表示するために `cid:' URL によってメールの本文に含ま
     れている画像だけ (私たちはそれらを安全だと考えています) を許可す
     ることに注意してください。デフォルト値は `nil' です。

     ここで、`~/.mew.el' に

          (define-key mew-summary-mode-map "T" 'mew-w3m-view-inline-image)

     と書くと、"T" を押すことによって、画像表示の状態をトグルすること
     ができます。また、"C-uT" と prefix をつけると、メール本文に含まれ
     ていない画像も表示します。

`mew-w3m-cid-retrieve-hook'
     `cid:' URL を取り出した後で実行されるフックです。デフォルト値は
     `nil' です。

*Note Mew Shimbun:: も参照してください。



File: emacs-w3m-ja.info, Node: SEMI MUAs, Next: VM, Prev: Mew, Up: Hooking into MUAs

SEMI MUA で HTML メールを読む
=============================

Emacs-w3m と SEMI MUA、例えば Wanderlust を使うことによって、HTML メー
ルを人間が読めるように表示することができます。そういう MUA は MIME の
機能を SEMI (そしてさらに FLIM) に頼っているので、一般にそれを SEMI
MUA と呼んでいます。SEMI は HTML メールの描画にデフォルトで Emacs/W3
を使いますが、容易に emacs-w3m で置き換えることが可能です。それによっ
てあなたの電脳生活はより快適になるでしょう。

単に以下の行を `~/.emacs' ファイルに入れれば良いのです:

     (require 'mime-w3m)

`mime-w3m' モジュールと `mime-w3' モジュールは、ご想像の通り機能的にほ
ぼ同じものです (名前も似ているでしょう?)。後者は SEMI パッケージに含ま
れています。

記事バッファの HTML の部分では `w3m-minor-mode' が on になって、
emacs-w3m のと同じ主要なキーを使うことができます。例えば `<RET>' は、
現在位置のリンクが指し示すページに行きます。それらのキーは変数
`w3m-minor-mode-command-alist' で定義されています。保安上の理由から、
いくつかのコマンドはそれに似た別のコマンドで置き換えられていることを心
に留めておいてください。

`mime-w3m' モジュールに関連するいくつかのカスタマイズ可能な変数があり
ます:

`mime-w3m-display-inline-images'
     非-`nil' だったら、画像が HTML メールにインライン表示されます。最
     初に `default' というシンボルだったら (それがデフォルトです)、こ
     の変数の値は、変数 `w3m-default-display-inline-images' の値で置き
     換えられます。たぶん、あなたはこれを変更する必要は無いでしょう。

`mime-w3m-safe-url-regexp'
     安全であると考えられる URL にマッチする正規表現です。デフォルト値
     は `"\\`cid:"' で、私たちは `cid:' URL によってメールに含まれた画
     像が安全だと考えていることを意味します。悪漢による攻撃については
     *Note Gnus:: を参照してください。

`mime-w3m-setup-hook'
     `mime-w3m' モジュールと SEMI の協調動作を設定した直後に実行される
     フックです。デフォルト値は `nil' です。

ところで、summary バッファにいるときでも、article バッファ (Wanderlust
のコミュニティでは message バッファと呼ばれている) の画像表示をトグル
に切り換えることができます。それらの画像が emacs-w3m によって表示され
る場合だけですけれどね。Wanderlust 用の例です:

     (defun wl-summary-w3m-safe-toggle-inline-images (&optional arg)
       "Toggle displaying of all images in the message buffer.
     If the prefix arg is given, all images are considered to be safe."
       (interactive "P")
       (with-current-buffer wl-message-buffer
         (w3m-toggle-inline-images arg)))

     (eval-after-load "wl-summary"
       '(define-key wl-summary-mode-map
          "\M-i" 'wl-summary-w3m-safe-toggle-inline-images))



File: emacs-w3m-ja.info, Node: VM, Prev: SEMI MUAs, Up: Hooking into MUAs

VM (vieW maiL) は Wanderlust にあらず
=====================================

VM で html メールを表示する機能を提供する vm-w3m.el モジュールとパッチ
は VM の新しいメインテイナーに引き継がれましたが、まだ VM の安定版に現
れていません。VM ホームページ (http://www.nongnu.org/viewmail/) を訪ね
てみてください。



File: emacs-w3m-ja.info, Node: Frequently Asked Questions, Next: Known Problems, Prev: Hooking into MUAs, Up: Top

必ず答があるとは限らない
************************

* Menu:

* General FAQ::                 一般的な質問
* Trouble FAQ::                 トラブル
* Shimbun FAQ::                 Shimbun に関する質問



File: emacs-w3m-ja.info, Node: General FAQ, Next: Trouble FAQ, Prev: Frequently Asked Questions, Up: Frequently Asked Questions

一般的な質問
============

 * Q. emacs-w3m って何ですか? w3m を Emacs 上で動かすインターフェースプログラムです。Emacs 上で
     動くウェブブラウザとして使うこともできます。さらなる情報は *Note
     Introduction:: も参照してください。

 * Q. 動作する Emacs は? 以下の Emacsen で動作することが確認されています。

        * Emacs 21
        * Emacs 22
        * XEmacs 21.4.17 以上、Mule 有り/無し
        * XEmacs 21.5-b19 以上、Mule 有り/無し
        * Meadow

     なお、XEmacs では APEL が必要となります。詳しくは *Note Other
     Requirements:: を確認してください。

 * Q. 動作する w3m は? 以下の w3m で動作することが確認されています。

        * w3m-0.3
        * w3mmee-p24-18 + moe-1.5.4

          例に上げた w3mmee は `lang=many' で configure されている (そ
          れは `configure' スクリプトが `Which language do you
          prefer?' と尋ねたときに 3 を入力することによってできます) こ
          とに注意してください。さらにそれは `libmoe' パッケージを必要
          とします。

 * Q. XEmacs の SUMO パッケージに含まれている APEL をインストールしてあるのですが?

     XEmacs の APEL パッケージ (すべてのモジュールが Mule 付きの
     XEmacs 用にコンパイルされている) にはいろいろ問題があります。例え
     ば `std11' モジュールが FLIM のものとかち合う、など。それでも
     `apel-1.23-pkg.tar.gz' 以上のものだったら、そして `shimbun' の機
     能のために FLIM を使わないならば、Mule 付きと無し両方の XEmacs で
     使えるのですが、オリジナルの APEL で置き換えるか新規にインストー
     ルすることを勧めます。取得場所は *Note Other Requirements:: を見
     てください。

 * Q. CVS で最新版を取得したのですが、`configure' スクリプトが見つかりません。

     `autoconf' を実行してください。



File: emacs-w3m-ja.info, Node: Trouble FAQ, Next: Shimbun FAQ, Prev: General FAQ, Up: Frequently Asked Questions

トラブル
========

 * Q. 認証の必要なページのパスワードが入力できません。 変数 `w3m-async-exec' に `nil' 以外の値が設定されていることを確認
     してください。

 * Q. 認証の必要な proxy サーバーのパスワードが入力できません。 変数 `w3m-async-exec' に `nil' 以外の値が設定されていることを確認
     してください。

 * Q. リンクがたどれません。 `-header' オプションを受け付ける w3m コマンドが必要です。w3m のバー
     ジョンを確認してください。

 * Q. 文字化けします。 いくつかの原因があります。

      1.  HTML ファイルの問題 HTML ファイル中で `<meta>' タグによって指定されている文字コードと、
          実際の文字コードが異なると、正常に表示されません。
          `M-x w3m-redisplay-with-charset <RET>' また
          は `C c' コマンドを使って、正しい文字コードを指定して再描画して
          ください。

      2. 文字コード ISO-2022-JP(jis), EUC-JP または SHIFT_JIS 以外の文字コードで
          記述されたページについては、表示できない場合があります。次の
          いずれかの方法で対処してください。

           a.  Mule-UCS (*Note Other Requirements::) をインストールすると、Unicode で定義されている範囲の文字は表示でき
               るようになります。インストール後、変数
               `w3m-use-mule-ucs' が `nil' 以外の値に設定されているこ
               とを確認してください。なお、Emacs (それに emacs-w3m も)
               が EUC-JISX0213 および ISO-2022-JP-3 の文字コードを扱え
               るようにするには、Mule-UCS に附属している `jisx0213' モ
               ジュールをインストールする必要があります (残念ながら
               XEmacs では使えませんが)。

           b.  w3mmee や w3m-m17n をインストールして、変数`w3m-command' に適切な値を設定してください。このように
               設定すると、emacs-w3m はこれらのプログラムが提供する多
               言語機能を利用するようになります。ただし、Emacs が扱え
               る文字コードに限られますので、必要に応じて Mule-UCS も
               インストールしてください。

      3.  Emacsen の問題 XEmacs 21.1 では SHIFT_JIS のページが化けることがあります。
          また、XEmacs 21.2 でも beta36 以前では問題があります。そうい
          うものを使っている場合は XEmacs をアップグレードしてください。

          XEmacs 21.1 と 21.2 は、すでに公式にお役御免になったことを認
          識してください。

       4. `standard-display-european' を使わないでください

          それはしばしば Latin 文字を正しく表示させないので、概して有
          害です。例えば、`&#8217' としてエンコードされたアポストロフィ
          文字 (`'') は、それがあたかも `&#249' としてエンコードされた
          かのように、低アクセント (a grave accent) が付いた文字 `u'
          として表示されるでしょう。あなたの `~/.emacs' ファイルか、
          Emacs が起動時に読み込む site ファイルに、何か以下のような行
          があるならば、それを取り除くことを強く勧めます。

               (standard-display-european 1)

          そこでは、引数は `1' ではなくて `t' かもしれません。

 * Q. 画像表示できません。 いくつかの原因があります。

     古いバージョンの `libungif' ライブラリにはバグがあります。
     `libungif-4.1.0b1' 以降のものをインストールしなければなりません。

     XEmacs では必ず `gifsicle' プログラムをインストールしてください。
     現在利用できるすべての XEmacs 21.x にはバグがあり、emacs-w3m では
     これを使って対策しています (*Note Other Requirements::)。

     古い w3m コマンドでは正常に表示できません。w3m のバージョンを確認
     してください。

 * Q. Cookie が必要なページを閲覧できません。 (まだ実験的な機能です。)

     変数 `w3m-use-cookies' に `nil' 以外の値が設定されていることを確
     認してください。

 * Q. フォームに入力できません。 (まだ実験的な機能です。)

     変数 `w3m-use-form' に `nil' 以外の値が設定されていることを確認し
     てください。

 * Q. フォームを送信できません。 (まだ実験的な機能です。)

     変数 `w3m-use-form' に `nil' 以外の値が設定されていることを確認し
     てください。この機能を使うには、`-post' オプションを認識する w3m
     コマンドが必要です。w3m のバージョンを確認してください。

 * Q. フレームがレンダリングされません。 w3mmee をインストールして、以下の設定を `~/.emacs' ファイルに入れ
     てください:

          (setq w3m-command "w3mmee")

 * Q. GNU Emacs の tab 行に favicon が表示されないのですが。 Image Magick に含まれている `convert' プログラムをインストールし
     てください。`http://www.imagemagick.org/' から入手できます。

 * Q. GNU Emacs で favicon を表示しようとしたのですが、Emacs がロックしました。 * Q. Emacs-w3m を立ち上げようとしたら、激しく
     ディスクアクセスした後、`process convert exited abnormally with
     code 10' などと表示されました。どうなっているんでしょう?

     古いバージョンの Image Magick を使っていませんか?
     ImageMagick-5.2.1 に付属している `convert' を使っていると、そうな
     ることが知られています。ImageMagick-5.4.0-5 (以上) に付属している
     `convert' では、正常動作が確認されています。

     もし ImageMagick が使えない、または使いたくない場合は
     `~/.emacs-w3m' ファイルに

          (setq w3m-use-favicon nil)

     の設定を追加してください。

 * Q. なぜ emacs-w3m が w3mmee で動作しないのですか? もし `lang=en' または `lang=ja' で configure された w3mmee を使っ
     ているのならば、`lang=many' で configure し直して (それは
     `configure' スクリプトが `Which language do you prefer?' と尋ねた
     ときに 3 を入力することによってできます)、w3mmee を再構築してくだ
     さい。

 * Q. なぜ emacs-w3m で web ページが見えないのでしょうか?  ローカルな html ファイルを見たり、素の w3m を使う場合は問題無いのです
     が。

     ある Linux の配布 (例えば Gentoo Linux) が含んでいる w3m コマンド
     には、async パッチ (1) (*Note Trouble FAQ-Footnotes::) というもの
     が当たっています。それは素の w3m コマンドを使うときに有用なのです
     が、emacs-w3m をハングさせるかもしれません。それが疑われるならば、
     w3m コマンドをソースから再インストールすることを勧めます。

 * Q. なぜ emacs-w3m のフレームがポップアップしないのですか? Emacs-w3m のフレームが他のフレームの下に隠れていても、それ
     が `M-x w3m <RET>' コマンドでポップアップするのは、かなり便
     利です。しかし、`metacity' ウィンドウ・マネージャーが使われるいくつ
     かのプラットフォーム (例えば Fedora Linux) 上で作られた Emacs を走らせる
     場合に、それが働かないという報告がありました。それらのシステムでは、
     Emacs のフレームをポップアップさせる他の機能も動かないでしょう。もしあな
     たがそんな惨めな境遇にあるならば、以下の advice を試す価値があるかもしれ
     ません。

          (if (or (not window-system) (featurep 'xemacs))
              nil
            (defadvice raise-frame
              (after make-it-work (&optional frame) activate)
              "Make it work with the aid of wmctrl."
              (call-process
               "wmctrl" nil nil nil "-i" "-R"
               (frame-parameter (or frame (selected-frame))
                                'outer-window-id))))

     ここで `wmctrl' は、以下の場所で取得できる外部コマンドです。

     `http://sweb.cz/tripie/utils/wmctrl/'

     Advice を `~/.emacs' ファイルに書き込む前に、`wmctrl' コマンドを
     インストールしなければならないことに、注意してください。

     次のものは今のところ emacs-w3m では不要ですが、ある種のアプリケー
     ションが動作するために必要です。(前のものが必要な環境では、これを
     加えても失うものはありません。)

          (if (or (not window-system) (featurep 'xemacs))
              nil
            (defadvice pop-to-buffer (after enable-it-to-forcus-frame
                                            activate)
              "Enable it to focus frame if `pop-up-frames' is non-nil."
              (when pop-up-frames
                (let ((id (condition-case nil
                              (frame-parameter
                               (window-frame
                                (get-buffer-window (ad-get-arg 0)))
                               'outer-window-id)
                            (error nil))))
                  (when id
                    (call-process
                     "wmctrl" nil nil nil "-i" "-R" id))))))

     最後のものはたぶん要らないでしょう。しかし、いくつかのプラットフォー
     ムでは試してみる価値があるかもしれません。

          (if (or (not window-system) (featurep 'xemacs))
              nil
            (defadvice select-frame (around set-input-focus
                                            (frame) activate)
              "Run `select-frame-set-input-focus'."
              (setq ad-return-value (and (framep frame)
                                         (frame-live-p frame)
                                         frame))
              (ad-deactivate 'select-frame)
              (unwind-protect
                  (select-frame-set-input-focus frame)
                (ad-activate 'select-frame))))

     これらの対策は、次の Emacs のリリース (22.2 または 23.1) では不要
     になるでしょう。


File: emacs-w3m-ja.info  Node: Trouble FAQ-Footnotes, Up: Trouble FAQ

(1) w3m on cygwin (http://www.page.sannet.ne.jp/knabe/w3m/w3m.html)



File: emacs-w3m-ja.info, Node: Shimbun FAQ, Prev: Trouble FAQ, Up: Frequently Asked Questions

Shimbun に関する質問
====================

 * Q. なぜ `shimbun' モジュールがインストールされないのですか? FLIM パッケージがインストールされていないと、`shimbun' モジュール
     (`shimbun/' ディレクトリにあるファイル群) はインストールされない
     ことに注意してください。

     `configure' スクリプトは自動的に FLIM の有無を判定するよう設計さ
     れていますが、標準的ではないディレクトリに FLIM がインストールさ
     れていると、判定に失敗します。その場合は `--with-addpath' オプショ
     ンを使って、FLIM がインストールされているディレクトリを明示的に指
     定してください。例です:

          % ./configure --with-addpath=$HOME/share/emacs/site-lisp/flim



File: emacs-w3m-ja.info, Node: Known Problems, Next: Shimbun Library, Prev: Frequently Asked Questions, Up: Top

あなたならきっと解決できる
**************************




File: emacs-w3m-ja.info, Node: Shimbun Library, Next: Tips, Prev: Known Problems, Up: Top

ウェブ上の新聞を読むための道具
******************************

ウェブでは、ますます多くの新聞、メーリングリストのアーカイブ、掲示板、
あるいは個人の日記 (hyper nikki system、weblogs または blogs) が公開さ
れています。`Shimbun' ライブラリは、それらのコンテンツを貴方の好みのメー
ラーで読むことができるようにします。具体的には、それらのコンテンツを、
メールのように整形・整理する機能を提供します。

すべての `shimbun' モジュールは、普通のメールやニュースのように読むこ
とができる記事を生成することを目標にしています。しかしながら、ウェブサ
イトがそれらの記事の html をしばしば変更するので、その度に私たちは困難
にぶつかります。

もし、無意味な画像や、記事とは関係の無いテキストが現れるのに気がついた
ら、(たとえ些細なものでも) `report-emacs-w3m-bug' (*Note Mailing
List::) を使って報告してください。

`Shimbun' ライブラリは、現在、朝日新聞、読売オンライン、Emacs Devel、
XEmacs Beta、Gnus/Mew/Wanderlust などのメーリングリスト、Slashdot、
Slashdot Japan、および他のたくさんのものに対応しています。具体的には、
*Note Shimbun Sites:: を参照してください。

ところで、`Shimbun' ライブラリを利用する時は、著作権について注意が必要
です。`Shimbun' ライブラリによって加工・生成された記事の著作権は、その
記事を生成する元になったデータの著作者に帰属します。したがって、得られ
た記事を利用する場合は、元のデータの著作者の権利を侵害しない範囲を守る
法律上の義務があります。つまり、著作権法に定められた「私的利用」の範囲
を守らなければならない、ということです。

`Shimbun' ライブラリを利用したことによって、万が一あなたが不利益を被っ
たり、あなたが他者の権利を侵害したことによってあなたが訴えられたとして
も、emacs-w3m 開発チームは一切の責任を負いません。

`Shimbun' ライブラリはたくさんのモジュールのコレクションで、それらの各々
は単独では何の役にも立ちません。ここでは代表的な三つの `Shimbun' のア
プリケーションプログラム (それらのうちの二つは `Shimbun' ライブラリに
含まれています) と、あなたが自分で `Shimbun' モジュールを作る方法につ
いて説明します (Emacs Lisp プログラムを書くことができる必要があります)。

* Menu:

* Nnshimbun::                   Gnus をウェブブラウザにする!
* Mew Shimbun::                 Mew で新聞を読む
* Shimbun with Wanderlust::     Wanderlust で新聞を読む
* Shimbun local mode::          新聞の取得にシェルスクリプトを使う
* Shimbun Sites::               新聞が読めるサイト
* Shimbun Basics::              新聞モジュールの作り方

`Shimbun' ライブラリを利用するためには、emacs-w3m を構築してインストー
ルする前に FLIM パッケージ (加えて `nnshimbun' を使いたければ Gnus) を
インストールする必要があることに注意してください。FLIM パッケージには
APEL パッケージが必要です。あなたは *Note Other Requirements:: も見る
べきかもしれません。



File: emacs-w3m-ja.info, Node: Nnshimbun, Next: Mew Shimbun, Prev: Shimbun Library, Up: Shimbun Library

Gnus をウェブブラウザにする!
============================

`Nnshimbun' は Gnus のバックエンドです。しかしながら、例外的に Gnus で
はなくて emacs-w3m とともに配布されています。`Nnshimbun' は Gnus を並
外れて便利なウェブブラウザにすることができます。すべての広告に煩わされ
ずに新聞社のウェブサーバで記事を拾い読みすることができます。メーリング
リストの記事アーカイブを、そのリストに講読登録しているように読むことが
できます。掲示板の書き込みも読むことができます。等々... でも Gnus は
`nnshimbun' でウェブを介した投稿ができないので、フォローしたいときは
emacs-w3m を使わなければいけないことに注意してください。

さらに emacs-w3m で HTML メッセージを整形するには *Note Gnus:: も参照
してください。

`Nnshimbun' を始めるための一番簡単な方法は、グループバッファで以下のよ
うなことをすることです:

`M-x gnus-group-make-shimbun-group <RET> asahi <RET> national <RET>'

`asahi' と `national' は、接続したいサーバーに対応したキーワードと興味
のあるグループに、それぞれ置き換えてください。`<TAB>' か `<SPC>' をタ
イプすることによって、それらの名前を両方とも補完することができます。

もし `gnus-group-mode-map' に十分な空きがあるならば、以下のようなもの
を `~/.gnus.el' ファイルに加えてください:

     (eval-after-load "gnus-group"
       '(define-key gnus-group-mode-map "Gn"
          'gnus-group-make-shimbun-group))

すると、`M-x gnus-group-make-shimbun-group' の代わり
に `G n' を使うことができます。

*誰かこのキーを Gnus タワーに予約してくれませんか?*


この他に、`gnus-group-make-shimbun-groups' コマンドを使って、指定した
サーバーのすべてのグループを作ることができます。

`Nnshimbun' は単にウェブサーバから HTML コンテンツを取り寄せて、それを
記事として表示しますが、永続記事 (*Note 永続記事: (gnus-ja)Persistent
Articles.) を作る場合を除いて、ローカルファイルに記事をセーブすること
はありません。`Nnshimbun' は NOV ファイルを、それぞれの `nnshimbun' グ
ループで使います。そのバックエンドは `nnml' とほぼ同じです。

以下の `nnshimbun' に関する変数をカスタマイズすることが可能です:

`nnshimbun-keep-backlog'
     この変数は `nnshimbun' グループで `gnus-keep-backlog' 変数 (*Note
     記事のバックログ: (gnus-ja)Article Backlog.) を上書きします。もし
     `nnshimbun-keep-backlog' を数字 N に設定すると、`nnshimbun' は最
     大で N の古い記事を後の再取得のためにバッファに溜めておきます。こ
     の変数が `nil' ではなく、数字でもない場合、`nnshimbun' は *すべて
     * の既読記事を蓄えます (これは良い考えではありません)。デフォルト
     値は 300 です。

     `Nnshimbun' はあらかじめ取得した (prefetched) 記事の保存に
     backlog を使うので、小さすぎる値は `prefetch-articles' 機能 (下記
     参照) を損なうかもしれないことに注意してください。

`nnshimbun-directory'
     `Nnshimbun' が NOV ファイルと印ファイルを保存するディレクトリです。
     デフォルト値は `~/News/shimbun/' です。これはサーバー変数 (*Note
     サーバー変数: (gnus-ja)Server Variables.) です。

`nnshimbun-default-group-level'
     `gnus-level-default-subscribed' を上書きする、デフォルトのグルー
     プレベルです。新たに作られた `nnshimbun' グループに適用されます。
     デフォルト値は `nil' です。これはサーバー変数 (*Note サーバー変数:
     (gnus-ja)Server Variables.) です。

`Nnshimbun' は Gnus が提供する標準のグループパラメータ (1) (*Note
Nnshimbun-Footnotes::) に加えて、`nnshimbun' 専用に設けられたグルー
プパラメータを利用することができます。複数の `nnshimbun' 用のパラ
メータが `nnshimbun-group-parameters' という単一のグループパラメー
タ (すべてのグループで違う値を持つことができる) にまとめられています。
それはプロパティリストで、例えば次のような値です:

     '(index-range all prefetch-articles off encapsulate-images on
                   expiry-wait 6)

以降はこれらのグループパラメータと、関連する変数の説明です。

`prefetch-articles'
     このグループパラメータが `off' または `nil' 以外の何かに設定され
     ているグループでは、`nnshimbun' は新しい記事を探すだけではなく、
     それらの記事のダウンロードも行います。これは新しい記事の検索を遅
     くしますが、記事を閲覧するときに待たされません。このグループパラ
     メータが設定されていないか、その値が `nil' になっているグループで
     は、代わりに変数 `nnshimbun-pre-fetch-article' の値 (デフォルトは
     `off') が使われます。

`encapsulate-images'
     このグループパラメータが `off' または `nil' 以外の何かに設定され
     ているグループでは、`nnshimbun' は元の記事に埋め込まれている画像
     データを MIME の `multipart/related' パートとして記事にはめ込みま
     す。このグループパラメータが設定されていないか、その値が `nil' に
     なっているグループでは、代わりに変数
     `nnshimbun-encapsulate-images' の値が使われます。この変数
     `nnshimbun-encapsulate-images' のデフォルト値は、`shimbun' ライブ
     ラリによって提供される変数 `shimbun-encapsulate-images' の値です
     (たぶんデフォルト値は `t' です)。

`index-range'
     グループパラメータ `index-range' で、ウェブサーバーから取得される
     記事の範囲を指定することができます。範囲の指定には以下の値を使っ
     てください:

     `nil'
     `all'
          すべてのページ

     `last'
          最新のページだけ

     `integer N'
          最新の N ページ

     `Nnshimbun' はサーバー上に存在する目次ページを解析して新しい記事
     の有無を調べます。サーバーによってはそのような目次ページが複数存
     在する場合があります。例えば、メーリングリストの記事を提供してい
     るサーバーの場合は、その記事が投稿された日付によって分類された目
     次になっていることが一般的です。特に遅い回線を利用している時に、
     それらすべての巨大な目次を調べるには、相当な時間がかかるでしょう。

     `Nnshimbun' は前回の接続時に調べた目次については、なるべく調べず
     に済ませるようになっています。更に時間を節約したい場合は `last'
     を使ってください。これは `nnshimbun' に、最新の目次だけを参照して
     新しい記事の検査を行なわせます。

     グループパラメータ `index-range' が設定されていないか、値が `nil'
     になっているグループでは、変数 `nnshimbun-index-range' の値 (デフォ
     ルトは `2') が使われます。

`nnshimbun-group-parameters-alist'
     これは Emacs Lisp 変数で、グループ名の正規表現と `nnshimbun' 用グ
     ループパラメータの連想リストです。デフォルト値は `nil' です。各々
     の要素は `(REGEXP KEYWORD VALUE KEYWORD VALUE...)' の形式を持ちま
     す。例えば:

          '("^nnshimbun\\+asahi:" index-range all prefetch-articles off
            encapsulate-images on expiry-wait 6)

     似た名前を持つ (すなわち、互いに似た性格を持っていそうな) 複数の
     グループに対して同じ `nnshimbun' グループパラメータを指定すること
     ができるので、個々のグループに対してそれぞれグループパラメータを
     設定する代わりに使うことができて便利です。もしグループですでにグ
     ループパラメータの設定が行なわれていた場合は、この変数よりもそち
     らが優先されます。

`Nnshimbun' には記事の期限切れ消去を行なわせることができます (2)
(*Note Nnshimbun-Footnotes::)。記事が期限切れ消去されると言っても、そ
れが遠隔サーバーから削除されるわけではなく、それはずっとそこから取得可
能であることを覚えておいてください。消えるのはあなた自身の `nnshimbun'
用の NOV ファイル (3) (*Note Nnshimbun-Footnotes::) の、消去される記事
に該当する行です。それによってその記事は二度と概略バッファに現れなくな
ります。

`Nnshimbun' グループで記事の期限切れ消去を行なわないと NOV ファイルが
際限無く太り続け、非常に古い記事があたかも存在しているように見えるかも
しれません (実際には、それらは新聞社のサーバーで三年前に期限切れ消去さ
れてしまっているかもしれない!)。それを読もうとしても記事バッファには何
も現れないでしょう。一方、メーリングリストの記事を提供しているたいてい
のサーバーは、一般的に過去の全記事を提供しています。憂愁の彼方に去りし
古き良き時代に、あなたが興じた記事を懐かしくうるうるして読み返すことが
できるように、そういうグループでは期限切れ消去はさせたくないと思うかも
しれません。

他のメールバックエンドと同様に、`nnshimbun' のグループ毎に記事に自動期
限切れ消去の印を付けて、残しておく期間を設定することができます。ただし
`nnshimbun' バックエンドと他のメールバックエンドには、少し違いがありま
す:

 * 第一に、残しておく期間のデフォルト値は以下の優先度で決定されます。グループによってデフォルト値が異なるかもしれないことに注意
     してください。

      1. グループにおける `expiry-wait' グループパラメータの値。そのグループを対象として、変数`nnmail-expiry-wait-function' を評価することによって得られた
          値。

      3. グループに対応する `shimbun' モジュールが提供するデフォルト値。

      4. 変数 `nnmail-expiry-wait' の値。変数
     `nnmail-expiry-wait-function' によって設定される関数に与えられる
     引数に、"nnshimbun+asahi:national" のようにバックエンドとサーバー
     の名前が含まれることです。他のメールバックエンドの場合にはグルー
     プ名だけが与えられるのに、です。例を挙げましょう:

          (setq nnmail-expiry-wait-function
                (lambda (group)
                  (cond ((string-equal group "ding") 7)
                        ((string-equal group "nnshimbun+ding:ding") 'never))))

     これは、同じ ding メーリングリスト用に二つのグループがあることを
     意味します: 一つはリストのメンバーとして講読登録しています。もう
     一つは Gnus タワーのメーリングリストアーカイブから読むためのもの
     です。どうです、なかなか賢いでしょ?  "ding" グループのローカルな
     メールファイルは七日で期限切れ消去され、ローカルディスクの容量が
     節約されます。しかし二つ目のグループでは、前世紀の記事でさえ読む
     ことができます (それが本当に必要ならば、ですが)。

     第三に、これはあなたに疑念が沸いたときに思い出すことができるよう
     に書き留められています: `nnshimbun' グループのすべての記事が期限
     切れ消去されるべきときでも、最新の一通だけは消さずに残しておきま
     す。これはあなたの未練心を満足させるためではなく、次回にこのグルー
     プの新しい記事を取得しようとしたときに、`nnshimbun' がどこから始
     めるかを知って、すべての記事を取得し直さないようにするためです。

`Nnshimbun' の期限切れ消去に関係するグループパラメータと変数は以下の通
りです:

`expiry-wait'
     どうか混乱なさらないように。`expiry-wait' グループパラメータが
     `nnshimbun' 専用に作られたグループパラメータ
     `nnshimbun-group-parameters' の要素の一つとして提供されます。それ
     は標準のグループパラメータと同じ名前を持ち、意味も同じです。あな
     たはどちらを使っても構いません。もし `nnshimbun' 専用のものが
     `nil' 以外の値に設定されると、標準のものよりも優先されます。これ
     は `nnshimbun' に関係するものを "Gnus Customize" バッファ (グルー
     プバッファで `G c' をタイプすると現れる) の一箇所に集めるためと、
     変数 `nnshimbun-group-parameters-alist' で一括して管理できるよう
     にすることを目的に用意したものです (4) (*Note
     Nnshimbun-Footnotes::)。設定できる値は標準のグループパラメータと
     同様に、時限消去の日数、`never' または `immediate' です。

`nnshimbun-keep-unparsable-dated-articles'
     この変数の値が `nil' でない場合は、作成された (または到着した) 時
     刻がわからない記事は期限切れ消去されません。なにしろどのくらい古
     いのかわからないんですから。デフォルト値は `t' です。`nil' に設定
     すると、期限切れ消去の処理が行なわれるときに、期限がわからない記
     事でも無条件で消されてしまいます。まあ、年の暮れの大掃除の役には
     立つことが判明するかもしれません。


File: emacs-w3m-ja.info  Node: Nnshimbun-Footnotes, Up: Nnshimbun

(1) グループパラメータを設定するための最も手軽な方法は、グループバッファ
で、設定したいグループの場所に移動してから `G c' をタイプする
ことです (*Note グループパラメーター: (gnus-ja)Group Parameters.)。

(2) `Nnshimbun' グループで自動期限切れ消去を行なう方法は主に二つ
あります。一つはグループ名の正規表現 ("^nnshimbun\\+" で始まらなければ
なりません) を変数 `gnus-auto-expirable-newsgroups' に追加して、
消去するまでの日数を各グループ毎に `nnmail-expiry-wait-function'
で指定することです。もう一つは、自動期限切れ消去を行なわせたいたいすべ
ての `nnshimbun' グループで、グループパラメータ
`auto-expire' を `t' に設定して、グループパラメータ
`expiry-wait' で消去するまでの期限を指定するやり方です。詳しいこ
とは *Note メールの期限切れ消去: (gnus-ja)Expiring Mail, を参照してください。`expiry-wait' グループパラメータが設
定されていないグループでは、デフォルトの値が適用されます。

(3) `Nnshimbun'用の NOV ファイルは
"~/News/shimbun/asahi/national/.overview" のような名前です。

(4) なぜ `auto-expire' などが `nnshimbun' 専用のグルー
プパラメータに含まれないの? という問いに対する答えをすでに用意し
ています。その答えとは、`expiry-wait' が `nnshimbun' バッ
クエンドによって取り扱われるのに対して、`auto-expire' は
Gnus の中枢が取り扱います。したがって、Gnus が一つの特定のバック
エンドのために働く (すなわち、`nnshimbun' 専用のグループパラ
メータから値を読む) ように Gnus の中枢機能を拡張することは、Gnus
の設計ポリシーに反するのです。



File: emacs-w3m-ja.info, Node: Mew Shimbun, Next: Shimbun with Wanderlust, Prev: Nnshimbun, Up: Shimbun Library

Mew で新聞を読む
================

Mew Shimbun は `shimbun' と Mew (version 2.1 以降) とともに使うことを
意図した Emacs Lisp プログラムです。Mew, APEL および FLIM もインストー
ルされていれば、emacs-w3m をインストールするときに一緒にインストールさ
れます。

*Note Mew:: も参照することをお勧めします。

 1. 諸設定 以下の各行を `~/.mew.el' ファイルの最後に書いてください:

     ;;; mew-shimbun のロード、キー定義

     ;; (setq mew-shimbun-use-unseen t) ;; (1) (*Note Mew
        Shimbun-Footnotes::)
     (require 'mew-shimbun)
     (define-key mew-summary-mode-map "G"  (make-sparse-keymap))
     (define-key mew-summary-mode-map "Gg" 'mew-shimbun-goto-folder)
     (define-key mew-summary-mode-map "GG" 'mew-shimbun-goto-unseen-folder)
     (define-key mew-summary-mode-map "Gi" 'mew-shimbun-retrieve)
     (define-key mew-summary-mode-map "GI" 'mew-shimbun-retrieve-all)
     (define-key mew-summary-mode-map "Gr" 'mew-shimbun-re-retrieve)
     (define-key mew-summary-mode-map "GR" 'mew-shimbun-re-retrieve-all)
     (define-key mew-summary-mode-map "Ge" 'mew-shimbun-expire)
     (define-key mew-summary-mode-map "GE" 'mew-shimbun-expire-all)

     ;; `mew-shimbun-folder-groups' に Mew で購読する `shimbun' servers 及び
     ;; group を設定します。それぞれの要素は
     ;; `("folder" ("server.group" . range) ...)' の形式です。`range' には
     ;; `all', `last', および数字が指定できます。

     (setq mew-shimbun-folder-groups
           '(;; `+shimbun/yomiuri' という folder に `yomiuri.national',
             ;; `yomiuri.sports' などを一括して取得します。
             ("yomiuri"
              ("yomiuri.national" . 2)
              ("yomiuri.sports". 2)
              ("yomiuri.world". 2))
             ;; `+shimbun/security-memo' に `security-memo.memo' を取得します。
             ("security-memo"
              ("security-memo.memo" . 2))
             ("slashdot-jp"
              ("slashdot-jp.story" . last))
             ;; このように、異なる server の group も一つの folder
             ;; (`+shimbun/emacs') で読むことができます。
             ("emacs"
              ("airs.wl" . last)
              ("emacs-w3m.emacs-w3m" . last))
             ;; `+shimbun/hns/arisawa', `+shimbun/hns/miyoshi' にそれぞれの
             ;; 日記を取得します。
             ("hns/arisawa"
              ("hns.arisawa" . last))
             ("hns/miyoshi"
              ("hns.miyoshi" . last))))

     以上で基本的な設定は終了です。他のユーザ定義変数は `mew-shimbun' グ
     ループを `M-x customize-group' するか、ソースを見てください。

 2. 記事の購読  a. 最初の購読 上記の設定をしたあと、まず `G I' しましょ
          う (`mew-shimbun-retrieve-all')。
          `mew-shimbun-folder-groups' で種々の設定を行なった `shimbun'
          folder が `+shimbun' 以下に出来ます。また、新たに group を追加した
          ときも `G I' すると便利です。なお、
          `+shimbun' は `mew-shimbun-folder' という変数で好みのものに変
          更できます。

       b. `shimbun' folder への移動

          通常の `g' (`mew-summary-goto-folder') でも `shimbun'
          folder への移動はできますが、
          `G g' (`mew-shimbun-goto-folder') を使うと `shimbun'
          folder 限定で移動できます。また `C-u G g' と prefix をつけたとき
          は、新規記事のある folder (まだ scan をしていない folder) のみ表示します。
          `G G' でも同様です。

      c.  folder 単位での記事の取得 `shimbun' folder で `G i' (`mew-shimbun-retrieve') す
          ると、現在の `shimbun' folder で新規記事を取得します。

      d. 更新された記事の取得 特定の記事を表示した状態
          で `G r' (`mew-shimbun-re-retrieve') すると、その記事が更新
          されていたら更新し、同時に新規記事も取得します。`C-u G r' とする
          と、`mew-shimbun-mark-re-retrieve' に指定したマーク (デフォルト値
          は `@') の記事の更新を試みます。CNET などで使うと便利でしょう。

          `G R' (`mew-shimbun-re-retrieve-all') では、すべての記事の
          新規性を調べ取得しなおします。`C-u G R' ではリージョンで指定した
          範囲の記事を対象とします。おそらくハイパー日記システムが稼働している日記
          サイトでは有意義なコマンドでしょう。

 3. 未読管理 `~/.mew.el' ファイルで以下の設定を行なっていると、

          (setq mew-shimbun-use-unseen t)

     新規に取得した記事に `mew-shimbun-mark-unseen' で設定したマーク
     (デフォルトは `*') がつくようになり、読むと自動的に消えます。

     通常、Mew の summary モードでマークをつける、あるいは消した後、
     scan をしないと `.mew-cache' ファイルに反映されませんが、
     `~/.mew.el' ファイルで以下の設定を行なうことにより、

          (setq mew-shimbun-use-unseen-cache-save t)

     Mew の終了時や folder の kill 時 (`C-c C-q' を使ったとき) に
     `shimbun' folder は自動的に `.mew-cache' ファイルを保存するように
     なります。ただし、確実 (2) (*Note Mew Shimbun-Footnotes::)に保存
     するわけではありません。既読になった情報を確実に cache に保存する
     には、その folder を読み終わったときに `scan update' をする
     習慣をつけると良いでしょう。

     未読に使うマークが `*' じゃダメ、という方は、変
     数 `mew-shimbun-mark-unseen' をカスタマイズしてください (上述)。
     `C-u N' でそのマークを指定すると楽しい未読ライフをおくることがで
     きると思います。

 4. 期限切れ記事の消去 事前に `mew-shimbun-expires' を設定しておくと、期限切れ記事の消去
     を行なうことができます。例えば:

          (setq mew-shimbun-expires
                '(("yomiuri" . 7)
                  ("asahi" . 1)
                  ("slashdot-jp" . 7)
                  ("emacs" . 7)))

     上記のように設定しておくと、`+shimbun/yomiuri' は 7日、
     `+shimbun/asahi' は 1日と期限を設定することができます。指定されてい
     ない `shimbun' folder は消去しません。`G e'
     (`mew-shimbun-expire') でその folder の期限切れ記事を消去します。
     `G e' (`mew-shimbun-expire') で設定したすべての folder で記
     事の消去を実行します。なお、一度消去した記事は復旧出来ませんので注意して
     ください。

 5. 未読マークとして `$' を追加する方法 `$' マークを新たに作成し、`$' マークを未読マークとして使うには、
     次の記述を `~/.mew.el' ファイルに記述してください。なお、`$' 以外
     の記号にしたければ、
     `http://www.mew.org/ml/mew-dist-2.0/msg01251.html' を参照して記述
     を生成してください。

     ;;----------------------------------------------------------------------
     ;;; `$' を未読マークとして使うための記述
     (setq mew-mark-unseen ?$)
     (setq mew-shimbun-mark-unseen mew-mark-unseen)
     (setq mew-mark-show-list (cons mew-mark-unseen mew-mark-show-list))
     (setq mew-mark-afterstep-spec
           (cons (cons mew-mark-unseen '(1 0 1 0 0 0 0))
                 mew-mark-afterstep-spec))
     (setq mew-mark-spec
           (cons (list mew-mark-unseen "unseen" 0 nil nil nil nil nil)
                 mew-mark-spec))
     (setq mew-highlight-mark-keywords
           (cons
            (cons mew-mark-unseen 'mew-face-mark-unseen)
            mew-highlight-mark-keywords))
     (defface mew-face-mark-unseen
       '((((class color) (type tty))
          (:foreground "green"))
         (((class color) (background light))
          (:foreground "deep pink" :bold t :italic t))
         (((class color) (background dark))
          (:foreground "thistle"))
         (t (:bold t)))
       "*Face to highlight the unseen mark"
       :group 'mew-highlight)
     (defun mew-summary-unseen (&optional count)
       "Put the unseen mark(default is '$') in COUNT times."
       (interactive "P")
       (mew-mark-put-mark-loop (function mew-summary-unseen-one) count nil))
     (defun mew-summary-unseen-one (&optional no-msg)
       "Put the unseen mark(default is '$') on this message."
       (mew-mark-put-mark mew-mark-unseen no-msg))
     (defun mew-summary-mark-unseen ()
       "Change the '*' mark into the '$' mark."
       (interactive)
       (mew-summary-exchange-mark mew-mark-review mew-mark-unseen))
     (defun mew-thread-mark-unseen ()
       "Put the '$' mark on all messages of the current sub-thread."
       (interactive)
       (mew-thread-mark mew-mark-unseen))

     (define-key mew-summary-mode-map "$"  'mew-summary-unseen)
     (define-key mew-summary-mode-map "m$" 'mew-summary-mark-unseen)
     (define-key mew-summary-mode-map "t$" 'mew-thread-mark-unseen)
     ;;----------------------------------------------------------------------


File: emacs-w3m-ja.info  Node: Mew Shimbun-Footnotes, Up: Mew Shimbun

(1) 未読管理をするときはコメントを外してください。この変数は必ず
`(require 'mew-shimbun)' の前で設定しないといけません。

(2) `mew-touch-folder-p' が `t' の人はほぼ 100% 保存で
きますが、`nil' の人が保存できる可能性はほとんど 0% だと思わ
れます。



File: emacs-w3m-ja.info, Node: Shimbun with Wanderlust, Next: Shimbun local mode, Prev: Mew Shimbun, Up: Shimbun Library

Wanderlust で新聞を読む
=======================

Wanderlust には ELMO モジュールの一つとして `elmo-shimbun' が含まれて
いるので、名前が `@' で始まるフォルダにアクセスするだけで `shimbun' を
読むことができます (*Note Shimbun Folder: (wl-ja)Shimbun Folder.)。



File: emacs-w3m-ja.info, Node: Shimbun local mode, Next: Shimbun Sites, Prev: Shimbun with Wanderlust, Up: Shimbun Library

新聞の取得にシェルスクリプトを使う
==================================

たくさんの新聞を読んでいると、新しい記事をチェックするのにいくらか時間
がかかるでしょう。それは emacs-w3m が索引を一つずつ取得するからです。
これを高速に行ないたいなら、索引の取得にシェルスクリプトを使うことがで
きます。スクリプトは手動で (例えば Emacs の中から) 作動させても良いし、
cron のようなスケジューラを介して自動で走らせることもできます。索引は
特別な名前のファイルにセーブされ、その後 emacs-w3m は w3m を呼ぶ代わり
にそれらのファイルを使うようになります。

以下の変数で、その「ローカルモード」を制御します:

`shimbun-use-local'
     これを `t' に設定することによってローカルモードを有効にします。そ
     うすると、もしローカルファイルとして索引が用意できていれば、
     emacs-w3m は最初にそれをチェックします。もしそれが見つからなかっ
     たら、通常通り w3m を通して取得します。

`shimbun-local-path'
     新聞の (索引の) ファイルを格納するディレクトリです。デフォルトは
     `w3m-default-save-directory' です。

索引のためのファイルの名前は、URL の MD5 を最初の 10 文字に切り詰めた
ものの後ろに `_shimbun' という文字列をくっつけたものになります。次のよ
うに Emacs で簡単に索引のためのファイルを生成することができます:

     (concat (substring (md5 "http://example/feed") 0 10) "_shimbun")

Gnus と `nnshimbun' を使っている人たちのために、シェルスクリプトを生成
する関数がすでにあります。それを使って、現在講読しているすべての
shimbun グループの索引をダウンロードすることができます。単に
`nnshimbun-generate-download-script' を呼んでください。すると新しいバッ
ファにシェルスクリプトが生成されるので、後でセーブしてください。接頭引
数を付けてその関数を呼ぶと、索引の取得を並行して行なうために、すべての
w3m 呼び出しに `&' を付けます。



File: emacs-w3m-ja.info, Node: Shimbun Sites, Next: Shimbun Basics, Prev: Shimbun local mode, Up: Shimbun Library

新聞が読めるサイト
==================

`Shimbun' ライブラリが対応しているサイトの一覧表です。

* Menu:

* Newspapers Supported by Shimbun::     新聞社
* News Sites Supported by Shimbun::     ニュースサイト
* Mailing Lists Supported by Shimbun::  メーリングリスト
* Sport Sites Supported by Shimbun::    スポーツ
* Misc Sites Supported by Shimbun::     その他



File: emacs-w3m-ja.info, Node: Newspapers Supported by Shimbun, Next: News Sites Supported by Shimbun, Prev: Shimbun Sites, Up: Shimbun Sites

新聞社
------

`Shimbun' ライブラリが対応している新聞社です。

朝日新聞 (http://www.asahi.com/)
     asahi.book asahi.book.column asahi.book.news asahi.book.paperback
     asahi.book.review asahi.book.special asahi.business asahi.car
     asahi.culture asahi.digital asahi.editorial asahi.edu
     asahi.english asahi.food asahi.health asahi.housing asahi.igo
     asahi.international asahi.international.asia
     asahi.international.column asahi.international.special
     asahi.international.world asahi.job asahi.kansai
     asahi.kansai.entertainment asahi.kansai.kokoro asahi.kansai.sumai
     asahi.kansai.taberu asahi.komimi asahi.life asahi.life.column
     asahi.national asahi.politics asahi.rss asahi.science
     asahi.shopping asahi.shopping.column asahi.shopping.yakimono
     asahi.shougi asahi.sports asahi.sports.baseball
     asahi.sports.battle asahi.sports.etc asahi.sports.football
     asahi.sports.golf asahi.sports.rugby asahi.sports.usa
     asahi.sports.winter asahi.tenjin asahi.travel asahi.wakata

     これらのグループは、デフォルトでテキストだけの記事を作ります。そ
     れらに、テキストだけでなく写真をも含む HTML の記事を生成させたい
     ならば、以下の行を `~/.emacs' ファイルに加えてください。

          (setq shimbun-asahi-prefer-text-plain nil)

     一方、HTML の記事を作るために `asahi-html' バックエンドを使うこと
     もできます。それを使うには、例えばグループ名として
     `asahi.business' の代わりに `asahi-html.business' を指定してくだ
     さい。

朝日新聞 (http://mytown.asahi.com/)
     asahi-mytown.(hokkaido...okinawa)

     日本の全都道府県を網羅する朝日新聞の地方版です。

BBC (http://www.bbc.co.uk/)
     bbc.news

ディー・ヴェルト (http://www.welt.de/)
     welt-de.news

ディー・ツァイト (http://www.zeit.de/)
     zeit-de.auto zeit-de.computer zeit-de.deutschland
     zeit-de.feuilleton zeit-de.gesundheit zeit-de.international
     zeit-de.leben zeit-de.literatur zeit-de.musik zeit-de.news
     zeit-de.reisen zeit-de.schule zeit-de.sport zeit-de.studium
     zeit-de.wirtschaft zeit-de.wissen zeit-de.zuender

日刊ゲンダイ (http://www.nikkan-gendai.com/)
     nikkangendai.top nikkangendai.news nikkangendai.geino
     nikkangendai.sports nikkangendai.life nikkangendai.book
     nikkangendai.gourmet

毎日jp (http://mainichi.jp/)
(2007年10月に MSN から自社サイトに移行)
     mainichi.flash mainichi.sports mainichi.entertainment
     mainichi.mantan mainichi.electronics mainichi.weekly
     mainichi.opinion.editorial mainichi.opinion.yoroku
     mainichi.opinion.hasshinbako mainichi.opinion.eye
     mainichi.opinion.hito mainichi.opinion.kinji
     mainichi.opinion.yuraku mainichi.opinion.closeup
     mainichi.opinion.kaisetsu mainichi.opinion.newsup
     mainichi.opinion.jidainokaze mainichi.entertainment.art
     mainichi.fuchisou

     これらのグループは、デフォルトで写真をも含む HTML の記事を作りま
     す。それらに、テキストだけの記事を生成させたいならば、以下の行を
     `~/.emacs' ファイルに加えてください。

          (setq shimbun-mainichi-prefer-text-plain t)

ニューヨークタイムズ (http://www.nytimes.com/)
     nytimes.homepage nytimes.news.business
     nytimes.news.business.media&advertising
     nytimes.news.business.worldbusiness
     nytimes.news.business.smallbusiness
     nytimes.news.business.yourmoney nytimes.news.business.dealbook
     nytimes.news.education nytimes.news.health
     nytimes.news.health.policy nytimes.news.health.psychology
     nytimes.news.world nytimes.news.world.africa
     nytimes.news.world.americas nytimes.news.world.asia
     nytimes.news.world.europe nytimes.news.world.middleeast
     nytimes.news.us nytimes.news.newyork nytimes.news.newyork.thecity
     nytimes.news.newyork.metro nytimes.news.obituaries
     nytimes.news.science nytimes.news.science.earth
     nytimes.news.science.nutrition nytimes.news.science.space
     nytimes.news.sports nytimes.news.sports.basketball.college
     nytimes.news.sports.football.college nytimes.news.sports.golf
     nytimes.news.sports.hockey nytimes.news.sports.other
     nytimes.news.sports.baseball.pro
     nytimes.news.sports.basketball.pro
     nytimes.news.sports.football.pro nytimes.news.sports.soccer
     nytimes.news.technology nytimes.news.technology.bits
     nytimes.news.technology.circuits nytimes.news.technology.pogue
     nytimes.news.washington nytimes.features.arts
     nytimes.features.arts.design nytimes.features.arts.music
     nytimes.features.arts.television nytimes.features.automobiles
     nytimes.features.books nytimes.features.books.review
     nytimes.features.dining&wine nytimes.features.fashion
     nytimes.features.fashion.thursdaystyles
     nytimes.features.fashion.weddings nytimes.features.home&garden
     nytimes.features.jobs nytimes.features.magazine
     nytimes.features.movie.news nytimes.features.movie.reviews
     nytimes.features.realestate nytimes.features.theater
     nytimes.features.travel nytimes.features.travel.escapes
     nytimes.features.week_in_review nytimes.additional.pop_top
     nytimes.opinion.editorial

     2007年9月19日、ニューヨークタイムズは無料でニュース記事を提供し始
     めました。`charset=iso-8859-1' と言ったのにもかかわらず、このサイ
     トはしばしば `iso-8859-1' の上位互換文字セットである
     `windows-1252' を使います。使用している (X)Emacs に
     `windows-1252' coding system があれば、`shimbun' は (そして
     emacs-w3m も) そのような場合でも動作します。

日刊スポーツ (http://www.nikkansports.com/)
     nikkansports.flash nikkansports.baseball
     nikkansports.baseball.highschool nikkansports.baseball.amateur
     nikkansports.baseball.mlb nikkansports.soccer
     nikkansports.soccer.japan nikkansports.soccer.world
     nikkansports.sports nikkansports.sumo nikkansports.nba
     nikkansports.nfl nikkansports.nhl nikkansports.rugby
     nikkansports.golf nikkansports.motor nikkansports.battle
     nikkansports.race nikkansports.race.kka
     nikkansports.entertainment nikkansports.cinema
     nikkansports.general

日本経済新聞 (http://www.nikkei.co.jp/)
     nikkei.top nikkei.main nikkei.keizai nikkei.sangyo nikkei.tento
     nikkei.kansai nikkei.it.business nikkei.it.busi_gyoukai
     nikkei.it.biz-system nikkei.it.sox nikkei.it.data
     nikkei.it.taidan nikkei.it.internet nikkei.it.broad
     nikkei.it.net_gyoukai nikkei.it.iptel nikkei.it.tele
     nikkei.it.broadcast nikkei.it.internet-column nikkei.it.contents
     nikkei.it.ec nikkei.it.policy nikkei.it.e-gov nikkei.it.mobile
     nikkei.it.mob_gyoukai nikkei.it.mobsoft nikkei.it.mobcon
     nikkei.it.money nikkei.it.one nikkei.it.security
     nikkei.it.net_crime nikkei.it.digital nikkei.it.pc nikkei.kokunai
     nikkei.markets nikkei.kawase nikkei.kinri nikkei.ft nikkei.dj
     nikkei.ngyoseki nikkei.gyosuuchi nikkei.gyoseki nikkei.china
     nikkei.market nikkei.kaigai nikkei.seiji nikkei.shakai
     nikkei.retto nikkei.sports nikkei.newpro nikkei.release
     nikkei.release.it.comp nikkei.release.it.peri
     nikkei.release.it.sys nikkei.release.it.cont
     nikkei.release.it.net nikkei.release.it.lsi
     nikkei.release.it.game nikkei.release.it.etc
     nikkei.release.dist.depart nikkei.release.dist.ryohan
     nikkei.release.dist.zakka nikkei.release.dist.cosme
     nikkei.release.dist.car nikkei.release.dist.book
     nikkei.release.dist.record nikkei.release.dist.food
     nikkei.release.dist.mercha nikkei.release.dist.mail
     nikkei.release.dist.netshop nikkei.release.dist.etc
     nikkei.release.money.bank nikkei.release.money.sec
     nikkei.release.money.am nikkei.release.money.insu
     nikkei.release.money.etc nikkei.release.maker.chemi
     nikkei.release.maker.mecha nikkei.release.maker.car
     nikkei.release.maker.elec nikkei.release.maker.food
     nikkei.release.maker.sports nikkei.release.maker.apparel
     nikkei.release.maker.commu nikkei.release.maker.etc
     nikkei.release.service.medic nikkei.release.service.rest
     nikkei.release.service.trans nikkei.release.service.energy
     nikkei.release.service.enter nikkei.release.service.env
     nikkei.release.service.consul nikkei.release.service.edu
     nikkei.release.service.haken nikkei.release.service.life
     nikkei.release.service.media nikkei.release.service.lease
     nikkei.release.service.travel nikkei.release.service.etc
     nikkei.release.const.const nikkei.release.const.house
     nikkei.release.const.etc nikkei.shasetsu

産経ニュース (http://www.sankei.com/)
     sankei.affairs sankei.column sankei.column.editorial
     sankei.column.sankeisyo sankei.column.seiron sankei.economy
     sankei.entertainments sankei.flash sankei.life sankei.politics
     sankei.region.chubu sankei.region.chugoku-shikoku
     sankei.region.hokkaido-tohoku sankei.region.kanto
     sankei.region.kinki sankei.region.kyushu-okinawa sankei.sports
     sankei.top sankei.west.affairs sankei.west.economy
     sankei.west.flash sankei.west.life sankei.west.sports
     sankei.world

Spiegel Online (http://www.spiegel.de/)
     spiegel.news

スポニチ (http://www.sponichi.co.jp/)
     sponichi.baseball sponichi.soccer sponichi.usa sponichi.others
     sponichi.society sponichi.entertainment sponichi.horseracing

南ドイツ新聞 (http://www.sueddeutsche.de/)
     sueddeutsche-de.alles sueddeutsche-de.nachrichten
     sueddeutsche-de.politik sueddeutsche-de.wirtschaft
     sueddeutsche-de.finanzen sueddeutsche-de.kino
     sueddeutsche-de.kultur sueddeutsche-de.sport
     sueddeutsche-de.muenchen sueddeutsche-de.panorama
     sueddeutsche-de.leben sueddeutsche-de.gesundheit
     sueddeutsche-de.computer

讀売新聞 (http://www.yomiuri.co.jp/)
     yomiuri.atmoney yomiuri.editorial yomiuri.entertainment
     yomiuri.iryou yomiuri.kyoiku yomiuri.kyoiku.children
     yomiuri.kyoiku.english yomiuri.kyoiku.qanda
     yomiuri.kyoiku.renaissance yomiuri.kyoiku.special
     yomiuri.national yomiuri.politics yomiuri.science yomiuri.sports
     yomiuri.world

     これらのグループは、デフォルトでテキストだけの記事を作ります。そ
     れらに、テキストだけでなく写真をも含む HTML の記事を生成させたい
     ならば、以下の行を `~/.emacs' ファイルに加えてください。

          (setq shimbun-yomiuri-prefer-text-plain nil)

     一方、HTML の記事を作るために `yomiuri-html' バックエンドを使うこ
     ともできます。それを使うには、例えばグループ名として
     `yomiuri.atmoney' の代わりに `yomiuri-html.atmoney' を指定してく
     ださい。

虚構新聞 (http://kyoko-np.net/)
     kyoko-np.rss



File: emacs-w3m-ja.info, Node: News Sites Supported by Shimbun, Next: Mailing Lists Supported by Shimbun, Prev: Newspapers Supported by Shimbun, Up: Shimbun Sites

ニュースサイト
--------------

`Shimbun' ライブラリが対応しているニュースサイトです。

Al Jazeera (http://english.aljazeera.net/)
     aljazeera.news aljazeera.africa aljazeera.america
     aljazeera.asia-pacific aljazeera.central-asia aljazeera.europe
     aljazeera.middle-east aljazeera.focus aljazeera.business
     aljazeera.sport aljazeera.programmes

CNET (http://news.com.com/)
     cnet.news cnet.enterprise.software cnet.enterprise.hardware
     cnet.security cnet.networking cnet.personal.technology
     cnet.newsmakers cnet.perspectives

CNET Japan (http://japan.cnet.com/)
     cnet-jp.general cnet-jp.news cnet-jp.special cnet-jp.opinion
     cnet-jp.blog.geetstate cnet-jp.blog.kenn cnet-jp.blog.lessig
     cnet-jp.blog.matsumura cnet-jp.blog.nakajima cnet-jp.blog.saeki
     cnet-jp.blog.sakamoto cnet-jp.blog.sasaki cnet-jp.blog.sentan
     cnet-jp.blog.staff cnet-jp.blog.takawata cnet-jp.blog.watanabe

CNN Japan (http://www.cnn.co.jp/)
     cnn-jp.business cnn-jp.fringe cnn-jp.science cnn-jp.showbiz
     cnn-jp.sports cnn-jp.top cnn-jp.usa cnn-jp.world

De-Bug Magazine (http://www.de-bug.de/)
     debugmagazin-de.frontpage debugmagazin-de.musik
     debugmagazin-de.reviews debugmagazin-de.magazin
     debugmagazin-de.medien debugmagazin-de.podcast
     debugmagazin-de.musiktechnik debugmagazin-de.screen
     debugmagazin-de.gadgets debugmagazin-de.games
     debugmagazin-de.mode

Engadget Japanese (http://japanese.engadget.com/)
     engadget-ja.top

エキサイト ニュース (http://www.excite.co.jp/)
     excite.bit-koneta excite.world-odd

自由労働者同盟ドイツ (http://www.fau.org/)
     fau.news

ハイゼ・オンライン (http://www.heise.de/)
     heise.news heise.telepolis

Infoshop News (http://news.infoshop.org/)
     infoshop.news

インプレス (http://www.watch.impress.co.jp/)
     impress.enterprise impress.pc impress.dc impress.akiba impress.av
     impress.game impress.k-tai impress.internet impress.bb
     impress.forest impress.robot impress.kaden impress.car

ITmedia (http://www.itmedia.co.jp/)
     itmedia.news.bursts itmedia.news.domestic itmedia.news.foreign
     itmedia.news.products itmedia.news.technology itmedia.news.web20
     itmedia.news.nettopics itmedia.news.society itmedia.news.security
     itmedia.news.industry itmedia.news.research itmedia.news.sp_amd
     itmedia.anchordesk itmedia.bizid itmedia.enterprise
     itmedia.+D.plusd itmedia.+D.mobile itmedia.+D.pcupdate
     itmedia.+D.lifestyle itmedia.+D.games itmedia.+D.docomo
     itmedia.+D.au_kddi itmedia.+D.vodafone itmedia.+D.shopping
     itmedia.+D.lifestyle.column.asakura
     itmedia.+D.lifestyle.column.honda
     itmedia.+D.lifestyle.column.kobayashi
     itmedia.+D.lifestyle.column.kodera
     itmedia.+D.lifestyle.column.nishi
     itmedia.+D.lifestyle.column.ogikubo
     itmedia.+D.lifestyle.column.tachibana
     itmedia.+D.lifestyle.column.takemura
     itmedia.+D.lifestyle.column.unakami

Japan Times (http://www.japantimes.co.jp/)
     japantimes.general japantimes.business

LAUT AG (http://www.laut.de/)
     laut-de.news laut-de.platten laut-de.platten_alternative
     laut-de.platten_dance laut-de.platten_hiphop platten_jazz
     laut-de.platten_metal laut-de.platten_pop laut-de.platten_rnb
     laut-de.platten_rock

N24 (http://www.n24.de/)
     n24-de.boerse n24-de.boulevard n24-de.nachrichten n24-de.netnews
     n24-de.politik n24-de.sport n24-de.wirtschaft

Open Tech Press (http://opentechpress.jp/)
     opentechpress-jp.general opentechpress-jp.enterprise
     opentechpress-jp.opensource opentechpress-jp.security
     opentechpress-jp.news opentechpress-jp.pr

Perlentaucher (真珠採り) (http://www.perlentaucher.de/)
     perlentaucher-de.aktuell

Rediff.com (http://www.rediff.com/)
     rediff.news

Slashdot (http://www.slashdot.org/)
     slashdot.frontpage slashdot.apple slashdot.askslashdot
     slashdot.books slashdot.developers slashdot.games
     slashdot.hardware slashdot.interviews slashdot.IT slashdot.linux
     slashdot.mobile slashdot.politics slashdot.science

     Slashdot shimbun のコメントの部分を設定するための以下の変数があり
     ます:

     `shimbun-slashdot-get-comments'
          もし `t' に設定されていると (それがデフォルトです)、すべての
          記事のコメントを取得します。それらはフォームフィード文字
          ("^L" のこと) でイントロ・テキストから分離されます。それらを
          見るには、いつものように記事バッファをスクロールしてください
          (Gnus では "Next page" ボタンと "Previous page" ボタンを使う
          ことができます)。この変数を `nil' に設定すると、記事のコメン
          トを取得しなくなります。

     `shimbun-slashdot-comment-threshold'
          表示されるコメントの閾値です (デフォルトは 3)。-1 (すべての
          コメント) から 5 (最高レート) までの間の数にしてください。

     `shimbun-slashdot-comment-display'
          コメントを表示する形式です (デフォルトは "flat")。"flat"、
          "thread" または "nested" のどれかにしてください。これはシン
          ボルではなく文字列でなければなりません。

Slashdot Japan (http://slashdot.jp/)
     slashdot-jp.story slashdot-jp.askslashdot slashdot-jp.bookreview
     slashdot-jp.bsd slashdot-jp.developers slashdot-jp.interview
     slashdot-jp.linux slashdot-jp.mac slashdot-jp.mobile
     slashdot-jp.science slashdot-jp.security slashdot-jp.slash
     slashdot-jp.it slashdot-jp.hardware slashdot-jp.diary.oliver

     変数 `shimbun-slashdot-jp-group-alist' に適切な設定を加えると、そ
     の他のユーザーの日記も閲覧できます。

Tech-On! 日経BP社 (http://techon.nikkeibp.co.jp/)
     tech-on.latestnews tech-on.mobile tech-on.bbint tech-on.d-ce
     tech-on.AT tech-on.edaonline tech-on.device tech-on.lsi
     tech-on.silicon tech-on.observer tech-on.fpd tech-on.mono
     tech-on.embedded tech-on.mecha tech-on.MEMS tech-on.nano
     tech-on.carele tech-on.board tech-on.mcu tech-on.PLM
     tech-on.memory tech-on.measurement tech-on.column.mot

     Tech-On! は日経BP社が提供する技術ニュースサイトです。以前は記事の
     内容を全部読むためにログイン・アカウント (無料) が必要でしたが、
     少なくとも 2007年の秋においては要らないように見えます。将来もし再
     び必要になったら 登録ページ
     (http://techon.nikkeibp.co.jp/guide/inf_regi.html) に行って取得し
     てください。次の二つの変数で、どうやってログインするかを制御しま
     す:

     `shimbun-tech-on-user-name'
          Tech-On! にログインするためのユーザー名です。`nil' だと
          Tech-On! にログインするときに、ユーザー名の入力を要求されま
          す。文字列だったらそれがユーザー名として使われ、入力を要求さ
          れることはありません。`nil' でも文字列でもない場合 (これがデ
          フォルトです)、ログインを行ないません。

     `shimbun-tech-on-password'
          Tech-On! にログインするためのパスワードです。`nil' だと
          Tech-On! にログインするときに、パスワードの入力を要求されま
          す。文字列だったらそれがパスワードとして使われ、入力を要求さ
          れることはありません。`nil' でも文字列でもない場合 (これがデ
          フォルトです)、ログインを行ないません。

     これらの入力は、その Emacs セッションで最初に Tech-On! の記事を読
     み始めるときに一回だけ要求されます。

HotWired Japan (http://hotwired.goo.ne.jp/)
     wired-jp.news wired-jp.business wired-jp.culture
     wired-jp.technology wired-jp.blog.ogura wired-jp.blog.sasaki
     wired-jp.blog.takahashi

Yahoo! Japan (http://headlines.yahoo.co.jp/)
     yahoo.topnews yahoo.news yahoo.politics yahoo.society
     yahoo.people yahoo.business-all yahoo.market yahoo.stock
     yahoo.industry yahoo.international yahoo.entertainment
     yahoo.sports yahoo.computer yahoo.zenkoku yahoo.hokkaido
     yahoo.aomori yahoo.iwate yahoo.miyagi yahoo.akita yahoo.yamagata
     yahoo.fukushima yahoo.tokyo yahoo.kanagawa yahoo.chiba
     yahoo.saitama yahoo.ibaraki yahoo.tochigi yahoo.gunma
     yahoo.yamanashi yahoo.nagano yahoo.niigata yahoo.toyama
     yahoo.ishikawa yahoo.fukui yahoo.aichi yahoo.gifu yahoo.shizuoka
     yahoo.mie yahoo.osaka yahoo.hyogo yahoo.kyoto yahoo.shiga
     yahoo.nara yahoo.wakayama yahoo.tottori yahoo.shimane
     yahoo.okayama yahoo.hiroshima yahoo.yamaguchi yahoo.tokushima
     yahoo.kagawa yahoo.ehime yahoo.kochi yahoo.fukuoka yahoo.saga
     yahoo.nagasaki yahoo.kumamoto yahoo.oita yahoo.miyazaki
     yahoo.kagoshima yahoo.okinawa

     yahoo.news グループは主要な記事と、さらに速報記事を検索します。こ
     れらのグループは、デフォルトで HTML の記事を作ります。それらにテ
     キストだけの記事を生成させたいならば、以下の行を `~/.emacs' ファ
     イルに加えてください。

          (setq shimbun-yahoo-prefer-text-plain t)

ZDNet Japan (http://japan.zdnet.com/)
     zdnet-jp.news zdnet-jp.news.network zdnet-jp.news.hardware
     zdnet-jp.news.software zdnet-jp.news.manage
     zdnet-jp.news.security zdnet-jp.news.internet zdnet-jp.news.os
     zdnet-jp.news.db zdnet-jp.news.system zdnet-jp.column
     zdnet-jp.column.sp1 zdnet-jp.column.netsecurity1
     zdnet-jp.column.ea1 zdnet-jp.column.btl
     zdnet-jp.column.solutionIT zdnet-jp.channel.security
     zdnet-jp.channel.ilm zdnet-jp.blog.iida zdnet-jp.blog.mhatta
     zdnet-jp.blog.kurei zdnet-jp.blog.opensource zdnet-jp.blog.soa
     zdnet-jp.blog.dp

The Onion (http://www.theonion.com/)
     the-onion.news



File: emacs-w3m-ja.info, Node: Mailing Lists Supported by Shimbun, Next: Sport Sites Supported by Shimbun, Prev: News Sites Supported by Shimbun, Up: Shimbun Sites

メーリングリスト
----------------

最近では、メーリングリストに投稿された過去記事のアーカイブが WEB 上に
幾つも公開されています。`Shimbun' ライブラリは、以下のアーカイブを扱う
ことができます。

Semi-gnus Mailing List in Japan (http://lists.airs.net/semi-gnus/archive/)
     airs.semi-gnus-ja

Wanderlust Mailing List (http://lists.airs.net/)
     airs.wl airs.wl-en

Big Brother DataBase Mailing List (http://www.rc.tutrp.tut.ac.jp/bbdb-ml/)
     bbdb-ml.bbdb-ml

GNOME Mailing List (http://mail.gnome.org/archives/)
     gnome.balsa-list gnome.calendar-list gnome.cvs-commits-list
     gnome.foundation-announce gnome.foundation-list gnome.fplan-list
     gnome.gconf-list gnome.gdome gnome.gnome-1.4-list
     gnome.gnome-announce-list gnome.gnome-components-list
     gnome.gnome-db-list gnome.gnome-de gnome.gnome-debugger-list
     gnome.gnome-devel-list gnome.gnome-doc-list gnome.gnome-gui-list
     gnome.gnome-hackers gnome.gnome-hackers-readonly
     gnome.gnome-hackers-test gnome.gnome-i18n gnome.gnome-i18n-tools
     gnome.gnome-kde-list gnome.gnome-list gnome.gnome-office-list
     gnome.gnome-pilot-list gnome.gnome-sound-list
     gnome.gnome-themes-list gnome.gnome-ui-hackers
     gnome.gnome-web-list gnome.gnome-webmaster-list
     gnome.gnome-workshop-list gnome.gnomecc-list gnome.gnumeric-list
     gnome.gtk-app-devel-list gnome.gtk-devel-list gnome.gtk-doc-list
     gnome.gtk-i18n-list gnome.gtk-list gnome.gtk-perl-list
     gnome.guppi-list gnome.libart gnome.libart-hackers
     gnome.orbit-list gnome.vote gnome.wm-spec-list gnome.xml
     gnome.xslt

Java カンファレンス Mailing List (http://www.java-conf.gr.jp/archives/)
     javaconf.servlet-ml javaconf.business-ml
     javaconf.duke-in-the-box-ml javaconf.jfriends-ml javaconf.JGT-ml
     javaconf.jini-ml javaconf.ejb-ml javaconf.cm-ml javaconf.horb-ml
     javaconf.talk-ml

LinuxCE JP Mailing List (http://www.peanuts.gr.jp/~kei/ml-archive/)
     linuxce-jp.users

Mule Mailing List (http://www.m17n.org/)
     m17n.mule-ja m17n.mule

Meadow Mailing List (http://www.ysnb.net/meadow/)
     meadow.meadow-develop meadow.meadow-users-jp

Mew Mailing List (http://www.mew.org/ml/)
     mew.mew-dist mew.mew-win32 mew.mew-int

MagicPoint Mailing List (http://www.mew.org/ml/)
     mew.mgp-users mew.mgp-users-jp

www.namazu.org Mailing Lists (http://www.namazu.org/cgi-bin/mailman/listinfo)
     namazu.kakasi-commits namazu.kakasi-dev namazu.migemo
     namazu.namazu-users-en namazu.namazu-users-ja
     namazu.namazu-devel-ja namazu.namazu-devel-en
     namazu.namazu-win32-users-ja namazu.sary

emacs-w3m Mailing List (http://emacs-w3m.namazu.org/ml/)
     emacs-w3m.emacs-w3m

NetBSD JP Mailing List (http://www.jp.netbsd.org/ja/JP/ml/)
     netbsd.announce-ja netbsd.junk-ja netbsd.tech-misc-ja
     netbsd.tech-pkg-ja netbsd.port-arm32-ja netbsd.port-hpcmips-ja
     netbsd.port-mac68k-ja netbsd.port-mips-ja netbsd.port-powerpc-ja
     netbsd.hpcmips-changes-ja netbsd.members-ja netbsd.admin-ja
     netbsd.www-changes-ja

Ruby Mailing List (http://blade.nagaokaut.ac.jp/)
     ruby.comp.lang.ruby ruby.fj.comp.lang.ruby ruby.ruby-dev
     ruby.ruby-ext ruby.ruby-list ruby.ruby-math ruby.ruby-talk

Toshiba Linux Users JP Mailing List (http://linux.toshiba-dme.co.jp/ML/tlinux-users-j/)
     toshiba.linux-users-j

w3m-dev Mailing List (http://mi.med.tohoku.ac.jp/~satodai/w3m-dev/)
     w3m-dev.w3m-dev w3m-dev.w3m-dev-en

digiko Mailing List (http://yar-3.net/digiko/)
     digiko.digiko

XEmacs Mailing List (http://list-archive.xemacs.org/)
     xemacs.xemacs-announce xemacs.xemacs-beta-ja xemacs.xemacs-beta
     xemacs.xemacs-build-reports xemacs.xemacs-cvs
     xemacs.xemacs-design xemacs.xemacs-mule xemacs.xemacs-nt
     xemacs.xemacs-patches xemacs.xemacs-users-ja xemacs.xemacs

セキュリティーMEMO Mailing List (http://memo.st.ryukoku.ac.jp/archive/)
     security-memo.memo security-memo.free-memo
     security-memo.social-memo

     なお、`security-memo.*' はアドレス回収ロボット対策で userid と
     passowrd を求められるので `~/.w3m/passwd' に

          machine memo.st.ryukoku.ac.jp
          realm input username/password = archives/archives
          login archives
          passwd archives

          machine memo.st.ryukoku.ac.jp
          realm input user: archives / password: archives
          login archives
          passwd archives

     と書き、上記ファイルから group, others のアクセス権を取り除いてお
     く必要があります。

Debian JP Mailing List (http://lists.debian.or.jp/)
     debian-jp.debian-announce debian-jp.debian-devel
     debian-jp.debian-www debian-jp.debian-users
     debian-jp.debian-policy debian-jp.jp-qa

Debian Mailing List (http://lists.debian.org/)
     debian.debian-announce debian.debian-commercial
     debian.debian-firewall debian.debian-french debian.debian-isp
     debian.debian-italian debian.debian-kde debian.debian-laptop
     debian.debian-news debian.debian-news-german
     debian.debian-news-portuguese debian.debian-security-announce
     debian.debian-testing debian.debian-user
     debian.debian-user-catalan debian.debian-user-french
     debian.debian-user-polish debian.debian-user-portuguese
     debian.debian-user-spanish debian.debian-user-swedish
     debian.debian-admintool debian.debian-apache
     debian.debian-autobuild debian.debian-beowulf debian.debian-boot
     debian.debian-cd debian.debian-ctte debian.debian-debbugs
     debian.debian-devel debian.debian-devel-announce
     debian.debian-devel-french debian.debian-devel-games
     debian.debian-devel-spanish debian.debian-doc debian.debian-dpkg
     debian.debian-emacsen debian.debian-events-eu
     debian.debian-events-na debian.debian-faq debian.debian-gcc
     debian.debian-glibc debian.debian-gtk-gnome debian.debian-hams
     debian.debian-ipv6 debian.debian-java debian.debian-jr
     debian.debian-med debian.debian-mentors debian.debian-newmaint
     debian.debian-newmaint-admin debian.debian-ocaml-maint
     debian.debian-openoffice debian.debian-perl debian.debian-pilot
     debian.debian-policy debian.debian-pool debian.debian-python
     debian.debian-qa debian.debian-qa-private debian.debian-release
     debian.debian-security debian.debian-snapshots
     debian.debian-tetex-maint debian.debian-toolchain
     debian.debian-vote debian.debian-wnpp debian.debian-www
     debian.debian-x debian.deity debian.debian-chinese
     debian.debian-chinese-big5 debian.debian-chinese-gb
     debian.debian-esperanto debian.debian-i18n debian.debian-japanese
     debian.debian-l10n-catalan debian.debian-l10n-dutch
     debian.debian-l10n-english debian.debian-l10n-french
     debian.debian-l10n-italian debian.debian-l10n-portuguese
     debian.debian-l10n-spanish debian.debian-laespiral
     debian.debian-russian debian.debian-simplified-chinese
     debian.debian-68k debian.debian-alpha debian.debian-arm
     debian.debian-bsd debian.debian-hppa debian.debian-hurd
     debian.debian-ia64 debian.debian-mips debian.debian-parisc
     debian.debian-powerpc debian.debian-s390 debian.debian-sparc
     debian.debian-superh debian.debian-ultralinux debian.debian-win32
     debian.debian-all-changes debian.debian-alpha-changes
     debian.debian-arm-changes debian.debian-books
     debian.debian-cd-vendors debian.debian-changes
     debian.debian-consultants debian.debian-curiosa
     debian.debian-devel-all-changes debian.debian-devel-alpha-changes
     debian.debian-devel-arm-changes debian.debian-devel-changes
     debian.debian-devel-hurd-i386-changes
     debian.debian-devel-i386-changes debian.debian-devel-m68k-changes
     debian.debian-devel-powerpc-changes
     debian.debian-devel-sparc-changes debian.debian-hurd-i386-changes
     debian.debian-i386-changes debian.debian-legal
     debian.debian-m68k-changes debian.debian-mirrors
     debian.debian-powerpc-changes debian.debian-project
     debian.debian-publicity debian.debian-sgml
     debian.debian-sparc-changes debian.lcs-eng debian.lsb-confcall
     debian.lsb-discuss debian.lsb-impl debian.lsb-spec
     debian.lsb-test debian.spi-announce debian.spi-general
     debian.vgui-discuss

KDE Mailing List in Japan (http://www.kde.gr.jp/ml/)
     kde.Kuser kde.Kdeveloper

Geocrawler (http://www.geocrawler.com/)
     Geocrawler に保存されているすべてのメーリングリストを閲覧できます。
     `M-x shimbun-geocrawler-add-group <RET>' というコマンドを使っ
     て、閲覧したいグループを変数 `shimbun-geocrawler-group-alist' に登
     録してください。

Mailing list ARChives (http://marc.theaimsgroup.com/)
     Mailing list ARChives (MARC) に保存されているすべてのメーリングリ
     ストを閲覧できます。閲覧したいグループのグループ名と URL を、変数
     `shimbun-marc-aims-group-alist' に登録してください。

RedHat Mailing List (http://sources.redhat.com/ml/)
     redhat.automake redhat.bug-automake redhat.automake-prs
     redhat.automake-cvs redhat.binutils redhat.binutils-cvs
     redhat.c++-embedded redhat.crossgcc redhat.cgen redhat.cgen-prs
     redhat.cgen-cvs redhat.cygwin redhat.cygwin-xfree
     redhat.cygwin-announce redhat.cygwin-xfree-announce
     redhat.cygwin-apps redhat.cygwin-patches redhat.cygwin-developers
     redhat.cygwin-cvs redhat.cygwin-apps-cvs
     redhat.docbook-tools-discuss redhat.docbook-tools-announce
     redhat.docbook-tools-cvs redhat.docbook redhat.dssslist
     redhat.sgml-tools redhat.docbook-apps redhat.ecos-announce
     redhat.ecos-devel redhat.ecos-discuss redhat.ecos-maintainers
     redhat.ecos-patches redhat.elix redhat.elix-announce redhat.gdb
     redhat.gdb-announce redhat.gdb-testers redhat.gdb-testresults
     redhat.gdb-patches redhat.gdb-cvs redhat.bug-gdb redhat.gdb-prs
     redhat.libc-alpha redhat.libc-hacker redhat.bug-glibc
     redhat.glibc-cvs redhat.glibc-linux redhat.bug-gnats
     redhat.gnats-devel redhat.gnats-announce redhat.gnats-cvs
     redhat.gsl-discuss redhat.gsl-announce redhat.gsl-cvs
     redhat.guile redhat.guile-emacs redhat.guile-prs redhat.guile-gtk
     redhat.bug-guile redhat.guile-cvs redhat.guile-emacs-cvs
     redhat.insight redhat.insight-announce redhat.insight-prs
     redhat.installshell redhat.inti redhat.kawa redhat.libffi-discuss
     redhat.libffi-announce redhat.libstdc++ redhat.libstdc++-cvs
     redhat.libstdc++-prs redhat.mauve-discuss redhat.mauve-announce
     redhat.newlib redhat.pthreads-win32 redhat.rhdb
     redhat.rhdb-announce redhat.rhug-rhats redhat.rpm2html-cvs
     redhat.rpm2html-prs redhat.rpm2html redhat.sid
     redhat.sid-announce redhat.sid-cvs redhat.sourcenav
     redhat.sourcenav-announce redhat.sourcenav-prs redhat.win32-x11
     redhat.xconq7 redhat.xconq-announce redhat.xconq-cvs

MacOSX JP Mailing List (http://www.tech-arts.co.jp/macosx/)
     macosx-jp.macosx-jp macosx-jp.macosx-dev-jp
     macosx-jp.macosx-ws-jp macosx-jp.webobjects-jp

SourceForge JP (http://sourceforge.jp)
     SourceForge JP に保存されているメーリングリストのすべての公開書庫
     を閲覧できます。閲覧したいグループを変数
     `shimbun-sourceforge-jp-mailing-lists' に登録してください。

Elips Mailing List (http://heimat.jp/~nakaji/elips/)
     elips.elips

Squeak-ja Mailing List (http://lists.squeakfoundation.org/pipermail/squeak-ja/)
     squeak-ja.main

Smalltalkers' Salon Mailing List (http://www.sra.co.jp/smalltalk/SML/archives/)
     sml.main

Squeak-dev Mailing List (http://lists.squeakfoundation.org/pipermail/squeak-dev/)
     squeak-dev.main

Plucker Mailing List (http://www.mail-archive.com/plucker-*@rubberchicken.org/maillist.html)
     plucker.announce plucker.list plucker.dev

pilot-link Mailing List (http://www.pilot-link.org/pipermail/)
     pilot-link.announce pilot-link.devel pilot-link.general
     pilot-link.unix-ng

Coldsync Mailing List (http://www.thedotin.net/maillists/coldsync-hackers/maillist.html)
     coldsync.main

J-Pilot Mailing List (http://www.jpilot.org/pipermail/jpilot/)
     jpilot.main

pilot-mailsync Mailing List (http://lists.gnu-designs.com/pipermail/pilot-mailsync/)
     pilot-mailsync.main

Mozilla Users Mailing List in Japan (http://www.mozilla.gr.jp/ml/logs/moz-users/)
     mozilla-jp.users

     なお、`mozilla-jp.users' はアドレス回収ロボット対策で userid と
     passowrd を求められるので `~/.w3m/passwd' に

          machine www.mozilla.gr.jp
          realm Please Enter mozilla mozilla
          login mozilla
          passwd mozilla

     と書き、上記ファイルから group, others のアクセス権を取り除いてお
     く必要があります。

tDiary Developers Mailing List in Japan (http://www.tdiary.org/)
     tdiary-ml.devel tdiary-ml.theme

arch.bluegate.org Mailing Lists (http://arch.bluegate.org/mailman/listinfo)
     arch-bluegate.subversion-jp arch-bluegate.arch-jp
     arch-bluegate.mailman arch-bluegate.viewarch

Tigris.org:Open Source Software Engineering (http://www.tigris.org/)
     Tigris.org に保存されているすべてのメーリングリストを閲覧できます。
     閲覧したいグループを変数 `shimbun-tigris-group-alist' に登録して
     ください。グループ名は tigris.<project>.<mailinglist> になります。

www.SciPy.net Mailing Lists (http://www.scipy.net/mailman/listinfo)
     scipy.astropy scipy.ipython-user scipy.ipython-dev
     scipy.scipy-user scipy.scipy-dev scipy.scipy-testlog
     scipy.scipy-chaco scipy.scipy-cvs

lists.chise.org Mailing Lists (http://lists.chise.org/mailman/listinfo)
     chise.apel chise.chise chise.emacs-mime




File: emacs-w3m-ja.info, Node: Sport Sites Supported by Shimbun, Next: Misc Sites Supported by Shimbun, Prev: Mailing Lists Supported by Shimbun, Up: Shimbun Sites

スポーツ
--------

`Shimbun' ライブラリが対応しているスポーツ関係のサイトです。

makanai (http://www.makanai.com/)
     makanai.f1news

F1 ファン (http://www.ksky.ne.jp/~tahara/f1/)
     f1fan.news

@nifty:モータースポーツ (http://forum.nifty.com/fmotor/)
     msports-nifty.F1 msports-nifty.IRL msports-nifty.WRC
     msports-nifty.Europe msports-nifty.USA

Yahoo!スポーツ (http://sports.yahoo.co.jp/)
     yahoo-sports.F1 yahoo-sports.baseball yahoo-sports.keiba
     yahoo-sports.NBA yahoo-sports.NFL yahoo-sports.rugby

ただし、Emacs-21.4 またはそれ以前の版で @nifty: モータースポーツを閲覧
するには、Mule-UCS (*Note Other Requirements::) が必要です。



File: emacs-w3m-ja.info, Node: Misc Sites Supported by Shimbun, Prev: Sport Sites Supported by Shimbun, Up: Shimbun Sites

その他
------

`Shimbun' ライブラリの対応しているその他のサイトです。掲示板や、連載記
事を主体とするようなサイトが含まれています。

Tea Cup 掲示板 (http://www.tcup.com/)
     Tea Cup Communication によって提供される、様々な掲示板を講読する
     ことができます。デフォルトでは、以下の三つの掲示板が用意されてい
     ます。

     tcup.meadow
          Meadow 掲示板 (http://www66.tcup.com/6629/yutopia.html)

     tcup.skk
          SKK 掲示板 (http://www67.tcup.com/6718/yutopia.html)

     tcup.yutopia
          ゆうτοπια掲示板 (http://www61.tcup.com/6116/yutopia.html)

     新たに掲示板をリストに追加するには、それらの名前と URL を調べて、
     `shimbun-tcup-group-alist' を変更してください。二つの掲示板 `foo'
     と `bar' を追加する例です。

          (eval-after-load "sb-tcup"
            '(setq shimbun-tcup-group-alist
                   (append
                    '(("foo" "http://MMMM.teacup.com/foo/bbs2")
                      ("bar" "http://NNNN.teacup.com/bar/bbs2"))
                    shimbun-tcup-group-alist)))

2ch
     グループ名と URL を調べて、以下のように設定して使います。

          (setq shimbun-2ch-group-alist
                '(("Meadow" .
                   "http://pc.2ch.net/test/read.cgi/software/1005469775")
                  ("emacs-w3m" .
                   "http://pc.2ch.net/test/read.cgi/unix/1013710106")))

CGI_Board を使っている掲示板 (http://www.math.tohoku.ac.jp/~kuroki/support/)

     CGI_Board を使っている掲示板の URL を調べて、
     `shimbun-cgi-board-group-alist' に適切な設定を加えて使います。

HNS による日記
     閲覧したい日記の URL を調べて、以下のように設定して使います。

          (setq shimbun-hns-group-alist
                '(("arisawa"                            ;; グループ名
                   "http://nijino.homelinux.net/diary/" ;; URL
                   "ari@mbf.sphere.ne.jp")              ;; メールアドレス
                  ("miyoshi"
                   "http://www.be.wakwak.com/cgi-bin/sbox/~miyoshi/hns/"
                   "miyoshi@meadowy.org")))

tDiary による日記
     閲覧したい日記の URL を調べて、以下のように設定して使います。

          (setq shimbun-tdiary-group-alist
                '(("henahena"                          ;; グループ名
                   "http://www.fan.gr.jp/~ring/d/")    ;; URL
                  ("yoichi"
                   "http://yoichi.geiin.org/d/")))

楽天広場 (http://plaza.rakuten.co.jp/) の日記
     閲覧したい日記を開設している人の楽天 ID とメールアドレスを調べて、
     以下のように設定して使います。

          (setq shimbun-rakuten-group-alist
                '(("rakuten-id" . "email-address")))

EmacsWiKi (http://www.emacswiki.org/)
     emacswiki.changes emacswiki.diff

コンテンツを含む RSS フィード
     閲覧したい掲載コンテンツが含まれるような RSS フィードを調べて、
     `shimbun-rss-hash-group-path-alist' 変数を以下のように設定して使
     います。バックエンド名は `rss-hash' です。主に個人のブログなどが
     対象になるでしょう。

     パラメータはグループ名、RSS アドレス、メールタイプ (`t' で html)、
     整形時の開始正規表現、整形時の終了正規表現となります。グループ名、
     RSS アドレス以外はオプションです。

     以下はサンプルです。この場合は `rss-hash.sampleblog1' および
     `rss-hash.sampleblog2' として閲覧できます。

          (setq shimbun-rss-hash-group-path-alist
                '(;; text mail
                  ("sampleblog1" "http://www.example.com/index1.rss")
                  ;; html mail
                  ("sampleblog2" "http://www.example.com/index2.rss"
                   t "</title>" "<!-- start ads")))

コンテンツを含む Atom フィード
     前項 (コンテンツを含む RSS フィード) と同様に、掲載されたコンテン
     ツを含む Atom フィードも閲覧することができます。それを行なうには、
     shimbun-rss-hash-* と同様のやり方で変数
     `shimbun-atom-hash-group-path-alist' (ひょっとすると
     `shimbun-atom-hash-x-face-alist' なども) を設定してください。バッ
     クエンド名は `atom-hash' です。

コンテンツのない RSS フィード
     多くのフィードには記事の完全なコンテンツが無いか、またはいぢわる
     に小出しにします。サイトがちゃんと記事を書かずに、そのようなフィー
     ドしか提供しない場合でも、多くの場合 `rss-blogs' を使って切り抜け
     ることができます。設定は `rss-hash' のものと似ています。例を示し
     ましょう:

          (setq shimbun-rss-blogs-group-url-regexp
            '(("first-feed" "http://example/wordpressfeed")
              ("second-feed" "http://example/somefeed"
               "<div name=\"content\">" "<div name=\"comments\">")
              ("third-feed" "http://example/someotherfeed" 'none)))

     最初の二つのアイテムはフィードの名前と URL です。そのフィードが指
     し示す HTML ページにおいて、実際のコンテンツの始めと終りを探すた
     めの二つの正規表現を、任意で与えることができます。そこで単に
     `none' というシンボルを使うと、いかなる濾過も行なわれません。

     加えて、`rss-blogs' はいくつかのポピュラーなブログ・エンジンを自
     動的に扱うことができます。すなわち Google の Blogger/Blogspot (コ
     メント・フィードを含みます)、WordPress、および TypePad です。フィー
     ドを取り寄せるサイトがそれらの一つを使っているなら (`generator'
     タグを眺めればわかります)、単に任意のパラメータを省略するだけで、
     自動的にコンテンツを切り出そうとするでしょう。

Wiki コンテンツ
     閲覧したい Wiki の URL を調べて、以下のように設定して使います。
     PukiWiki と Hiki に対応しています。もし、各内側のリストの 4 番目、
     5 番目の要素の正規表現に何を指定して良いか分からないときは、`nil'
     を指定すれば良いでしょう。記事の取得時に整形が行われず、ただペー
     ジ全体が見えるだけです。

          (setq shimbun-wiki-group-alist
                '(("pukiwiki" ;; グループ名
                   "http://pukiwiki.org/index.php?cmd=rss10" ;; URL
                   "webmaster@pukiwiki.org" ;; メールアドレス
                   nil ;; X-Face
                   "\n<h3 id=\"" ;; contents の start を示す regexp
                   "</address>") ;; contents の end を示す regexp
                  ("hiki"
                   "http://www.namaraii.com/hiki/?c=rss"
                   "webmaster@fdiary.net"
                   nil
                   "<div class=\"section\">"
                   "<div class=\"sidebar\">")
                  ("apollo"
                   "http://wiki.fdiary.net/apollo/?c=rss"
                   "moriq@moriq.com"
                   nil
                   "<div class=\"section\">"
                   "<div class=\"sidebar\">")
                  ))

Yahoo!オークション (http://auctions.yahoo.co.jp/)
     閲覧したいカテゴリや検索結果の URL を調べて、以下のように設定して
     使います。

          (setq shimbun-yahoo-auctions-group-alist
                '(("mp3player" . "http://list3.auctions.yahoo.co.jp/jp/show/catleaf_rss?category=2084039708&alocale=0jp")
                  ("iPod" . "http://search3.auctions.yahoo.co.jp/search_rss?p=iPod&auccat=2084039708&alocale=0jp&acc=jp")))

VineLinux Errata (http://www.vinelinux.org/)
     vinelinux.errata.4x.i386 vinelinux.errata.4x.ppc
     vinelinux.errata.3x.i386 vinelinux.errata.3x.ppc
     vinelinux.errata.3x.alpha vinelinux.errata.2x.i386
     vinelinux.errata.2x.ppc vinelinux.errata.2x.sparc
     vinelinux.errata.2x.alpha vinelinux.errata.1x

内閣ブログ/メールマガジン (http://www.kantei.go.jp/)
     kantei.blog-en kantei.blog-ja kantei.blog-en.kan
     kantei.blog-ja.kan kantei.m-magazine-cn.hatoyama
     kantei.m-magazine-kr.hatoyama kantei.m-magazine-en.hatoyama
     kantei.m-magazine-ja.hatoyama kantei.m-magazine-en.aso
     kantei.m-magazine-ja.aso kantei.m-magazine-en.fukuda
     kantei.m-magazine-ja.fukuda kantei.m-magazine-en.abe
     kantei.m-magazine-ja.abe kantei.m-magazine-en.koizumi
     kantei.m-magazine-ja.koizumi kantei.m-magazine

     後方互換性のため `kantei.m-magazine' も利用可能になっています。

特許庁 (http://www.jpo.go.jp/)
     jpo.news jpo.revision jpo.lawguide jpo.details

IBM developerWorks (http://www-6.ibm.com/jp/developerworks/)
     ibm-dev.autonomic ibm-dev.java ibm-dev.linux ibm-dev.opensource
     ibm-dev.webservices ibm-dev.xml

Pocketgames (http://www.pocketgames.jp/)
     pocketgames.news

Wincefan (http://www.wince.ne.jp/)
     wincefan.news

PalmFan (http://www.palmfan.com/)
     palmfan.news

電脳街の現場レポート (http://homepage1.nifty.com/akiba/plat.html)
     dennou.report

PCWEB COLUMN Square (http://pcweb.mycom.co.jp/column/)
     pcweb-column.jsr pcweb-column.yume pcweb-column.hreceipe
     pcweb-column.kita pcweb-column.shonanlife pcweb-column.kaden
     pcweb-column.nemurenai pcweb-column.komono pcweb-column.js
     pcweb-column.en pcweb-column.motherboard pcweb-column.svalley
     pcweb-column.architecture pcweb-column.motorlife
     pcweb-column.nihongoprog pcweb-column.objc pcweb-column.ide
     pcweb-column.music pcweb-column.itsecurity
     pcweb-column.soundvisual pcweb-column.osx pcweb-column.sopinion
     pcweb-column.ebook pcweb-column.orerobo pcweb-column.zsh
     pcweb-column.rikei pcweb-column.lifehack pcweb-column.world
     pcweb-column.guutara pcweb-column.volt pcweb-column.textclean
     pcweb-column.person pcweb-column.web20 pcweb-column.system

     後方互換性のため、以下のアイテムも利用可能になっています。
     pcweb-column.itshihonron pcweb-column.yetanother
     pcweb-column.asia pcweb-column.benri pcweb-column.bytes
     pcweb-column.game pcweb-column.hitech pcweb-column.java
     pcweb-column.jisakuparts pcweb-column.scramble
     pcweb-column.toolexp pcweb-column.winvista pcweb-column.winxp
     pcweb-column.interview pcweb-column.ityougo pcweb-column.kimeuchi
     pcweb-column.stratesys pcweb-column.toyagain

ノーツ陳列館 (http://tsuruo.dominohosting.biz/members/tsuruo/)
     lotusex.news lotusex.library lotusex.operation lotusex.primer
     lotusex.tips lotusex.practical lotusex.qanda lotusex.lounge
     lotusex.bbs

＠ITフォーラム (http://www.atmarkit.co.jp)
     atmarkit.news atmarkit.fwin2k atmarkit.fdotnet atmarkit.fsys
     atmarkit.fxml atmarkit.fdb atmarkit.flinux atmarkit.fnetwork
     atmarkit.fjava atmarkit.fsecurity atmarkit.farc atmarkit.fbiz
     atmarkit.fwcr atmarkit.jibun

TeX Q&A 掲示板 (http://www.matsusaka-u.ac.jp/~okumura/texfaq/qa/)
     texfaq.qanda

X51.org (http://x51.org/)
     x51.anima x51.art x51.auction x51.blow x51.cabal x51.crime
     x51.disaster x51.edge x51.enema x51.ghost x51.homme x51.info
     x51.life x51.love x51.media x51.medical x51.military
     x51.northkorea x51.oparts x51.phallic x51.psychics x51.religion
     x51.science x51.top x51.ufo x51.uma x51.xfiles

eXperts Connection (eXConn) (http://www.exconn.net/)
     exconn.news

MSDN (http://msdn.microsoft.com/)
     msdn.all msdn.netframework msdn.architecture msdn.asp.net
     msdn.data msdn.longhorn msdn.mobility msdn.subscriptions
     msdn.msdntv msdn.office msdn.security msdn.sql msdn.theshow
     msdn.vbasic msdn.vcsharp msdn.visualc msdn.vfoxpro msdn.vjsharp
     msdn.vstudio msdn.vs2005 msdn.webservices msdn.embedded msdn.xml
     msdn.japan.msdn msdn.japan.msdn-us

Haiku OS (http://haiku-os.org/)
     haiku-os.news haiku-os.forums haiku-os.newsletters

Foundation for a Free Information Infrastructure (http://www.ffii.org/)
     ffii.en.software-patents ffii.en.software-patents.ffii
     ffii.en.information-infrastructure ffii.en.project
     ffii.de.software-patente ffii.de.software-patente.ffii
     ffii.de.informations-infrastruktur ffii.fr.brevets-logiciels
     ffii.fr.brevets-logiciels.ffii ffii.nl.softwarepatenten
     ffii.nl.softwarepatenten.ffii

小林よしのり公式サイト (http://yoshinori-kobayashi.com/)
     yoshirin.blog yoshirin.topics



File: emacs-w3m-ja.info, Node: Shimbun Basics, Prev: Shimbun Sites, Up: Shimbun Library

新聞モジュールの作り方
======================

`Shimbun' は emacs-w3m の付属ライブラリで、Gnus や Wanderlust、Mew な
どの MUA を利用し、ウェブコンテンツをメールと同じユーザインターフェー
スで読むことを可能にするものです。ここでは `shimbun' モジュールを作成
する典型的な方法を説明します。

* Menu:

* Overview::                    概略
* Getting web page and header information::  ウェブページのソース及びヘッダ情報を取得する
* Displaying an article::       記事の表示
* Inheriting shimbun module::   shimbun モジュールの継承
* Making text/plain articles::  text/plain の記事を作るには
* Zenkaku to hankaku conversion:: 全角文字を半角文字に変換する
* Coding convention of Shimbun:: コーディング規約



File: emacs-w3m-ja.info, Node: Overview, Next: Getting web page and header information, Prev: Shimbun Basics, Up: Shimbun Basics

概略
----

`http://www.foobar.net' のコンテンツを閲覧する新たな `shimbun' モジュー
ル `foobar' を作成するとして、まず最初に貴方がしなればならないことは、
`sb-foobar.el' の冒頭に

     (require 'shimbun)
     (luna-define-class shimbun-foobar (shimbun) ())

のような宣言を入れておくことです。徐々に分かると思いますので、今はおま
じないと思っておいてください。注意すべきことは、`shimbun' モジュールを
入れるファイル名の `sb-foobar.el' の `foobar' の名前と、
`luna-define-class' の第一引数の `shimbun-foobar' の `foobar' の名前は
合わせておく必要があることです。

`Shimbun' モジュール `shimbun-foobar' がこなすべき仕事は大きく四つあり
ます (あなたが Gnus のユーザならば、「フォルダ」を「グループ」に読み換
えてください):

 1.  MUA が `foobar' フォルダを開いたら、記事の標題などをリストアップするために `http://www.foobar.net' からウェブページのソース
     を取得すること。

 2. 取得したウェブページのソースに対し、記事の見出しに必要ないくつかの情報とともに取得して、`headers' というリストに代入して返
     すこと。

 3.  MUA が `foobar' フォルダの記事の閲覧を要求したら、実際の記事内容を記載したウェブページのソースを (例えば
     `http://www.foobar.net/030530.html' から) 取得すること。

 4.  `http://www.foobar.net/030530.html' から取得したウェブページのソースを、必要に応じ閲覧しやすいように整形すること。

最初の作業は `shimbun.el' の `shimbun-headers' が、二番目の作業は
`shimbun-get-headers' が担当します。そして三番目の作業は
`shimbun-article' が、最後の作業は `shimbun-make-contents' が担当しま
す。

`shimbun.el' の中をご覧ください。`defun' による関数定義の他に、
見慣れない `luna-define-generic', `luna-define-method' などの
宣言がありますよね。どうも使用方法は `defun' のそれと似ているようで
す。そして、前者は何だか doc-string だけを書いてあるようで、同名のシンボ
ルについて後者によって再度宣言しているように見えます。更に、あるシンボル
について、`luna-define-generic' の宣言だけがあって、
`luna-define-method' の宣言がないものもあります。

実は、`shimbun.el' 及び各 `shimbun' モジュールは、Emacs Lisp にてオブ
ジェクト指向プログラミングを可能とする `luna.el' (1) (*Note
Overview-Footnotes::) を利用して書かれています。

`shimbun.el' の中では、`shimbun-headers' がある URL のウェブページのソー
スを取得し、`shimbun-get-headers' がそのウェブページのソースから標題な
どを抜き出し... という前述の手順がハードコーディングされています。しか
し、決め打ちするだけでは、千差万別のウェブページのソースを、その構造に
合わせて変化させることができません。

そこで `luna' により、メソッドがコールされる手順だけ決めておいて、
`shimbun' により変化させるべきメソッドの実体定義を各 `shimbun' モジュー
ルに任せているのです。各 `shimbun' モジュールで共通で使えそうなメソッ
ドは `shimbun.el' の中にメソッドの実体も定義してありますが、それすら各
`shimbun' モジュールにおいて再定義をすることが可能です。

もうお分かりのように、`luna-define-generic' は、言わば殼だけの宣言、
`luna-define-method' は `shimbun' モジュール毎に作成できる実体の宣言。
そして `sb-foobar.el' の冒頭に入れた `luna-define-class' での宣言は、
`luna' 上での新たなクラスの宣言だったわけです。


File: emacs-w3m-ja.info  Node: Overview-Footnotes, Up: Overview

(1) FLIM に含まれています。



File: emacs-w3m-ja.info, Node: Getting web page and header information, Next: Displaying an article, Prev: Overview, Up: Shimbun Basics

ウェブページのソース及びヘッダ情報を取得する
--------------------------------------------

まず記事見出しを取得する対象となるウェブページを決めることから始めます。
フレーム表示されている場合は、フレームの中で必要なページだけを単独で指
し示す URL を特定するべきです。特定できたら、新たに作成する `shimbun'
モジュールの中で `luna-define-method' を使い、`shimbun-index-url' の定
義を作成しましょう。単純に URL を返すようにすれば良いですよ。後で説明
しますので、変数 `shimbun-foobar-groups' も用意しておきましょう (1)
(*Note Getting web page and header information-Footnotes::)。

     (defvar shimbun-foobar-url "http://www.foobar.net")

     (luna-define-method shimbun-index-url ((shimbun shimbun-foobar))
       shimbun-foobar-url)

     (defvar shimbun-foobar-groups '("news"))

`shimbun-headers' メソッドは `shimbun.el' の中に既に定義されていますか
ら、`sb-foobar.el' で `shimbun-index-url' メソッドの定義を作成すればウェ
ブページのソースの取得ができるようになります。`shimbun-headers' はウェ
ブページのソースを取得した後、`shimbun-get-headers' メソッドを呼び、ヘッ
ダ情報の収集に入ります。`shimbun.el' の中には `shimbun-get-headers' の
メソッド宣言がありせんから、`sb-foobar.el' の中で独自にメソッドを作成
しなければなりません。

`sb-foobar.el' に `shimbun-get-headers' のメソッドを作成するために、取
得したページのソースを分析しましょう。どのような正規表現で記事のヘッダ
情報を収集するかを検討します。記事の見出しとして特に必要な情報は、標題、
日付、作成者、その記事の URL、そして `message-id' です。これらの情報は、
それぞれの MUA において、Subject, Date, From, Xref, Message-ID として
表示されます。例えば、下記の

     <a href="030530.html">5月30日の話題(投稿者-みきお &lt;foo@bar.net&gt;)</a>

のような行を集めて記事にしたいのでしたら、

     "<a href=\"\\(\\([0-9][0-9][0-9][0-9]\\)[0-9][0-9]\\.html\\)\">\\([^<(]+\\)(投稿者-\\([^<]+\\))<\/a>"

のような正規表現になるでしょう。そして記事の Xref の値は
`(match-string 1)' で取得できます、Date は
`(match-string 2)' の値を加工すれば良いでしょう。Subject は
`(match-string 3)' で取得できますね。From は
`(match-string 4)' を加工すれば良いでしょう。これらの値
は MUA で見易いように更に加工しても構いません。

上記のように記事の URL が相対パス表示されている場合は、
`shimbun-expand-url' を使用し、絶対パス表示に変更してからヘッダに収め
ましょう。記事の URL がヘッダの URL と同じ、つまり記事毎に個別に URL
を持たない構造のウェブページもあります。この場合は少しやっかいで、ヘッ
ダ情報取得の段階で、記事の内容も取得しておき、Emacs のメモリに収めてお
く必要があります。具体的には `sb-palmfan.el', `sb-dennou.el',
`sb-tcup.el' の `shimbun-headers' メソッドの定義を参照してください。

ウェブページによっては Date が特定できないものがあります。そういう場合
は無理に特定せずとも `""' を入れておけば OK です。記事の内容を見て初め
て Date が特定できるなら、`shimbun-make-contents' メソッドの中で改めて
ヘッダに Date の情報を入れても OK です。それから、From を決め打ちして
も良い場合もあります。

`message-id' の作成には注意を要します。一部の記事が読めなかったりしま
すので (2) (*Note Getting web page and header information-Footnotes::)、
必ず単一性 (uniqueness) を保証しなければなりません。日付やドメイン、そ
のページの URL の一部を使って文字列を生成することで単一性を確保しましょ
う。その他、`message-id' の一部に必ず `@' を含めるようにし、逆に `:'
は含まないようにしましょう。このルールを守らないとインライン画像がきち
んと出力されませんよ。詳しくは RFC2387, RFC822 を参照してください。

苦労して取得したこれらの情報は `shimbun-create-header' という関数を利
用してヘッダに収めます。

結局 `sb-foobar.el' の中での `shimbun-get-headers' の定義の骨組みはこ
んな風になりますね。

     (luna-define-method shimbun-get-headers ((shimbun shimbun-foobar)
                                              &optional range)
       (let ((regexp "....")
             subject from date id url headers)
         ...
         (catch 'stop
           (while (re-search-forward regexp nil t nil)
             ...
             (when (shimbun-search-id shimbun id)
               (throw 'stop nil))
             (push (shimbun-create-header
                    0 subject from date id "" 0 0 url)
                   headers)))
         headers))

なお、このメソッドの中では `shimbun' という一時変数で、`shimbun' モジュー
ル `shimbun-foobar' のインスタンスにアクセスできます。

ところで、先程保留にした変数 `shimbun-foobar-groups' について説明しま
しょう。

仮に `http://www.foobar.net' の中に読みたい記事グループが二つあっ
て、それぞれの記事のヘッダ情報を得るウェブページが別々の場所にあったとし
ましょう。`http://www.foobar.net/whatsnew/index.hmtl' にサイト
の更新情報が、`http://www.foobar.net/ml/index.html' に ML の記
事アーカイブの一覧があるときなどです。こういう場合は、`shimbun' モ
ジュール `foobar' のグループとして、`foobar.whatsnew',
`foobar.ml' としてアクセスできると便利ですよね。そういう場合は下記
のようにしてみましょう。

     (defvar shimbun-foobar-url "http://www.foobar.net")

     (defvar shimbun-foobar-group-path-alist
       '(("whatsnew" . "/whatsnew/index.html")
         ("ml" . "/ml/index.html")))

     (defvar shimbun-foobar-groups
       (mapcar 'car shimbun-foobar-group-path-alist))

     (luna-define-method shimbun-index-url ((shimbun shimbun-foobar))
       (concat shimbun-foobar-url
               (cdr (assoc (shimbun-current-group-internal shimbun)
                           shimbun-foobar-group-path-alist))))

現在ユーザがアクセスしているグループには
`shimbun-current-group-internal' を使えば分かります。
`shimbun-get-headers' などでもグループが違えば作業内容が違ってくる可能
性もありますね。

なお、`shimbun' モジュール一つにつき、最低でも一つのグループが必要です。
グループの名前の決め方に特に決まりはありませんが、グループ名に悩んだら、
`news' とか `main' などと付けておきましょう。


File: emacs-w3m-ja.info  Node: Getting web page and header information-Footnotes, Up: Getting web page and header information

(1) `Shimbun' モジュール一つにつき、最低でも一つのグループが必要
です。

(2) shimbun の一部の記事が読めないだけならまだしも、下手に
`message-id' を作成すると、貴方が受領する大事なメールのそれとかち
合ってしまい、そのメールが読めなくなる可能性すらあります。



File: emacs-w3m-ja.info, Node: Displaying an article, Next: Inheriting shimbun module, Prev: Getting web page and header information, Up: Shimbun Basics

記事の表示
----------

`shimbun.el' に定義された `shimbun-article' メソッドは、ヘッダ情報から
Xref を取り出し、その URL のウェブページのソースを取得した後に、そのソー
スを入れたワーキングバッファの中で `shimbun-make-contents' を呼びます。
具体的な記事の加工は `shimbun-make-contents' の仕事です。

記事となるウェブページのソースが、どばっとワーキングバッファにぶちまけ
られていると想像してください。`shimbun.el' の標準の
`shimbun-make-contents' は、そのバッファの先頭にまずヘッダ情報を挿入し、
その直後に `<html>' や `<body>' などを、また、バッファの末尾に
`</body>', `</html>' を挿入してくれます。そうやって HTML メールとして
表示させるのです。

     HTML の記事だけでなく、`text/plain' 形式の記事が生成されるように
     することもできます。*Note Making text/plain articles::.

記事を何も加工する必要がなければ `sb-foobar.el' の中では
`shimbun-make-contents' について新たに定義する必要はありません。

単純に記事の前後に捨てたい部分があるだけならば、
`shimbun-foobar-content-start', `shimbun-foobar-content-end' に捨てた
い部分を検索可能な正規表現を指定しておきましょう。

     (defvar shimbun-foobar-content-start "^<body>$")
     (defvar shimbun-foobar-content-end "^<\/body>$")

標準の `shimbun-make-contents' から呼び出された
`shimbun-clear-contents' は、これらの正規表現を利用して、`point-min'
から `shimbun-foobar-content-start' まで、`shimbun-foobar-content-end'
から `point-max' までを切り捨ててくれますよ。但し、これら二つのマッチ
はいずれかが成功しないと切り捨ては行われませんので注意が必要です。

広告などの不要な情報があって、それを細かく検索して捨てたい場合は、
`sb-foobar.el' の中で独自の `shimbun-clear-contents' を定義しておきま
す。

     (luna-define-method shimbun-clear-contents :around ((shimbun shimbun-foobar)
                                                         header)
       ;; cleaning up
       (while (re-search-forward "..." nil t nil)
         (delete-region (match-beginning 0) (match-end 0)))
       (luna-call-next-method))

より具体的な方法は、`sb-ibm-dev.el' が参考になるかもしれません。

先程、*Note Getting web page and header information:: の節で、記事毎に
個別に URL を持たない構造のウェブページの場合、ヘッダ情報取得の段階で、
記事の内容も取得しておき、Emacs のメモリに収めておく必要があると申し上
げました。この場合、`shimbun-article' では上記のような Xref 情報からの
web page の取得は必要になりませんので、ただ Emacs のメモリから取り出し
て、バッファに整形して挿入すれば足ります。具体的には `sb-palmfan.el',
`sb-dennou.el', `sb-tcup.el' の `shimbun-article' メソッドの定義を参照
してください。



File: emacs-w3m-ja.info, Node: Inheriting shimbun module, Next: Making text/plain articles, Prev: Displaying an article, Up: Shimbun Basics

Shimbun モジュールの継承
------------------------

メーリングリストマネージャ (アーカイバ) として有名なものがいくつかあり
ます。

 * Mailman The GNU Mailing List Manager. 以前は `pipermail' と呼ばれていました。詳細は
     `http://www.gnu.org/software/mailman/index.html' をご覧ください。

 * MHonArc詳細は`http://www.oac.uci.edu/indiv/ehood/mhonarc.html' をご覧ください。

 * fml fml mailing list server/manager.  詳細は`http://www.fml.org/software/fml/' をご覧ください。

 * mailarc詳細は `http://cvs.namazu.org/mailarc/' をご覧ください。

貴方が *Note Getting web page and header information:: のステップで取
得したウェブページのソースを分析しているときに、そのソースの中にこれら
メーリングリストマネージャの名前を見つけたら (1) (*Note Inheriting
shimbun module-Footnotes::)、それはすごくラッキーなことです。
`sb-mailman.el', `sb-mhonarc.el', `sb-fml.el', `sb-mailarc.el' に既に
`shimbun-get-headers' などの必要なメソッドが定義されています。これらを
利用してなお足りない部分だけの差分プログラミングをすれば、貴方の
`sb-foobar.el' は早速動きます。


例えば `sb-mailman.el' を利用するなら `sb-foobar.el' の冒頭は、

     (require 'sb-mailman)
     (luna-define-class shimbun-foobar (shimbun-mailman) ())

こんな風になります。これで `shimbun' モジュール `shimbun-foobar' は
`shimbun-mailman' クラスを継承し (2) (*Note Inheriting shimbun
module-Footnotes::)、`shimbun-foobar' の中では、`sb-mailman.el' の中で
定義されているメソッドが標準で使用されることとなります (更にメソッドの
一部を上書きすることも可能です)。

`sb-mailman.el' を実際に利用したサンプルとして、`sb-pilot-mailsync.el'
などをご覧ください。如何に楽ができるかがお分かりになるでしょう。

気を付けることが一つあるとすれば、これらのメーリングリストマネージャの
中には地域化 (localize) されて、例えば日付表示を日本語で行うように改造
されているものがあることです。`sb-mailman.el', `sb-mhonarc.el',
`sb-fml.el', `sb-mailarc.el' はいずれも標準の、英語版のものに対応して
います。これら地域化されたメーリングリストマネージャを利用しているウェ
ブサイトを `shimbun' で読みたいときは、いくつかのメソッドを上書きしな
ければならないかもしれません。


File: emacs-w3m-ja.info  Node: Inheriting shimbun module-Footnotes, Up: Inheriting shimbun module

(1) ウェブページのソースの中にこれらメーリングリストマネージャの名前が
表示されていることが多いです。

(2) つまり `shimbun-mailman' クラスが親クラスになります。



File: emacs-w3m-ja.info, Node: Making text/plain articles, Next: Zenkaku to hankaku conversion, Prev: Inheriting shimbun module, Up: Shimbun Basics

text/plain の記事を作るには
---------------------------

たとえ MUA が HTML の記事を読むことができるように emacs-w3m によって強
化されていても、いくつかの場合には `text/plain' の記事が便利なこともあ
るかもしれません。`sb-foobar' モジュールに `text/html' ではなくて
`text/plain' の記事を作らせるには、二つの方法があります。

 * 一つは `sb-foobar' モジュールに `sb-text' モジュールを継承させる (*Note Inheriting shimbun module::) ことです。以下は
     `sb-foobar' モジュールの冒頭に置くことができる例です。

          (require 'sb-text)
          (luna-define-class shimbun-foobar (shimbun-text) ())

     `sb-text' モジュールは、`text/plain' 形式で記事を生成する
     `shimbun-make-contents' メソッドを提供します。テキストだけの記事
     を掲示するサイトを扱う `shimbun' モジュールには、役に立つでしょう。

 * もう一つは、変数 `shimbun-foobar-prefer-text-plain' を非-`nil' に設定することです。これは `shimbun-make-contents' メソッ
     ドに、`text/plain' 形式で記事を生成させます (実際には、それは
     `sb-text' モジュールが提供する関数を使います)。これは、デフォルト
     の `shimbun-make-contents' を継承するモジュールだけに効果があるこ
     とに注意してください (特に `sb-text' モジュールを継承するモジュー
     ルは、影響されません)。この方式の利点は、ユーザが簡単に
     `text/plain' の記事と `text/html' の記事を切り替えることができる
     ことです。

     それが未定義である場合、変数 `shimbun-foobar-prefer-text-plain'
     のデフォルト値は `nil' です。したがって、`sb-asahi.el' および
     `sb-yomiuri.el' 以外のあらゆる `shimbun' モジュールにおいて、その
     デフォルト値は `nil' です。

     加えて、web ページから意味のあるテキストを切り出すために、変数
     `shimbun-foobar-content-start' および
     `shimbun-foobar-content-end' の代わりに、
     `shimbun-foobar-text-content-start' および
     `shimbun-foobar-text-content-end' を使うことができます (*Note
     Displaying an article::)。前者が未定義だったら、それらの値はデフォ
     ルトで後者の値になります。

どちらの方式を使うにしても、`text/plain' の記事は、画像やリンクなどを
含むことができないことに注意してください。



File: emacs-w3m-ja.info, Node: Zenkaku to hankaku conversion, Next: Coding convention of Shimbun, Prev: Making text/plain articles, Up: Shimbun Basics

全角文字を半角文字に変換する
----------------------------

「全角」または「全角文字」は、幅が広い日本語の文字を呼ぶための俗称です。
また「半角」は、通常の ASCII 文字のための対語です。少なくとも ASCII 文
字セットに対応する、全角文字の完全なセットがあります。

いくつかの日本のウェブサイトは全角文字を多用する傾向があり、それらの記
事は必ずしも読み易くないかもしれません。もしそう感じたら、それら全角の
英数字を半角に変換するこの機能を使うことができます。それには
`shimbun-foobar-japanese-hankaku' 変数を `t' に設定してください。ここ
で `foobar' は、新聞の記事を講読するサーバー名です。つまり、サーバー毎
にそうしなければならないということです。

全角から半角への変換を記事のボディだけで行なわせたいならば、`t' の代わ
りに値 `body' を使ってください。逆に値 `header' または `subject' は、
サブジェクトだけでそれを行なうことを指定します。



File: emacs-w3m-ja.info, Node: Coding convention of Shimbun, Prev: Zenkaku to hankaku conversion, Up: Shimbun Basics

Shimbun ライブラリのコーディング規約
------------------------------------

   * `shimbun.el' では、emacs-w3m の関数を*自由に*使って良い。

 * `sb-*.el' では、これまでと同様に emacs-w3m の関数を直接呼び出すことはしない。`sb-*.el' で必要になる emacs-w3m の関数について
     は `shimbun.el' にスタブを用意する。

   * SpeedBar で利用されているファイル名は避けなければならない。
     `speedbar-0.14beta4' で用いられているファイル名を以下に示す。

     sb-ant.el     sb-html.el    sb-info.el    sb-texinfo.el
     sb-gud.el     sb-image.el   sb-rmail.el   sb-w3.el

 * 参照している WEB サーバの URI を連想させるようなファイル名を選ぶべきである。ただし、曖昧にならない範囲で、国別コード
     (Ex. jp,de,uk,etc) や、組織コード (Ex. edu,com,org,net,etc)、余分
     な部分 (Ex. www) を取り除いても良い。

 * グループ名には USENET に似た形式のものを選ぶべきである。すなわち、グループ名には小文字が好まれる。また、グループの階層構造を
     表すための区切り文字としては、ピリオド (.) が好まれる。



File: emacs-w3m-ja.info, Node: Tips, Next: Mailing List, Prev: Shimbun Library, Up: Top

Emacs-w3m を使う洒落た小物たち
******************************

他の Emacs の応用機能とともに emacs-w3m を便利に使うためのヒント集です。

   * browse-url

     `browse-url' の機能とともに emacs-w3m を使うことができます。例え
     ば、以下の行を `~/.emacs' ファイルに入れてください:

          (setq browse-url-browser-function 'w3m-browse-url)
          (global-set-key "\C-xm" 'browse-url-at-point)

     こうすることによって、Emacs のどのバッファでも、URL のような文字列の上
     で `C-x m' キーをタイプすると、emacs-w3m が起動されます。加えて、
     `C-c C-v' キーをタイプすることによって、まさに編集中の HTML ファ
     イルを emacs-w3m で下見 (preview) することができます (HTML ファイルの編
     集に、Emacs と `html-mode' メジャーモードを使う必要があります)。

     Emacs-w3m のバッファにいるときに、`C-x m' キーをタイプすることに
     よって、emacs-w3m の代わりに他のウェブブラウザを使いたい場合は (そんなこ
     とをしたい人がいるのかな?)、以下のアドバイスを `~/.emacs' ファイル
     に加えてください:

          (defadvice browse-url-at-point
            (around change-browse-url-browser-function activate)
            "Use Netscape only when it is invoked in an emacs-w3m buffer."
            (let ((browse-url-browser-function
                   (if (eq major-mode 'w3m-mode)
                       'browse-url-netscape
                     'w3m-browse-url)))
              ad-do-it))

   * dired

     `dired' のバッファで `C-x m' キーをタイプすることによって、
     emacs-w3m を使って HTML ファイルを閲覧することができます。
     `~/.emacs' ファイルで、以下の設定を使ってください:

          (eval-after-load "dired"
            '(define-key dired-mode-map "\C-xm" 'dired-w3m-find-file))

          (defun dired-w3m-find-file ()
            (interactive)
            (require 'w3m)
            (let ((file (dired-get-filename)))
              (if (y-or-n-p (format "Use emacs-w3m to browse %s? "
                                    (file-name-nondirectory file)))
                  (w3m-find-file file))))

   * hnf-mode

     ハイパー日記システムと emacs-w3m を使って、最新の日記を見ることができま
     す。以下の行を `~/.emacs' ファイルに入れて、`hnf-mode' のバッ
     ファで `C-c C-b' キーをタイプしてください:

          (defun w3m-hnf-browse-url-w3m (url &optional new-window)
            (interactive (browse-url-interactive-arg "URL: "))
            (save-selected-window
              (pop-to-buffer (get-buffer-create "*w3m*"))
              (w3m-browse-url url new-window)))
          (setq hnf-browse-url-browser-function #'w3m-hnf-browse-url-w3m)

   * Gnus

     あなたが Gnus のユーザで、この項がこの Info で初めて読むベージで
     あるのならば、あなたは入り口を間違えましたね。最初に *Note
     Hooking into MUAs:: を見てください。

     デフォルトでは、Gnus は例えば `gnus-treat-strip-banner' のような
     treatment 変数を `text/html' パートに適用しません。自動的に行なわ
     せるには二つの方法があります:

          ;; すべての treatment を text/html パートに適用する。
          (eval-after-load "gnus-art"
            '(add-to-list 'gnus-article-treat-types "text/html"))

          ;; 特定の treatment を text/html パートに適用する。
          (setq gnus-treat-strip-banner '(or t (typep "text/html")))

     詳しいことは *Note 記事のカスタマイズ: (gnus-ja)Customizing
     Articles, を見てください。

     加えて、以下の実験的なコードは `multipart/related' な絵を見るため
     のものです。表示される場所に少々難がありますが。

          (eval-after-load "gnus-art"
            '(or (assoc "multipart/related" gnus-mime-multipart-functions)
                 (setq gnus-mime-multipart-functions
                       (cons
                        (cons
                         "multipart/related"
                         (byte-compile
                          (lambda (handle)
                            (gnus-mime-display-mixed (cdr handle)))))
                        gnus-mime-multipart-functions))))

     HTML メールを読むために `shr' を使うと、それはメールの中の複数の
     HTML パートの間にあるページ区切り (つまり ~L) を消してしまいます。
     以下の advice はそれらのページ区切りを (元々なくても) 追加するた
     めの例です。新聞 (*Note Shimbun Library::) を読むとき役に立つかも
     しれません:

          (defadvice gnus-mime-display-mixed (around add-page-delimiter
                                                     (handles) activate)
            "Add page delimiters to the beginning of succeeding html parts."
            (if (eq mm-text-html-renderer 'shr)
                (progn
                  (gnus-mime-display-part (pop handles))
                  (while handles
                    (if (equal (mm-handle-media-type (car handles))
                               "text/html")
                        (insert "\C-l\n"))
                    (gnus-mime-display-part (pop handles))))
              ad-do-it))

   * yahtml-mode

     Emacs-w3m を使って、`yahtml-mode' でまさに編集中の HTML ファイル
     を下見 (preview) することができます。例です:

          (defadvice yahtml-browse-html
            (around w3m-yahtml-browse-html activate compile)
            (w3m-goto-url (ad-get-arg 0) t))

   * jisx0213

     Emacs では Mule-UCS パッケージに含まれている `jis0213' モジュール
     を使うことによって、JIS X 0213 文字セットを使うことができます。
     `decode-char' 関数が `mucs' によって上書きされてしまう (`jis0213'
     が `mucs' を読み込む) ために、`ucs' CCS に対して正しく動作しなく
     なってしまいますが、さらに `unicode' モジュールを読み込むことによっ
     て、その問題が解決されるように見えるという報告がありました。理由
     はまだ解明されていません。`~/.emacs' ファイル用の例です:

          (require 'unicode)
          (require 'un-define)
          (require 'jisx0213)



File: emacs-w3m-ja.info, Node: Mailing List, Next: Emacs-w3m Functions, Prev: Tips, Up: Top

メーリングリスト、バグリポート
******************************

Emacs-w3m に関するすべてのことがらを話し合うためのメーリングリストが用
意されています。講読していない人も投稿できます。バグを見つけたり、こん
な機能が欲しいなと思ったり、あるいはコードを書きましたという人はどうぞ
投稿してください。単なるユーザだけれどもプログラムに興味があるという人
も、ぜひ参加してください。アドレスは以下の通りです:

     Emacs-w3m メーリングリスト <emacs-w3m@namazu.org>

もし `mail-user-agent' を正しく動作するように設定してあれば、
`report-emacs-w3m-bug' コマンド (または `C-c C-b' キー) を
使ってバグリポートを送ることもできます。

このリストに投稿するときは、日本語か英語を使ってください。多くのメンバー
は日本人です。投稿された記事は公開されていて、ウェブ
(`http://emacs-w3m.namazu.org/ml/') でも読むことができます。

このリストのメッセージをメールで受け取りたい人は、本文に

     subscribe ANATANO Namae

のように書いて (メールアドレスではなくてあなたの名前を書きます)、
`emacs-w3m-ctl@namazu.org' 宛にメールを送るとメーリングリストに登録さ
れます。また、メールを受け取るのをやめるには、本文に

     # bye

と書いたメールを `emacs-w3m-ctl@namazu.org' 宛に送ってください。



File: emacs-w3m-ja.info, Node: Emacs-w3m Functions, Next: External Packages, Prev: Mailing List, Up: Top

Emacs-w3m の関数の詳しい説明
****************************




File: emacs-w3m-ja.info, Node: External Packages, Next: Authors, Prev: Emacs-w3m Functions, Up: Top

お仲間のパッケージたち
**********************

Emacs-w3m は潤沢な機能を提供しますが、さらに便利にするために以下の外部
パッケージを使うのも良いかもしれません。

 * w3m-type-ahead.el w3m-type-ahead.el パッケージは "type ahead" 検索機能 (Mozilla ブ
     ラウザに同じ名前の似た機能があります) を提供します。それは
     isearch に似た操作でアンカーを探すこと (ただし結果はバッファ内の
     アンカーに限定されます) を可能にします。

     w3m-type-ahead.el のダウンロード:
     `http://alioth.debian.org/project/showfiles.php?group_id=30594'

 * newsticker.el Emacs 22 以上で組み込まれている newsticker.el は rss フィードやさ
     らに atom フィードを眺めるための道具です。以下は emacs-w3m ととも
     に newsticker.el を使うための設定例です (`~/.emacs' ファイルに置
     いてください):

          (require 'w3m-load)
          (setq newsticker-html-renderer 'w3m-region
                browse-url-browser-function 'w3m-browse-url)

     詳しくは: *Note Top: (Newsticker)Top.



File: emacs-w3m-ja.info, Node: Authors, Next: Index, Prev: External Packages, Up: Top

このマニュアルを書いた人たち
****************************

 * 白井 秀行 * 土屋 雅稔 * 中島 幹夫 * 中山 洋一 *Romain Francoise  * 山岡 克美 * 大和 正武 * 青田 直大



File: emacs-w3m-ja.info, Node: Index, Prev: Authors, Up: Top

索引
****

* Menu:

* Concept Index::               概念索引
* Key Index::                   キーバインド索引
* Variable Index::              変数索引
* Function Index::              関数索引



File: emacs-w3m-ja.info, Node: Concept Index, Next: Key Index, Prev: Index, Up: Index

概念索引
========

* Menu:

* APEL package:                 Other Requirements.     (line   5)
* Adding a bookmark:            Adding Bookmarks.       (line   5)
* Adding autoload settings:     Minimal Settings.       (line  12)
* Adding new search engines:    Adding New Search Engines.  (line   5)
* Antenna:                      Using Antenna.          (line   5)
* Arrived URLs:                 Tracing History.        (line   5)
* ブックマークに関連した変数:   Bookmark Variables.     (line   5)
* Bookmarks:                    Managing Bookmarks.     (line   5)
* Browsing history:             Tracing History.        (line   5)
* Consulting bookmarks:         Consulting Bookmarks.   (line   5)
* クッキーに関連した変数:       Cookie Variables.       (line   5)
* Creating new buffers:         Creating and killing buffers.  (line   5)
* Customizing user options:     Customizable Variables.  (line   5)
* Displaying images:            Inline Images.          (line   5)
* Downloading files:            Downloading.            (line   5)
* Editing bookmarks:            Editing Bookmarks.      (line   5)
* FLIM package:                 Other Requirements.     (line   5)
* Firewall:                     Minimal Settings.       (line  33)
* フォームに関連した変数:       Form Variables.         (line   5)
* Functions details:            Emacs-w3m Functions.    (line   5)
* 一般的な変数:                 General Variables.      (line   5)
* Getting started:              Getting Started.        (line   5)
* Gifsicle program:             Other Requirements.     (line   5)
* Grouping URLs:                Grouping URLs.          (line   5)
* フック:                       Hooks.                  (line   5)
* 画像に関連した変数:           Image Variables.        (line   5)
* ImageMagick package:          Other Requirements.     (line   5)
* Info-like keymap:             Key Binding.            (line   5)
* Installing emacs-w3m:         Installing Emacs-w3m.   (line   5)
* Installing on non-UNIX-like systems: Non-UNIX-like systems.  (line   5)
* Introduction:                 Introduction.           (line   5)
* Key binding:                  Key Binding.            (line   5)
* Killing buffers:              Creating and killing buffers.  (line   5)
* Lynx-like keymap:             Key Binding.            (line   5)
* Moving in a page:             Moving in a page.       (line   5)
* Mule-UCS package:             Other Requirements.     (line   5)
* その他の変数:                 Other Variables.        (line   5)
* Possible Emacs versions:      Required Emacs Version.  (line   5)
* Proxy gateways:               Minimal Settings.       (line  33)
* Proxy servers:                Minimal Settings.       (line  33)
* Quick Searching:              Quick Searching.        (line   5)
* Reading HTML mails in Gnus:   Gnus.                   (line   5)
* Reporting bugs:               Mailing List.           (line   5)
* Saving images:                Inline Images.          (line  74)
* Search engines:               Using Search Engines.   (line   5)
* Searching:                    The Search Interface.   (line   5)
* Shimbun library:              Shimbun Library.        (line   5)
* Showing the tree structure of local directories: Showing Directory Tree.  (line   5)
* Special URLs:                 Quick Searching.        (line   5)
* Starting up:                  Getting Started.        (line   5)
* Startup file:                 Minimal Settings.       (line  24)
* Subscribing to the emacs-w3m mailing list: Mailing List.  (line   5)
* Switching buffers using the buffer list: Selecting buffers.  (line  47)
* Switching buffers using the minibuffer: Selecting buffers.  (line  42)
* The Antenna interface:        Daily web tracking.     (line   5)
* Tips:                         Tips.                   (line   5)
* Tracking changes in web pages: Using Antenna.         (line   5)
* Using emacs-w3m as a batch command: Launching and Jumping.  (line  20)
* Variables related to antenna: Antenna Variables.      (line   5)
* Variables related to namazu:  Namazu Variables.       (line   5)
* Variables related to perldoc: Perldoc Variables.      (line   5)
* Variables related to searching the web: Search Variables.  (line   5)
* Variables related to session manager: Session Manager Variables.  (line   5)
* Variables related to the dtree feature: Dtree Variables.  (line   5)
* Variables related to the octet feature: Octet Variables.  (line   5)
* Variables related to weather information: Weather Variables.  (line   5)
* Viewing images:               Inline Images.          (line  70)
* Web Newspaper:                Nnshimbun.              (line   5)
* Zooming images:               Inline Images.          (line  79)
* about://antenna/:             Using Antenna.          (line   5)
* article expiry:               Nnshimbun.              (line 154)
* auto-expire:                  Nnshimbun.              (line 154)
* codepage-ex:                  Other Requirements.     (line   5)
* expiry-wait:                  Nnshimbun.              (line 154)
* expiry-wait:                  Nnshimbun.              (line 216)
* gnus-w3m:                     Gnus.                   (line   5)
* group parameters:             Nnshimbun.              (line  75)
* nnshimbun:                    Nnshimbun.              (line   5)
* rfc2368.el:                   Other Requirements.     (line   5)
* `shimbun.el':                 Shimbun Basics.         (line   5)
* shr:                          Gnus.                   (line   5)
* w3m:                          You Need w3m.           (line   5)



File: emacs-w3m-ja.info, Node: Key Index, Next: Variable Index, Prev: Concept Index, Up: Index

キーバインド索引
================

* Menu:

* A:                            Daily web tracking.     (line  35)
* B (Lynx-like キーマップ):     Moving over pages.      (line  24)
* C-?:                          Moving in a page.       (line  35)
* C-?:                          Moving over pages.      (line 119)
* C-S-l (Info-like キーマップ): Launching and Jumping.  (line 110)
* C-c C-<SPC>:                  Tracing History.        (line  61)
* C-c C-                      Tracing History.        (line  61)
* C-c C-a:                      Selecting buffers.      (line  42)
* C-c C-n:                      Moving across buffers.  (line  28)
* C-c C-p:                      Moving across buffers.  (line  22)
* C-c C-s:                      Selecting buffers.      (line  47)
* C-c C-t:                      Creating and killing buffers.  (line  19)
* C-c C-v:                      Tracing History.        (line  65)
* C-c C-w:                      Creating and killing buffers.  (line  25)
* C-c M-w:                      Creating and killing buffers.  (line  29)
* C-u a:                        Adding Bookmarks.       (line   5)
* C-u o (Info-like キーマップ): Tracing History.        (line  53)
* C-u s (Lynx-like キーマップ): Tracing History.        (line  53)
* D (Info-like キーマップ):     Downloading.            (line  23)
* D (Lynx-like キーマップ):     Showing Directory Tree.  (line  51)
* <DEL>:                        Moving in a page.       (line  35)
* <DEL>:                        Moving over pages.      (line 119)
* E (Info-like キーマップ):     HTML File Information.  (line  47)
* E (Lynx-like キーマップ):     HTML File Information.  (line  41)
* G:                            Launching and Jumping.  (line  86)
* H:                            Moving over pages.      (line  40)
* \:                            HTML File Information.  (line  29)
* =:                            HTML File Information.  (line  34)
* |:                            HTML File Information.  (line  56)
* I (Info-like キーマップ):     Inline Images.          (line  31)
* I (Lynx-like キーマップ):     Inline Images.          (line  70)
* . (Lynx-like キーマップ):     Moving in a page.       (line  55)
* , (Lynx-like キーマップ):     Moving in a page.       (line  63)
* M:                            HTML File Information.  (line  52)
* M-I (Info-like キーマップ):   Inline Images.          (line  65)
* M-[:                          Inline Images.          (line  81)
* M-]:                          Inline Images.          (line  86)
* `M-S':                        Session Manager.        (line   8)
* M-T (Lynx-like キーマップ):   Inline Images.          (line  65)
* M-<TAB>:                      Moving in a page.       (line  88)
* M-a:                          Adding Bookmarks.       (line   5)
* M-d (Lynx-like キーマップ):   Downloading.            (line  30)
* M-i:                          Inline Images.          (line  74)
* M-l:                          Moving in a page.       (line  69)
* M-n:                          Creating and killing buffers.  (line  19)
* `M-s':                        Session Manager.        (line  11)
* }:                            Moving in a page.       (line 103)
* {:                            Moving in a page.       (line 108)
* >:                            Moving in a page.       (line  41)
* <:                            Moving in a page.       (line  47)
* ]:                            Moving in a page.       (line  93)
* [:                            Moving in a page.       (line  98)
* ^:                            Moving over pages.      (line  46)
* N (Lynx-like キーマップ):     Moving over pages.      (line  32)
* Q:                            Going back to daily hacking and/or daily writing.  (line  24)
* R:                            Launching and Jumping.  (line 110)
* <RET>:                        Launching and Jumping.  (line  58)
* <RET>:                        Launching and Jumping.  (line  70)
* S (Lynx-like キーマップ):     The Search Interface.   (line  32)
* S-<SPC>:                      Moving in a page.       (line  35)
* S-<SPC>:                      Moving over pages.      (line 119)
* S-<TAB>:                      Moving in a page.       (line  88)
* S-<left> (Info-like キーマップ): Moving in a page.    (line  55)
* S-<mouse-2>:                  Browsing With Mouse Operations.  (line  25)
* S-<right> (Info-like キーマップ): Moving in a page.   (line  63)
* <SPC>:                        Moving in a page.       (line  21)
* <SPC>:                        Moving over pages.      (line  63)
* +:                            Setting up Antenna.     (line  14)
* T (Info-like キーマップ):     Showing Directory Tree.  (line  51)
* T (Lynx-like キーマップ):     Inline Images.          (line  31)
* <TAB>:                        Moving in a page.       (line  77)
* Y (Info-like キーマップ):     Launching and Jumping.  (line 104)
* a:                            Adding Bookmarks.       (line   5)
* b:                            Moving in a page.       (line  35)
* b:                            Moving over pages.      (line 119)
* <backspace>:                  Moving in a page.       (line  35)
* <backspace>:                  Moving over pages.      (line 119)
* <backtab>:                    Moving in a page.       (line  88)
* c (Lynx-like キーマップ):     Launching and Jumping.  (line  97)
* d (Info-like キーマップ):     Downloading.            (line  30)
* d (Lynx-like キーマップ):     Downloading.            (line  23)
* <down> (Lynx-like キーマップ): Moving in a page.      (line  77)
* e (Info-like キーマップ):     HTML File Information.  (line  41)
* e (Lynx-like キーマップ):     HTML File Information.  (line  47)
* g:                            Launching and Jumping.  (line  79)
* i (Info-like キーマップ):     Inline Images.          (line  54)
* l (Info-like キーマップ):     Moving over pages.      (line  24)
* <left> (Lynx-like キーマップ): Moving over pages.     (line  24)
* mouse-2:                      Browsing With Mouse Operations.  (line  20)
* n (Info-like キーマップ):     Moving over pages.      (line  32)
* o (Info-like キーマップ):     Tracing History.        (line  53)
* p (Info-like キーマップ):     Moving over pages.      (line  24)
* q:                            Going back to daily hacking and/or daily writing.  (line  19)
* <right> (Lynx-like キーマップ): Launching and Jumping.  (line  58)
* s (Info-like キーマップ):     The Search Interface.   (line  32)
* s (Lynx-like キーマップ):     Tracing History.        (line  53)
* t (Lynx-like キーマップ):     Inline Images.          (line  54)
* u (Info-like キーマップ):     Moving over pages.      (line  46)
* u (Lynx-like キーマップ):     Launching and Jumping.  (line 104)
* <up> (Lynx-like キーマップ):  Moving in a page.       (line  88)
* v:                            Consulting Bookmarks.   (line   5)
* y (Info-like キーマップ):     Launching and Jumping.  (line  97)



File: emacs-w3m-ja.info, Node: Variable Index, Next: Function Index, Prev: Key Index, Up: Index

変数索引
========

* Menu:

* gnus-keep-backlog:            Nnshimbun.              (line  53)
* mm-inline-text-html-with-images: Gnus.                (line   5)
* mm-inline-text-html-with-w3m-keymap: Gnus.            (line   5)
* mm-text-html-renderer:        Gnus.                   (line   5)
* nnmail-expiry-wait:           Nnshimbun.              (line 154)
* nnmail-expiry-wait-function:  Nnshimbun.              (line 154)
* nnshimbun-default-group-level: Nnshimbun.             (line  73)
* nnshimbun-directory:          Nnshimbun.              (line  67)
* nnshimbun-encapsulate-images: Nnshimbun.              (line  99)
* nnshimbun-group-parameters-alist: Nnshimbun.          (line 143)
* nnshimbun-index-range:        Nnshimbun.              (line 111)
* nnshimbun-keep-backlog:       Nnshimbun.              (line  53)
* nnshimbun-keep-unparsable-dated-articles: Nnshimbun.  (line 231)
* nnshimbun-pre-fetch-article:  Nnshimbun.              (line  89)
* shimbun-local-path:           Shimbun local mode.     (line  25)
* shimbun-slashdot-comment-display: News Sites Supported by Shimbun.  (line 146)
* shimbun-slashdot-comment-threshold: News Sites Supported by Shimbun.  (line 141)
* shimbun-slashdot-get-comments: News Sites Supported by Shimbun.  (line 131)
* shimbun-tech-on-password:     News Sites Supported by Shimbun.  (line 185)
* shimbun-tech-on-user-name:    News Sites Supported by Shimbun.  (line 177)
* shimbun-use-local:            Shimbun local mode.     (line  18)
* w3m-accept-languages:         General Variables.      (line   8)
* w3m-add-referer:              General Variables.      (line  14)
* w3m-add-user-agent:           General Variables.      (line  40)
* w3m-after-cursor-move-hook:   Hooks.                  (line   8)
* w3m-antenna-file:             Antenna Variables.      (line   8)
* w3m-antenna-html-skelton:     Antenna Variables.      (line  14)
* w3m-antenna-refresh-interval: Antenna Variables.      (line  18)
* w3m-antenna-refresh-interval: Daily web tracking.     (line  30)
* w3m-antenna-sites:            Setting up Antenna.     (line   5)
* w3m-antenna-sort-changed-sites-function: Antenna Variables.  (line  29)
* w3m-antenna-sort-unchanged-sites-function: Antenna Variables.  (line  35)
* w3m-arrived-file:             General Variables.      (line  45)
* w3m-async-exec:               Other Variables.        (line   8)
* w3m-auto-show:                General Variables.      (line  49)
* w3m-bookmark-default-section: Bookmark Variables.     (line  21)
* w3m-bookmark-file:            Bookmark Variables.     (line   8)
* w3m-bookmark-file-coding-system: Bookmark Variables.  (line  12)
* w3m-bookmark-menu-open-new-session: Bookmark Variables.  (line  25)
* w3m-bookmark-mode-hook:       Hooks.                  (line  71)
* w3m-broken-proxy-cache:       Other Variables.        (line  13)
* w3m-charset-coding-system-alist: General Variables.   (line  60)
* w3m-coding-system:            General Variables.      (line  65)
* w3m-coding-system-priority-list: General Variables.   (line  70)
* w3m-command:                  General Variables.      (line  75)
* w3m-command-arguments:        Minimal Settings.       (line  33)
* w3m-command-arguments-alist:  General Variables.      (line  93)
* w3m-command-environment:      General Variables.      (line 114)
* w3m-confirm-leaving-secure-page: General Variables.   (line 118)
* w3m-content-type-alist:       General Variables.      (line 125)
* w3m-cookie-accept-bad-cookies: Cookie Variables.      (line   8)
* w3m-cookie-accept-domains:    Cookie Variables.       (line  13)
* w3m-cookie-file:              Cookie Variables.       (line  17)
* w3m-cookie-reject-domains:    Cookie Variables.       (line  21)
* w3m-correct-charset-alist:    General Variables.      (line 145)
* w3m-db-history-display-size:  General Variables.      (line 149)
* w3m-decoder-alist:            General Variables.      (line 153)
* w3m-default-coding-system:    Quick Searching.        (line   5)
* w3m-default-content-type:     General Variables.      (line 162)
* w3m-default-directory:        General Variables.      (line 167)
* w3m-default-display-inline-images: Image Variables.   (line   8)
* w3m-default-save-directory:   General Variables.      (line 180)
* w3m-delete-buffer-hook:       Hooks.                  (line  14)
* w3m-delete-duplicated-empty-lines: General Variables.  (line 184)
* w3m-dirlist-cgi-program:      General Variables.      (line 188)
* w3m-display-hook:             Hooks.                  (line  18)
* w3m-do-cleanup-temp-files:    General Variables.      (line 674)
* w3m-doc-view-content-types:   General Variables.      (line 193)
* w3m-dtree-default-allfiles:   Dtree Variables.        (line   8)
* w3m-dtree-directory-depth:    Dtree Variables.        (line  15)
* w3m-dtree-indent-strings:     Dtree Variables.        (line  21)
* w3m-dtree-stop-strings:       Dtree Variables.        (line  26)
* w3m-edit-function:            General Variables.      (line 198)
* w3m-edit-function-alist:      General Variables.      (line 203)
* w3m-enable-feeling-searchy:   General Variables.      (line 211)
* w3m-encoding-type-alist:      General Variables.      (line 217)
* w3m-favicon-cache-expire-wait: Image Variables.       (line  14)
* w3m-favicon-cache-file:       Image Variables.        (line  19)
* w3m-favicon-default-background: Image Variables.      (line  38)
* w3m-favicon-size:             Image Variables.        (line  25)
* w3m-favicon-type:             Image Variables.        (line  30)
* w3m-favicon-use-cache-file:   Image Variables.        (line  34)
* w3m-file-coding-system:       General Variables.      (line 221)
* w3m-file-name-coding-system:  General Variables.      (line 226)
* w3m-fill-column:              General Variables.      (line 231)
* w3m-follow-redirection:       General Variables.      (line 238)
* w3m-fontify-after-hook:       Hooks.                  (line  24)
* w3m-fontify-before-hook:      Hooks.                  (line  29)
* w3m-form-input-map-buffer-lines: Form Variables.      (line   8)
* w3m-form-input-map-mode-hook: Hooks.                  (line  34)
* w3m-form-input-map-set-hook:  Hooks.                  (line  38)
* w3m-form-input-select-buffer-lines: Form Variables.   (line  12)
* w3m-form-input-select-mode-hook: Hooks.               (line  42)
* w3m-form-input-select-set-hook: Hooks.                (line  46)
* w3m-form-input-textarea-buffer-lines: Form Variables.  (line  16)
* w3m-form-input-textarea-mode-hook: Hooks.             (line  50)
* w3m-form-input-textarea-set-hook: Hooks.              (line  54)
* w3m-form-mouse-face:          Form Variables.         (line  20)
* w3m-form-textarea-directory:  Form Variables.         (line  32)
* w3m-form-treat-textarea-size: Form Variables.         (line  24)
* w3m-form-use-fancy-faces:     Form Variables.         (line  28)
* w3m-form-use-textarea-backup: Form Variables.         (line  32)
* w3m-history-minimize-in-new-session: Other Variables.  (line  23)
* w3m-history-reuse-history-elements: Other Variables.  (line  30)
* w3m-home-page:                Launching and Jumping.  (line  20)
* w3m-horizontal-scroll-columns: Moving in a page.      (line  41)
* w3m-horizontal-scroll-columns: Moving in a page.      (line  47)
* w3m-horizontal-scroll-division: General Variables.    (line 255)
* w3m-horizontal-shift-columns: Moving in a page.       (line  55)
* w3m-horizontal-shift-columns: Moving in a page.       (line  63)
* w3m-icon-directory:           Image Variables.        (line  45)
* w3m-image-default-background: Image Variables.        (line 123)
* w3m-imagick-convert-program:  Image Variables.        (line  49)
* w3m-imitate-widget-button:    General Variables.      (line 277)
* w3m-init-file:                Customizable Variables.  (line   5)
* w3m-init-file:                Minimal Settings.       (line  24)
* w3m-input-coding-system:      General Variables.      (line 294)
* w3m-input-url-provide-initial-content: Other Variables.  (line  68)
* w3m-keep-arrived-urls:        General Variables.      (line 301)
* w3m-keep-cache-size:          General Variables.      (line 305)
* w3m-key-binding:              Key Binding.            (line   5)
* w3m-language:                 General Variables.      (line 315)
* w3m-local-directory-view-method: General Variables.   (line 319)
* w3m-local-find-file-function: General Variables.      (line 326)
* w3m-local-find-file-regexps:  General Variables.      (line 338)
* w3m-mailto-url-function:      General Variables.      (line 363)
* w3m-mailto-url-popup-function-alist: General Variables.  (line 370)
* w3m-make-new-session:         General Variables.      (line 381)
* w3m-mbconv-command:           General Variables.      (line 391)
* w3m-menu-on-forefront:        General Variables.      (line 639)
* w3m-minor-mode:               Gnus.                   (line   5)
* w3m-minor-mode-command-alist: Gnus.                   (line   5)
* w3m-minor-mode-hook:          Hooks.                  (line  58)
* w3m-mode-hook:                Hooks.                  (line  62)
* w3m-namazu-arguments:         Namazu Variables.       (line  12)
* w3m-namazu-command:           Namazu Variables.       (line   8)
* w3m-namazu-default-index:     Namazu Variables.       (line  20)
* w3m-namazu-default-index:     Using Namazu.           (line  38)
* w3m-namazu-index-alist:       Namazu Variables.       (line  29)
* w3m-namazu-index-alist:       Using Namazu.           (line  23)
* w3m-namazu-input-coding-system: Namazu Variables.     (line  34)
* w3m-namazu-output-coding-system: Namazu Variables.    (line  40)
* w3m-namazu-page-max:          Namazu Variables.       (line  46)
* w3m-new-session-in-background: General Variables.     (line 669)
* w3m-no-proxy-domains:         Minimal Settings.       (line  33)
* w3m-output-coding-system:     General Variables.      (line 403)
* w3m-perldoc-command:          Perldoc Variables.      (line   8)
* w3m-perldoc-input-coding-system: Perldoc Variables.   (line  13)
* w3m-perldoc-output-coding-system: Perldoc Variables.  (line  20)
* w3m-perldoc-pod2html-arguments: Perldoc Variables.    (line  30)
* w3m-perldoc-pod2html-command: Perldoc Variables.      (line  25)
* w3m-pixels-per-character:     Image Variables.        (line  66)
* w3m-pixels-per-line:          Image Variables.        (line  75)
* w3m-pop-up-frames:            General Variables.      (line 407)
* w3m-pop-up-windows:           General Variables.      (line 416)
* w3m-popup-frame-parameters:   General Variables.      (line 426)
* w3m-prefer-cache:             General Variables.      (line 432)
* w3m-process-connection-type:  Other Variables.        (line  52)
* w3m-process-modeline-format:  Other Variables.        (line  57)
* w3m-profile-directory:        General Variables.      (line 437)
* w3m-quick-start:              Launching and Jumping.  (line  20)
* w3m-quick-start:              Moving over pages.      (line  40)
* w3m-redirect-with-get:        General Variables.      (line 451)
* w3m-refresh-minimum-interval: General Variables.      (line 628)
* w3m-relationship-estimate-rules: General Variables.   (line 463)
* w3m-resize-image-scale:       Image Variables.        (line  85)
* w3m-resize-images:            Image Variables.        (line  89)
* w3m-search-default-engine:    The Search Interface.   (line  32)
* w3m-search-engine-alist:      Quick Searching.        (line   5)
* w3m-search-thing-at-point-arg: Search Variables.      (line  29)
* w3m-search-word-at-point:     Search Variables.       (line  23)
* w3m-select-buffer-hook:       Hooks.                  (line  67)
* w3m-select-buffer-horizontal-window: General Variables.  (line 468)
* w3m-select-buffer-window-ratio: General Variables.    (line 473)
* w3m-session-automatic-keep-number: Session Manager Variables.  (line  32)
* w3m-session-automatic-save:   Session Manager.        (line  40)
* w3m-session-automatic-title:  Session Manager Variables.  (line  16)
* w3m-session-crash-recovery:   Session Manager.        (line  54)
* w3m-session-crash-recovery-title: Session Manager Variables.  (line  20)
* w3m-session-deleted-keep-number: Session Manager Variables.  (line  28)
* w3m-session-deleted-save:     Session Manager.        (line  40)
* w3m-session-deleted-title:    Session Manager Variables.  (line  24)
* w3m-session-file:             Session Manager Variables.  (line   8)
* w3m-session-load-crashed-sessions: Session Manager.   (line  54)
* w3m-session-load-last-sessions: Session Manager.      (line  46)
* w3m-session-time-format:      Session Manager Variables.  (line  12)
* w3m-session-unknown-title:    Session Manager Variables.  (line  36)
* w3m-show-current-title-in-buffer-tab: Other Variables.  (line  63)
* w3m-show-error-information:   General Variables.      (line 483)
* w3m-show-graphic-icons-in-header-line: Image Variables.  (line  93)
* w3m-show-graphic-icons-in-mode-line: Image Variables.  (line 100)
* w3m-space-before-favicon:     General Variables.      (line 489)
* w3m-space-before-modeline-icon: General Variables.    (line 495)
* w3m-submit-form-safety-check: General Variables.      (line 603)
* w3m-tab-mouse-position-adjuster: Using Tabs.          (line  64)
* w3m-tab-track-mouse:          Using Tabs.             (line  56)
* w3m-terminal-coding-system:   General Variables.      (line 501)
* w3m-toggle-inline-images-permanently: Image Variables.  (line 106)
* w3m-touch-command:            General Variables.      (line 509)
* w3m-track-mouse:              General Variables.      (line 515)
* w3m-treat-image-size:         Image Variables.        (line  53)
* w3m-uri-replace-alist:        Quick Searching.        (line   5)
* w3m-url-local-directory-alist: General Variables.     (line 571)
* w3m-use-ange-ftp:             General Variables.      (line 580)
* w3m-use-cookies:              Cookie Variables.       (line  25)
* w3m-use-cygdrive:             General Variables.      (line 585)
* w3m-use-favicon:              Image Variables.        (line 117)
* w3m-use-filter:               General Variables.      (line 590)
* w3m-use-form:                 General Variables.      (line 598)
* w3m-use-header-line:          General Variables.      (line 608)
* w3m-use-header-line-title:    General Variables.      (line 612)
* w3m-use-mule-ucs:             General Variables.      (line 618)
* w3m-use-refresh:              General Variables.      (line 622)
* w3m-use-symbol:               General Variables.      (line 633)
* w3m-use-tab:                  Using Tabs.             (line  47)
* w3m-use-tab-menubar:          General Variables.      (line 651)
* w3m-use-title-buffer-name:    General Variables.      (line 479)
* w3m-use-toolbar:              General Variables.      (line 660)
* w3m-user-agent:               General Variables.      (line 664)
* w3m-weather-default-area:     Weather Variables.      (line   8)
* w3m-weather-filter-functions: Weather Variables.      (line  13)



File: emacs-w3m-ja.info, Node: Function Index, Prev: Variable Index, Up: Index

関数索引
========

* Menu:

* gnus-article-html:            Gnus.                   (line   5)
* gnus-group-make-shimbun-group: Nnshimbun.             (line  18)
* gnus-group-make-shimbun-groups: Nnshimbun.            (line  40)
* mm-shr:                       Gnus.                   (line   5)
* nnshimbun-generate-download-script: Shimbun local mode.  (line  32)
* octet-find-file:              Octet.                  (line   5)
* w3m:                          Launching and Jumping.  (line  20)
* w3m-antenna:                  Daily web tracking.     (line  35)
* w3m-antenna-add-current-url:  Setting up Antenna.     (line  14)
* w3m-bookmark-add-current-url: Adding Bookmarks.       (line   5)
* w3m-bookmark-add-this-url:    Adding Bookmarks.       (line   5)
* w3m-bookmark-edit:            Editing Bookmarks.      (line  24)
* w3m-bookmark-kill-entry:      Editing Bookmarks.      (line  20)
* w3m-bookmark-undo:            Editing Bookmarks.      (line  29)
* w3m-bookmark-view:            Consulting Bookmarks.   (line   5)
* w3m-browse-url:               Launching and Jumping.  (line  41)
* w3m-close-window:             Going back to daily hacking and/or daily writing.  (line  19)
* w3m-copy-buffer:              Creating and killing buffers.  (line  19)
* w3m-delete-buffer:            Creating and killing buffers.  (line  25)
* w3m-delete-other-buffers:     Creating and killing buffers.  (line  29)
* w3m-download:                 Downloading.            (line  30)
* w3m-download-this-url:        Downloading.            (line  23)
* w3m-dtree:                    Showing Directory Tree.  (line  51)
* w3m-edit-current-url:         HTML File Information.  (line  41)
* w3m-edit-this-url:            HTML File Information.  (line  47)
* w3m-fb-mode:                  Frame Local Buffers.    (line  10)
* w3m-find-file:                Launching and Jumping.  (line  36)
* w3m-gohome:                   Moving over pages.      (line  40)
* w3m-goto-url:                 Launching and Jumping.  (line  79)
* w3m-goto-url-new-session:     Launching and Jumping.  (line  86)
* w3m-history:                  Tracing History.        (line  53)
* w3m-history-restore-position: Tracing History.        (line  65)
* w3m-history-store-position:   Tracing History.        (line  61)
* w3m-horizontal-recenter:      Moving in a page.       (line  69)
* w3m-mouse-view-this-url:      Browsing With Mouse Operations.  (line  20)
* w3m-mouse-view-this-url-new-session: Browsing With Mouse Operations.  (line  25)
* w3m-next-anchor:              Moving in a page.       (line  77)
* w3m-next-buffer:              Moving across buffers.  (line  28)
* w3m-next-form:                Moving in a page.       (line  93)
* w3m-next-image:               Moving in a page.       (line 103)
* w3m-pattern-uri-replace:      General Variables.      (line 557)
* w3m-pipe-source:              HTML File Information.  (line  56)
* w3m-previous-anchor:          Moving in a page.       (line  88)
* w3m-previous-buffer:          Moving across buffers.  (line  22)
* w3m-previous-form:            Moving in a page.       (line  98)
* w3m-previous-image:           Moving in a page.       (line 108)
* w3m-print-current-url:        Launching and Jumping.  (line  97)
* w3m-print-this-url:           Launching and Jumping.  (line 104)
* w3m-quit:                     Going back to daily hacking and/or daily writing.  (line  24)
* w3m-reload-this-page:         Launching and Jumping.  (line 110)
* w3m-save-image:               Inline Images.          (line  74)
* w3m-scroll-down-or-previous-url: Moving in a page.    (line  35)
* w3m-scroll-down-or-previous-url: Moving over pages.   (line 119)
* w3m-scroll-left:              Moving in a page.       (line  41)
* w3m-scroll-right:             Moving in a page.       (line  47)
* w3m-scroll-up-or-next-url:    Moving in a page.       (line  21)
* w3m-scroll-up-or-next-url:    Moving over pages.      (line  63)
* w3m-search:                   The Search Interface.   (line  32)
* w3m-search-uri-replace:       General Variables.      (line 563)
* w3m-select-buffer:            Selecting buffers.      (line  47)
* w3m-session-select:           Session Manager.        (line  11)
* w3m-session-select-delete:    Session Manager.        (line  26)
* w3m-session-select-next:      Session Manager.        (line  38)
* w3m-session-select-open-session-group: Session Manager.  (line  21)
* w3m-session-select-previous:  Session Manager.        (line  42)
* w3m-session-select-quit:      Session Manager.        (line  46)
* w3m-session-select-rename:    Session Manager.        (line  30)
* w3m-session-select-save:      Session Manager.        (line  34)
* w3m-session-select-select:    Session Manager.        (line  17)
* w3m-shift-left:               Moving in a page.       (line  55)
* w3m-shift-right:              Moving in a page.       (line  63)
* w3m-switch-buffer:            Selecting buffers.      (line  42)
* w3m-tab-move-left:            Moving across buffers.  (line  45)
* w3m-tab-move-right:           Moving across buffers.  (line  37)
* w3m-toggle-inline-image:      Inline Images.          (line  54)
* w3m-toggle-inline-images:     Inline Images.          (line  31)
* w3m-turnoff-inline-images:    Inline Images.          (line  65)
* w3m-view-header:              HTML File Information.  (line  34)
* w3m-view-image:               Inline Images.          (line  70)
* w3m-view-next-page:           Moving over pages.      (line  32)
* w3m-view-parent-page:         Moving over pages.      (line  46)
* w3m-view-previous-page:       Moving over pages.      (line  24)
* w3m-view-source:              HTML File Information.  (line  29)
* w3m-view-this-url:            Launching and Jumping.  (line  58)
* w3m-view-this-url:            Launching and Jumping.  (line  70)
* w3m-view-url-with-browse-url: HTML File Information.  (line  52)
* w3m-zoom-in-image:            Inline Images.          (line  86)
* w3m-zoom-out-image:           Inline Images.          (line  81)

Tag table:
Node: Top512
Node: Introduction5441
Node: Getting Started6080
Node: Required Emacs Version6725
Node: You Need w3m7525
Node: Other Requirements7938
Node: Installing Emacs-w3m11618
Node: Non-UNIX-like systems14362
Node: Minimal Settings14925
Node: Basic Usage16698
Node: Browsing Web Pages17251
Node: Key Binding17813
Node: Launching and Jumping18790
Node: Moving in a page21969
Node: Moving over pages24662
Node: Browsing With Mouse Operations28118
Node: Going back to daily hacking and/or daily writing29502
Node: Inline Images30254
Node: Tracing History32535
Node: Managing Bookmarks35843
Node: Adding Bookmarks36284
Node: Consulting Bookmarks37248
Node: Editing Bookmarks37763
Node: Using Tabs38459
Node: Working with buffers40799
Node: Creating and killing buffers41225
Node: Moving across buffers41942
Node: Selecting buffers43560
Node: Downloading45101
Node: Submitting Forms45951
Node: HTML File Information47091
Node: Pretty Good Features48482
Node: Using Search Engines49136
Node: The Search Interface49997
Node: Quick Searching51030
Node: Adding New Search Engines52566
Node: Grouping URLs54334
Node: Weather Information55094
Node: Using Antenna55257
Node: Setting up Antenna55729
Node: Daily web tracking56202
Node: Showing Directory Tree57145
Node: Viewing Perl Documents58399
Node: Using Namazu58577
Node: Octet59995
Node: Frame Local Buffers60360
Node: Session Manager61397
Node: Customizable Variables63009
Node: General Variables65069
Node: Image Variables85979
Node: Form Variables89885
Node: Cookie Variables90779
Node: Bookmark Variables91400
Node: Search Variables92196
Node: Weather Variables93344
Node: Dtree Variables93928
Node: Antenna Variables94885
Node: Perldoc Variables96164
Node: Namazu Variables97076
Node: Octet Variables98781
Node: Session Manager Variables99024
Node: Hooks99681
Node: Other Variables101478
Node: Hooking into MUAs104742
Node: Gnus105540
Node: Mew109133
Node: SEMI MUAs110780
Node: VM112726
Node: Frequently Asked Questions113027
Node: General FAQ113317
Node: Trouble FAQ114678
Node: Shimbun FAQ121508
Node: Known Problems122058
Node: Shimbun Library122217
Node: Nnshimbun123987
Node: Mew Shimbun132421
Node: Shimbun with Wanderlust139827
Node: Shimbun local mode140150
Node: Shimbun Sites141341
Node: Newspapers Supported by Shimbun141763
Node: News Sites Supported by Shimbun151738
Node: Mailing Lists Supported by Shimbun160248
Node: Sport Sites Supported by Shimbun173356
Node: Misc Sites Supported by Shimbun174101
Node: Shimbun Basics184445
Node: Overview185068
Node: Getting web page and header information187328
Node: Displaying an article191998
Node: Inheriting shimbun module194012
Node: Making text/plain articles195875
Node: Zenkaku to hankaku conversion197532
Node: Coding convention of Shimbun198176
Node: Tips198997
Node: Mailing List203921
Node: Emacs-w3m Functions204748
Node: External Packages204908
Node: Authors205759
Node: Index205978
Node: Concept Index206214
Node: Key Index211867
Node: Variable Index218729
Node: Function Index233806

End tag table
